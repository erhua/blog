{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/resource/fuzixiongbing.jpg","path":"resource/fuzixiongbing.jpg","modified":1,"renderable":0},{"_id":"themes/fexo/source/fonts/PoiretOne-Regular.eot","path":"fonts/PoiretOne-Regular.eot","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/PoiretOne-Regular.ttf","path":"fonts/PoiretOne-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/PoiretOne-Regular.woff","path":"fonts/PoiretOne-Regular.woff","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/calligraffitti-regular-webfont.eot","path":"fonts/calligraffitti-regular-webfont.eot","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/calligraffitti-regular-webfont.woff","path":"fonts/calligraffitti-regular-webfont.woff","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/calligraffitti-regular-webfont.woff2","path":"fonts/calligraffitti-regular-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/fontello.eot","path":"fonts/fontello.eot","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/fontello.svg","path":"fonts/fontello.svg","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/fontello.ttf","path":"fonts/fontello.ttf","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/fontello.woff","path":"fonts/fontello.woff","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/fontello.woff2","path":"fonts/fontello.woff2","modified":1,"renderable":1},{"_id":"themes/fexo/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/fexo/source/images/bg.jpg","path":"images/bg.jpg","modified":1,"renderable":1},{"_id":"themes/fexo/source/js/app.js","path":"js/app.js","modified":1,"renderable":1},{"_id":"themes/fexo/source/js/bundle.js","path":"js/bundle.js","modified":1,"renderable":1},{"_id":"themes/fexo/source/js/fastclick.js","path":"js/fastclick.js","modified":1,"renderable":1},{"_id":"themes/fexo/source/js/scroll-spy.js","path":"js/scroll-spy.js","modified":1,"renderable":1},{"_id":"themes/fexo/source/js/util.js","path":"js/util.js","modified":1,"renderable":1},{"_id":"themes/fexo/source/js/zenscroll.js","path":"js/zenscroll.js","modified":1,"renderable":1},{"_id":"themes/fexo/source/sass/styles.scss","path":"sass/styles.scss","modified":1,"renderable":1},{"_id":"themes/fexo/source/css/styles.css","path":"css/styles.css","modified":1,"renderable":1},{"_id":"themes/fexo/source/css/styles.css.map","path":"css/styles.css.map","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/calligraffitti-regular-webfont.ttf","path":"fonts/calligraffitti-regular-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/fexo/source/images/qr-wechat.png","path":"images/qr-wechat.png","modified":1,"renderable":1},{"_id":"source/resource/yunnan/IMG_9729.JPG","path":"resource/yunnan/IMG_9729.JPG","modified":1,"renderable":0},{"_id":"themes/fexo/source/fonts/PoiretOne-Regular.svg","path":"fonts/PoiretOne-Regular.svg","modified":1,"renderable":1},{"_id":"source/resource/yunnan/IMG_9444.JPG","path":"resource/yunnan/IMG_9444.JPG","modified":1,"renderable":0},{"_id":"themes/fexo/source/fonts/calligraffitti-regular-webfont.svg","path":"fonts/calligraffitti-regular-webfont.svg","modified":1,"renderable":1},{"_id":"source/resource/yunnan/IMG_9334.JPG","path":"resource/yunnan/IMG_9334.JPG","modified":1,"renderable":0},{"_id":"source/resource/yunnan/IMG_9428.JPG","path":"resource/yunnan/IMG_9428.JPG","modified":1,"renderable":0},{"_id":"themes/fexo/source/fonts/Lobster-Regular.woff","path":"fonts/Lobster-Regular.woff","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/Lobster-Regular.eot","path":"fonts/Lobster-Regular.eot","modified":1,"renderable":1},{"_id":"themes/fexo/source/fonts/Lobster-Regular.ttf","path":"fonts/Lobster-Regular.ttf","modified":1,"renderable":1},{"_id":"source/resource/yunnan/IMG_9625.JPG","path":"resource/yunnan/IMG_9625.JPG","modified":1,"renderable":0},{"_id":"source/resource/yunnan/IMG_9686.JPG","path":"resource/yunnan/IMG_9686.JPG","modified":1,"renderable":0},{"_id":"source/resource/yunnan/IMG_9540.JPG","path":"resource/yunnan/IMG_9540.JPG","modified":1,"renderable":0},{"_id":"themes/fexo/source/fonts/Lobster-Regular.svg","path":"fonts/Lobster-Regular.svg","modified":1,"renderable":1},{"_id":"source/resource/yunnan/IMG_9472.JPG","path":"resource/yunnan/IMG_9472.JPG","modified":1,"renderable":0},{"_id":"source/resource/yunnan/IMG_9618.JPG","path":"resource/yunnan/IMG_9618.JPG","modified":1,"renderable":0},{"_id":"source/resource/100-gdb-tips.html","path":"resource/100-gdb-tips.html","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"e205d385c6056f148b61156bc02994ba3d05ac26","modified":1552999031030},{"_id":"themes/fexo/LICENSE","hash":"254873dd0da3d669426d67f255854b3d09f4cd24","modified":1552999031234},{"_id":"themes/fexo/README.md","hash":"1c6a9a4676a3e9c66c47ad772c45c9cb435f9d25","modified":1552999031270},{"_id":"themes/fexo/_config.yml","hash":"7ddb9bab089a02b8faa81920ef34cb808713780a","modified":1552999031271},{"_id":"themes/fexo/gulpfile.js","hash":"30a5470d1bb22ff0f43370527dda2933890d36af","modified":1552999031272},{"_id":"themes/fexo/package.json","hash":"8207cbb809c18d514c700338bbb3eb983092a001","modified":1552999031271},{"_id":"source/_posts/100-gdb-tips.md","hash":"abf290667e6c319d7d4711d95b6f5f60b383cf6d","modified":1552999031034},{"_id":"source/_posts/cplusplus学习笔记.md","hash":"b2d0d62251aa5cf3a47162a362576919f6d9efe5","modified":1552999031035},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1552999031033},{"_id":"source/_posts/lua-call-java.md","hash":"4d17122bd5d20de4e254368b819fbc8d0166f8dc","modified":1552999031035},{"_id":"source/_posts/placeholder.md","hash":"4f15f9950674108a8e0c82c80911620d40e06456","modified":1552999031035},{"_id":"source/_posts/python日志打印类.md","hash":"78050423d388911dcfb75adb2c4a0a5a48022c00","modified":1552999031034},{"_id":"source/_posts/summming-up.md","hash":"0b17452e92568575a21d83aebc51526c4a09e8ce","modified":1552999031033},{"_id":"source/_posts/云南之旅.md","hash":"6b128933f5e313b5c4d43d3ae488dd001d0f6b12","modified":1552999031034},{"_id":"source/_posts/广告的双引擎回归测试.md","hash":"8914cecb15cf01329ab5af1b096c91d97b688707","modified":1552999031034},{"_id":"source/_posts/持续发布.md","hash":"bf0a82f8e6fc2434dc90311c831272660311fcdb","modified":1552999031033},{"_id":"source/_posts/排序算法.md","hash":"b4cc3595923c8436b8179b120fc9b315087d659b","modified":1552999031036},{"_id":"source/_posts/观影影评.md","hash":"48095adc5b65b96551cba2fea0162c26f0e36740","modified":1552999031033},{"_id":"source/_posts/设计模式-C-学习.md","hash":"ffbd89624ed7d0b32f208142693d904a7861979f","modified":1552999031036},{"_id":"source/about/index.md","hash":"507996d1aad09278bc94a499deecb92db633801e","modified":1552999031037},{"_id":"source/category/index.md","hash":"838a0ba6b58f4def2b6b3c0d5841288f801bdb85","modified":1552999031031},{"_id":"source/css/personal-style.css","hash":"c95472871a943dadce3cedbe4c0f81c2d5f2c54e","modified":1552999031032},{"_id":"source/e-book/index.md","hash":"e0dc7863e735d05d2c7f04eee5fde3b432da0881","modified":1552999031039},{"_id":"source/project/index.md","hash":"4d60344688c45be4bbb37b3c0a0980489a77300e","modified":1552999031038},{"_id":"source/search/index.md","hash":"2b4f04ea1c1db89414393400333e1ada6fbeede4","modified":1552999031038},{"_id":"source/tag/index.md","hash":"bee4c19d66746750628e1e0ba397e6623a31d70a","modified":1552999031046},{"_id":"themes/fexo/languages/default.yml","hash":"8024ae389a371b88ba2200199d148cb85441e22b","modified":1552999031269},{"_id":"themes/fexo/languages/en.yml","hash":"46409ca1352107db0d12e3620649f50dab89c1f9","modified":1552999031269},{"_id":"themes/fexo/languages/no.yml","hash":"d9a1b34d590f94ab5c03809754e62bc4cf0e8d0f","modified":1552999031269},{"_id":"themes/fexo/languages/zh-CN.yml","hash":"8024ae389a371b88ba2200199d148cb85441e22b","modified":1552999031270},{"_id":"themes/fexo/languages/zh-TW.yml","hash":"b2474b775a8fa0fa3e9e3c58ddb11b20cf65dbc5","modified":1552999031269},{"_id":"themes/fexo/layout/about.ejs","hash":"2da014491a3d4c99f0d1f8d4234792bdbdaeb0a8","modified":1552999031237},{"_id":"themes/fexo/layout/archive.ejs","hash":"1c841544a653ca622f2a4c694f9d6cff75df94a4","modified":1552999031236},{"_id":"themes/fexo/layout/category.ejs","hash":"a9216a0229dadfef656bb0c91fa7abba72865d5f","modified":1552999031235},{"_id":"themes/fexo/layout/index.ejs","hash":"ee3fbfb2f560b3fb1ef074fd2912d759702e4e0f","modified":1552999031236},{"_id":"themes/fexo/layout/layout.ejs","hash":"55bb1a65cca87379c306113b481c7cc5a1e48525","modified":1552999031237},{"_id":"themes/fexo/layout/link.ejs","hash":"f6f3ef389fee05013e77c0acef71ac3fa3cc7103","modified":1552999031235},{"_id":"themes/fexo/layout/post.ejs","hash":"3d2e85478d926c02198c6574493e7f787e9458f7","modified":1552999031235},{"_id":"themes/fexo/layout/project.ejs","hash":"515621da8d0be8c2de4ea34e63b583f14bc6c6e0","modified":1552999031237},{"_id":"themes/fexo/layout/search.ejs","hash":"9f52f953d161cb1ea3fd9f8a502c74e0ad5a57bd","modified":1552999031236},{"_id":"themes/fexo/layout/tag.ejs","hash":"1fb070d4fedc855c7931889b40bff95b5d95286a","modified":1552999031236},{"_id":"themes/fexo/package-lock.json","hash":"e108340138ffbf04fabb7ad608100f0f1c38af7f","modified":1552999031271},{"_id":"source/resource/fuzixiongbing.jpg","hash":"78eb4b8e3da883e8b561eee488a9c2c4037c15e6","modified":1552999031045},{"_id":"themes/fexo/layout/_partial/article.ejs","hash":"f75505424d4f3b6bcf49624b2fbeeaa2aff6db42","modified":1552999031245},{"_id":"themes/fexo/layout/_partial/baidu-analytics.ejs","hash":"19a0ae26e336a0f5f475d231e4984eb891bd1022","modified":1552999031244},{"_id":"themes/fexo/layout/_partial/baidu-push.ejs","hash":"3801a22d0bfe46c118a4ce5187e22121ba02ff7f","modified":1552999031245},{"_id":"themes/fexo/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1552999031237},{"_id":"themes/fexo/layout/_partial/head.ejs","hash":"327a74417dc472fe9e9d180abc4e1fe7c2f7999c","modified":1552999031245},{"_id":"themes/fexo/layout/_partial/home.ejs","hash":"00282a39ed0f22a38b55cedc443bd57c8fa3aceb","modified":1552999031244},{"_id":"themes/fexo/layout/_partial/load-script.ejs","hash":"df9630121a1354e864d3f305744a85c8e4941517","modified":1552999031245},{"_id":"themes/fexo/layout/_partial/style.ejs","hash":"820d44e7b12613ebf449e45addda476b44f70649","modified":1552999031245},{"_id":"themes/fexo/source/fonts/PoiretOne-Regular.eot","hash":"2a4ef0d00fb77d16e37c3da429698b029e7d2d2f","modified":1552999031250},{"_id":"themes/fexo/source/fonts/PoiretOne-Regular.ttf","hash":"2b186ce205301f7f3abd441f0372b72adcd2aee3","modified":1552999031252},{"_id":"themes/fexo/source/fonts/PoiretOne-Regular.woff","hash":"1cebcedde2c52261591bc322b176638798336a24","modified":1552999031254},{"_id":"themes/fexo/source/fonts/calligraffitti-regular-webfont.eot","hash":"4c7bcece73621f648fa71d58fa13c28670fed8ca","modified":1552999031251},{"_id":"themes/fexo/source/fonts/calligraffitti-regular-webfont.woff","hash":"1364845a3815740c572e29c83fd8d54f1c1ef5de","modified":1552999031250},{"_id":"themes/fexo/source/fonts/calligraffitti-regular-webfont.woff2","hash":"ba50c427166090361b0dab4c72136c7b451e86d4","modified":1552999031254},{"_id":"themes/fexo/source/fonts/fontello.eot","hash":"7732065eeaec4614e9548955d9bd30ccd7b149c1","modified":1552999031252},{"_id":"themes/fexo/source/fonts/fontello.svg","hash":"c32ea33c25a9aee152a27ea90eafb237cbdac0ca","modified":1552999031255},{"_id":"themes/fexo/source/fonts/fontello.ttf","hash":"e255d37ca14348e9a8532667a757ab552e58caff","modified":1552999031251},{"_id":"themes/fexo/source/fonts/fontello.woff","hash":"45737fea847f3942ef405f00ea4df940fbb6bbd9","modified":1552999031252},{"_id":"themes/fexo/source/fonts/fontello.woff2","hash":"1dfbc23328582f7cd9bcbe538224f6c762023e43","modified":1552999031256},{"_id":"themes/fexo/source/images/avatar.jpg","hash":"ff94cb3e34a5ccd4be7d6b77eabaf6e3d7a95ae6","modified":1552999031247},{"_id":"themes/fexo/source/images/bg.jpg","hash":"5f9f805e891f308dfe2a79e42fab07184f58d5ef","modified":1552999031247},{"_id":"themes/fexo/source/js/app.js","hash":"cf214a8a0c29bbea9adc45bd15a6e88a8f93e92e","modified":1552999031249},{"_id":"themes/fexo/source/js/bundle.js","hash":"fe2b6d4fbc32c78cd9868fb3b75ad71cf5250f24","modified":1552999031248},{"_id":"themes/fexo/source/js/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1552999031249},{"_id":"themes/fexo/source/js/scroll-spy.js","hash":"08f26e4dfcd0f6af069fd6547bc113c89426b7d4","modified":1552999031249},{"_id":"themes/fexo/source/js/util.js","hash":"a7159ca12fe86bbd41b95aed2021c42884aa4676","modified":1552999031248},{"_id":"themes/fexo/source/js/zenscroll.js","hash":"51e88227a98123246f35a49ec22263973cec8d78","modified":1552999031248},{"_id":"themes/fexo/source/sass/_animate.scss","hash":"7d7653e77750645a424d5a7ecbe59f9f7457287b","modified":1552999031264},{"_id":"themes/fexo/source/sass/_base.scss","hash":"e2597f745ee5d92ba4ef1d98cf720d7f28588428","modified":1552999031268},{"_id":"themes/fexo/source/sass/_common.scss","hash":"5bb6368e8d91639a4b209d4305ede654ef513d71","modified":1552999031263},{"_id":"themes/fexo/source/sass/_fontello.scss","hash":"0a9332dd83ab64487846f7749801c8d6e104d014","modified":1552999031268},{"_id":"themes/fexo/source/sass/_fonts.scss","hash":"74a9e7653ad628199349d7cc0ec9315194ac3691","modified":1552999031257},{"_id":"themes/fexo/source/sass/_highlight-js.scss","hash":"4b6cf6478cdfeb4baa5def1f2116d36ac7100cad","modified":1552999031263},{"_id":"themes/fexo/source/sass/_normalize.scss","hash":"f466245d5ad990c1062481c0e1f8741fb4bfa00e","modified":1552999031268},{"_id":"themes/fexo/source/sass/_type.scss","hash":"f78d73bed280361c527e6111fcd0734431a60031","modified":1552999031267},{"_id":"themes/fexo/source/sass/_variable.scss","hash":"d16ea71577be84049c3cf006818edb94e3e1e0c5","modified":1552999031264},{"_id":"themes/fexo/source/sass/styles.scss","hash":"7d890fc68d4e7d8fa9bb402d7b9ad9f8bbe21460","modified":1552999031263},{"_id":"themes/fexo/source/css/styles.css","hash":"6ef506da7e5f2e3a1e51be862022fcb2bf925de0","modified":1552999031246},{"_id":"themes/fexo/source/css/styles.css.map","hash":"8732b72e7cbc6d292602ea310a8c9f9639e59cc9","modified":1552999031246},{"_id":"themes/fexo/source/fonts/calligraffitti-regular-webfont.ttf","hash":"4688935c427ae40dcbf16523bc11d9fc10e359b5","modified":1552999031252},{"_id":"themes/fexo/source/images/qr-wechat.png","hash":"b9b750ab12f2627ebfea6abf834cffe359d27f5a","modified":1552999031247},{"_id":"themes/fexo/source/sass/pages/_tag.scss","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552999031265},{"_id":"source/resource/yunnan/IMG_9729.JPG","hash":"de9e2717cfe33a428e0621fb68df283dac10eba9","modified":1552999031043},{"_id":"themes/fexo/layout/_partial/component/back-top.ejs","hash":"fa891596043765893fceb83978e5f85e01e6a8c4","modified":1552999031244},{"_id":"themes/fexo/layout/_partial/component/category-box.ejs","hash":"8dfc6eb4b1da4f3375b6d6cf7806dd10bc86baf3","modified":1552999031240},{"_id":"themes/fexo/layout/_partial/component/category.ejs","hash":"75434cd1cdf23fce3013e1649df684815f8f7e83","modified":1552999031239},{"_id":"themes/fexo/layout/_partial/component/changyan.ejs","hash":"234be511155ead504de583a59158b67b66f76e8f","modified":1552999031238},{"_id":"themes/fexo/layout/_partial/component/comments.ejs","hash":"75599c9b3cd77415cddbe4ff7ce1851999aa4955","modified":1552999031241},{"_id":"themes/fexo/layout/_partial/component/date.ejs","hash":"517719b3c97d470c2b9211f757fc50384b21dfd3","modified":1552999031242},{"_id":"themes/fexo/layout/_partial/component/disqus.ejs","hash":"42c1359fb919518deaa6421eb03f979258e59262","modified":1552999031238},{"_id":"themes/fexo/layout/_partial/component/donation.ejs","hash":"1c9cf3fd62911404694704fe810684c797dfb64c","modified":1552999031244},{"_id":"themes/fexo/layout/_partial/component/duoshuo.ejs","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1552999031242},{"_id":"themes/fexo/layout/_partial/component/gentie.ejs","hash":"10565634d704f797726afca1aafd04c7ebdfe44d","modified":1552999031241},{"_id":"themes/fexo/layout/_partial/component/gitalk.ejs","hash":"4f0b546f2d2d8e51c4523a1bf797456f96c44342","modified":1552999031238},{"_id":"themes/fexo/layout/_partial/component/gitment.ejs","hash":"4c9a95ec1adcbd9dfe44270d8c83b6b41f0ec48d","modified":1552999031243},{"_id":"themes/fexo/layout/_partial/component/hypercomments.ejs","hash":"872a23d69cbe8f469dc3371bdbc28f3af40f12cb","modified":1552999031244},{"_id":"themes/fexo/layout/_partial/component/item-category-name.ejs","hash":"a17a7a8d37f57d62d85c31e364090853e661a1ba","modified":1552999031239},{"_id":"themes/fexo/layout/_partial/component/item-post.ejs","hash":"8940e9542f5b9fe599a31b0f20d3f6987928672b","modified":1552999031240},{"_id":"themes/fexo/layout/_partial/component/item-tag.ejs","hash":"fb7bb83bb70e8fdba4ff94bc413c641196f474f9","modified":1552999031239},{"_id":"themes/fexo/layout/_partial/component/item-year.ejs","hash":"4abef5751ea068c3b12ad2ffbc96b7b70f23d2cd","modified":1552999031241},{"_id":"themes/fexo/layout/_partial/component/modal.ejs","hash":"292a11a47e751b8cfdb9ff85fd23ceb3b75fd30e","modified":1552999031243},{"_id":"themes/fexo/layout/_partial/component/page-header.ejs","hash":"366edcd8af0c1449fb6a57aea1f81111752e1f41","modified":1552999031243},{"_id":"themes/fexo/layout/_partial/component/pagination.ejs","hash":"c779f82f764d6ce2285043e9797992ebb7160cd1","modified":1552999031239},{"_id":"themes/fexo/layout/_partial/component/prev-net.ejs","hash":"64c9292926391920901cf04f4f1f5aa41fb872d7","modified":1552999031238},{"_id":"themes/fexo/layout/_partial/component/tag-box.ejs","hash":"3441860e795b275804bd109615d79d52ce0415f7","modified":1552999031241},{"_id":"themes/fexo/layout/_partial/component/tag-list.ejs","hash":"05d0e5182f5b622393d408fc85c64c886999eb36","modified":1552999031240},{"_id":"themes/fexo/layout/_partial/component/title.ejs","hash":"713cb479e20e6843095fb23db5213c66d2259a84","modified":1552999031240},{"_id":"themes/fexo/layout/_partial/component/toc.ejs","hash":"cad46d32d7167a4e2e6231567d5fa7668658ee65","modified":1552999031243},{"_id":"themes/fexo/layout/_partial/component/toolbox.ejs","hash":"9c5de565ca94666126fc88fc52fc24f5eb4654c7","modified":1552999031242},{"_id":"themes/fexo/layout/_partial/component/uyan.ejs","hash":"afe757c6f45d24640b22d90db6f2799000c6f994","modified":1552999031243},{"_id":"themes/fexo/layout/_partial/component/valine.ejs","hash":"2b49108282152e549c4d57765ec386bc741828fc","modified":1552999031240},{"_id":"themes/fexo/source/fonts/PoiretOne-Regular.svg","hash":"e21109783f218cb7849b12e867e0b775ce3fadda","modified":1552999031256},{"_id":"themes/fexo/source/sass/component/_back-top.scss","hash":"fadf3d3987eeee78b5c9ebbad00e6bb056429563","modified":1552999031260},{"_id":"themes/fexo/source/sass/component/_category-box.scss","hash":"50825816e002fcbbfcea4788045ecf655070f1cf","modified":1552999031258},{"_id":"themes/fexo/source/sass/component/_comments.scss","hash":"3e1161b25336bf974e22df15c4e574e3ac1960f6","modified":1552999031261},{"_id":"themes/fexo/source/sass/component/_donation.scss","hash":"e2be24eccf94dfed2b2bd7da6c8fbeb5475c8116","modified":1552999031259},{"_id":"themes/fexo/source/sass/component/_hint.scss","hash":"dd8e7ac2f17a44c7dff4347290235c621d5b0776","modified":1552999031259},{"_id":"themes/fexo/source/sass/component/_index.scss","hash":"96b7fc78bf9ca5397dd73ab1351823df605a92c7","modified":1552999031257},{"_id":"themes/fexo/source/sass/component/_item-category-name.scss","hash":"0422c181d03081c9bd870756f78c1dc97a77bd09","modified":1552999031260},{"_id":"themes/fexo/source/sass/component/_item-post.scss","hash":"5ffda36360fd42c85806131f6f8bcb7b701b701c","modified":1552999031262},{"_id":"themes/fexo/source/sass/component/_item-title.scss","hash":"cae94fbf485b6570a5cb7821da0e296d29b5919c","modified":1552999031261},{"_id":"themes/fexo/source/sass/component/_item-year.scss","hash":"4a85b4fb8f7a879ee6fdb949465697b32406ff92","modified":1552999031259},{"_id":"themes/fexo/source/sass/component/_list-post.scss","hash":"97f153db29496f6c3c8853e522a7bd3d4c0d34a7","modified":1552999031261},{"_id":"themes/fexo/source/sass/component/_modal.scss","hash":"7d4463b9d28525455aa09064d2e95b6ec6b38762","modified":1552999031262},{"_id":"themes/fexo/source/sass/component/_page-header.scss","hash":"5ecd7e742109acebc84e0bf612d890ff7198b4c9","modified":1552999031258},{"_id":"themes/fexo/source/sass/component/_pagination.scss","hash":"22442610082db7748ed845b2da4ad8defcc70542","modified":1552999031261},{"_id":"themes/fexo/source/sass/component/_prev-net.scss","hash":"6e5847782d5e1c0c3edafc735cb83d7f6ab1e75e","modified":1552999031258},{"_id":"themes/fexo/source/sass/component/_table.scss","hash":"ae548d0a21c5358607f3bf187c01d48c7d08531e","modified":1552999031260},{"_id":"themes/fexo/source/sass/component/_tag-box.scss","hash":"2f033e2b35c96adda32bce15b6c33f9eebcaa847","modified":1552999031263},{"_id":"themes/fexo/source/sass/component/_toc.scss","hash":"16ebf02f4b371d9a833dc002e9354a40980e6b39","modified":1552999031260},{"_id":"themes/fexo/source/sass/component/_toolbox-mobile.scss","hash":"b59636ae0f5ac6d4a0fc95f5140ab7cc69b8eff5","modified":1552999031262},{"_id":"themes/fexo/source/sass/component/_toolbox.scss","hash":"21665610ca4212def73b767f4efbe2ff48dd491e","modified":1552999031258},{"_id":"themes/fexo/source/sass/pages/_about.scss","hash":"47f3bf8f2c7b690f343d13dfdb6d0a1797d77833","modified":1552999031265},{"_id":"themes/fexo/source/sass/pages/_archive.scss","hash":"723062e099a67565c87c54e912cff1102d453d0b","modified":1552999031266},{"_id":"themes/fexo/source/sass/pages/_category.scss","hash":"3b2c188c43fd4b908e0905f5ea9b6fef9edf598e","modified":1552999031265},{"_id":"themes/fexo/source/sass/pages/_home.scss","hash":"32b68b8779e7a010051a631aebbd92b1c86bfc6d","modified":1552999031267},{"_id":"themes/fexo/source/sass/pages/_index.scss","hash":"fe46ce0d24d17aa5ac39997b9bbef5324eac9aee","modified":1552999031265},{"_id":"themes/fexo/source/sass/pages/_link.scss","hash":"3a29191bed2c471e05e6ef21d74f769e23192cd1","modified":1552999031267},{"_id":"themes/fexo/source/sass/pages/_post.scss","hash":"17190026311a972f34847877212577e9af90aad6","modified":1552999031267},{"_id":"themes/fexo/source/sass/pages/_project.scss","hash":"6b602e0fc5fff2e4b295eca9fd5c82794733cf3f","modified":1552999031266},{"_id":"themes/fexo/source/sass/pages/_search.scss","hash":"fd477d09e9eca14416cd03e6312ddccaa4c46689","modified":1552999031266},{"_id":"source/resource/yunnan/IMG_9444.JPG","hash":"23d67212ac4570713178e4b24a3c3ecd0ecd20dd","modified":1552999031041},{"_id":"themes/fexo/source/fonts/calligraffitti-regular-webfont.svg","hash":"3f1f4e7974e2cff38f52daf44697048c3c4492fe","modified":1552999031256},{"_id":"source/resource/yunnan/IMG_9334.JPG","hash":"659b6971f1360996c96566c86982c23f2297139d","modified":1552999031042},{"_id":"source/resource/yunnan/IMG_9428.JPG","hash":"7a4028874b7d2d437c0a3f1ac7e54fc87eac4872","modified":1552999031044},{"_id":"themes/fexo/source/fonts/Lobster-Regular.woff","hash":"298b80b1c9f694e1a055d62a5d809863c89baf50","modified":1552999031251},{"_id":"themes/fexo/source/fonts/Lobster-Regular.eot","hash":"4f0c85f63beb0d95610317e16f1d4acdd2962eee","modified":1552999031254},{"_id":"themes/fexo/source/fonts/Lobster-Regular.ttf","hash":"50a84291b7012bfdcf9ff5116d6c7aa3f257f37f","modified":1552999031255},{"_id":"source/resource/yunnan/IMG_9625.JPG","hash":"c1c74f2be226974fc4a93722019068678ab842b3","modified":1552999031041},{"_id":"source/resource/yunnan/IMG_9686.JPG","hash":"b845856badbc7a91fdc4107371fda3f7cfb49a0a","modified":1552999031042},{"_id":"source/resource/yunnan/IMG_9540.JPG","hash":"a919f67218645c826a0d408627be09b736f180a2","modified":1552999031040},{"_id":"themes/fexo/source/fonts/Lobster-Regular.svg","hash":"be1cab622c673942fb4d11a23c012227938b4792","modified":1552999031253},{"_id":"source/resource/yunnan/IMG_9472.JPG","hash":"4bddaaa8b43114cffb25bacb871e96abf0b8d91c","modified":1552999031043},{"_id":"source/resource/yunnan/IMG_9618.JPG","hash":"89d9c2ac2969129a0047636d464c9524594e937a","modified":1552999031041},{"_id":"source/resource/100-gdb-tips.html","hash":"07877a74316c1dcf4ffe9d54d49af54df2aff46a","modified":1552999031045},{"_id":"public/css/personal-style.css","hash":"14d3f89e2bce9028021a445adb9939a9fbcd12b8","modified":1552999662646},{"_id":"public/about/index.html","hash":"6cc337b7731d15077c65e4ae75fcc2656334965e","modified":1552999662879},{"_id":"public/category/index.html","hash":"0ca30b3c1d1a0692af20fffecb78565c27c32d83","modified":1552999662879},{"_id":"public/e-book/index.html","hash":"0aff52efcf2c46a902f5f4d76582309f285b1b39","modified":1552999662879},{"_id":"public/project/index.html","hash":"142cd1c0ec0a9b5c776728d48782a5d112d0bb0f","modified":1552999662879},{"_id":"public/search/index.html","hash":"d44261627771f52ac1e0b16f3f2e74af3109b151","modified":1552999662879},{"_id":"public/tag/index.html","hash":"c52b878c15d714e66a4abaf46a80c3efb874d35a","modified":1552999662880},{"_id":"public/2019/03/19/hello-world/index.html","hash":"84dc177c414fe5a81a50d75cb70dd33db7f997e8","modified":1552999662880},{"_id":"public/2018/06/03/设计模式-C-学习/index.html","hash":"ce3422f11737635faca85ac77be705a9be9c5ee3","modified":1552999662880},{"_id":"public/2018/04/10/广告的双引擎回归测试/index.html","hash":"2d1f3a559154cf57d13608a2c62a9b6d8b846a5a","modified":1552999662880},{"_id":"public/2018/04/05/summming-up/index.html","hash":"dd64ea9c56ec2b08e43321d2fc4d578bc3481e07","modified":1552999662880},{"_id":"public/2018/03/14/持续发布/index.html","hash":"33b8aee001e22b10cc86bf2cfd9e150800a619a6","modified":1552999662880},{"_id":"public/2017/11/21/placeholder/index.html","hash":"31b0a0744b6903742671c83dd53c0b1d7e0e0d6d","modified":1552999662880},{"_id":"public/2017/09/15/lua-call-java/index.html","hash":"6ef375973bdfeeb949998471c691d16f98e5b945","modified":1552999662880},{"_id":"public/2017/09/10/观影影评/index.html","hash":"1b3f31dc950a5f574aaea16123841c0d7c596414","modified":1552999662880},{"_id":"public/2016/10/10/云南之旅/index.html","hash":"a40ec4954aed2a32962f1388d8e71d7a9f0f44c5","modified":1552999662881},{"_id":"public/2015/09/07/100-gdb-tips/index.html","hash":"f66bcfd46dfca5b4599ea98fc633d9c5be06159c","modified":1552999662881},{"_id":"public/archives/index.html","hash":"999256086c9e9008479487294e86ee22d12332eb","modified":1552999662881},{"_id":"public/archives/2015/index.html","hash":"1695d0e7e2e3395ecbbf98a51ad5597b5cee1b41","modified":1552999662881},{"_id":"public/archives/2015/09/index.html","hash":"39ce6bf6dad155ca5a7848b1a357e6f655cf04a1","modified":1552999662881},{"_id":"public/archives/2016/index.html","hash":"4d8a4a69410de8241e7b061839166b06b4ba4669","modified":1552999662881},{"_id":"public/archives/2016/10/index.html","hash":"ca93f780ff3966d43ebeb47b367b5b70f617bb73","modified":1552999662881},{"_id":"public/archives/2017/index.html","hash":"d987504ed9214e6a6b73a69682f1b944d00d577e","modified":1552999662882},{"_id":"public/archives/2017/09/index.html","hash":"2fa4f6ea34385fd83728a04e18f4f5f0c5f9d3f7","modified":1552999662882},{"_id":"public/archives/2017/11/index.html","hash":"edd6f34e8d50df9a4c82fa08f92b58d31bcd1a08","modified":1552999662882},{"_id":"public/archives/2018/index.html","hash":"59c9832c297c9b54ad4a683f07e3e5b9f292f02f","modified":1552999662882},{"_id":"public/archives/2018/03/index.html","hash":"4cd2579c40f01c91267aeded381422d396a944c9","modified":1552999662882},{"_id":"public/archives/2018/04/index.html","hash":"28c8e1191b9cb40897146af5df91753aa71a5c3d","modified":1552999662882},{"_id":"public/archives/2018/06/index.html","hash":"d3e5f98127ae4a4ee1d93dc038800177f1b1e9f5","modified":1552999662882},{"_id":"public/archives/2019/index.html","hash":"0835978d1d93d802b07c1383ba2fee7246779dc9","modified":1552999662882},{"_id":"public/archives/2019/03/index.html","hash":"f8737402eeb868f58198a258531d16d2350c24d2","modified":1552999662882},{"_id":"public/categories/调试工具/index.html","hash":"039bb5c6c8f8752d80a0d13555c53518463ae49a","modified":1552999662882},{"_id":"public/categories/JAVA语言/index.html","hash":"52b5a94daf7086f0f571761be2a108497b65a26f","modified":1552999662882},{"_id":"public/categories/Python语言/index.html","hash":"4d3750904d5d993b2b64c8e9f5de5e461aecb037","modified":1552999662882},{"_id":"public/categories/生活娱乐/index.html","hash":"831924e58564c10b9df927685d451fa8f0c95274","modified":1552999662882},{"_id":"public/categories/C/index.html","hash":"fee8ee87466ce016d21ae6dd8c3cb5bfc05d0666","modified":1552999662882},{"_id":"public/index.html","hash":"2e9c45803b444c34fd7bcf9abbc4246adb14cdd4","modified":1552999662882},{"_id":"public/tags/gdb-tip/index.html","hash":"4a2545be6fa78bdd81d1c1d9c2496d9b3b667d9e","modified":1552999662883},{"_id":"public/tags/Lua/index.html","hash":"c010882ae2398e458d7d34b4bb93afb998352b99","modified":1552999662883},{"_id":"public/tags/旅行/index.html","hash":"346bf6440031b9b10c08d12b29df4afad84ca616","modified":1552999662883},{"_id":"public/tags/algorithm/index.html","hash":"179dad69da0a4077f7fe71933abf84fc1059f442","modified":1552999662883},{"_id":"public/tags/movie/index.html","hash":"e2fad77fc3d03d13342d1da4bcb69c26dae104f8","modified":1552999662883},{"_id":"public/tags/C/index.html","hash":"1e80caae4f05bd83a9a8b5a11c6502cfd9460a84","modified":1552999662883},{"_id":"public/2018/04/08/排序算法/index.html","hash":"99d76a041d4ff26096e2ba56405382ad9512820e","modified":1552999662883},{"_id":"public/2017/09/22/cplusplus学习笔记/index.html","hash":"f37db098e8df03b5c02979b16ff175d4dc852d60","modified":1552999662883},{"_id":"public/2016/10/10/python日志打印类/index.html","hash":"0e667814010204b67788a3592e389102100b05fe","modified":1552999662883},{"_id":"public/fonts/PoiretOne-Regular.eot","hash":"2a4ef0d00fb77d16e37c3da429698b029e7d2d2f","modified":1552999662891},{"_id":"public/fonts/PoiretOne-Regular.ttf","hash":"2b186ce205301f7f3abd441f0372b72adcd2aee3","modified":1552999662891},{"_id":"public/fonts/PoiretOne-Regular.woff","hash":"1cebcedde2c52261591bc322b176638798336a24","modified":1552999662891},{"_id":"public/fonts/calligraffitti-regular-webfont.eot","hash":"4c7bcece73621f648fa71d58fa13c28670fed8ca","modified":1552999662891},{"_id":"public/fonts/calligraffitti-regular-webfont.woff","hash":"1364845a3815740c572e29c83fd8d54f1c1ef5de","modified":1552999662891},{"_id":"public/fonts/calligraffitti-regular-webfont.woff2","hash":"ba50c427166090361b0dab4c72136c7b451e86d4","modified":1552999662891},{"_id":"public/fonts/fontello.eot","hash":"7732065eeaec4614e9548955d9bd30ccd7b149c1","modified":1552999662891},{"_id":"public/fonts/fontello.svg","hash":"c32ea33c25a9aee152a27ea90eafb237cbdac0ca","modified":1552999662891},{"_id":"public/fonts/fontello.ttf","hash":"e255d37ca14348e9a8532667a757ab552e58caff","modified":1552999662891},{"_id":"public/fonts/fontello.woff","hash":"45737fea847f3942ef405f00ea4df940fbb6bbd9","modified":1552999662891},{"_id":"public/fonts/fontello.woff2","hash":"1dfbc23328582f7cd9bcbe538224f6c762023e43","modified":1552999662892},{"_id":"public/images/avatar.jpg","hash":"ff94cb3e34a5ccd4be7d6b77eabaf6e3d7a95ae6","modified":1552999662892},{"_id":"public/images/bg.jpg","hash":"5f9f805e891f308dfe2a79e42fab07184f58d5ef","modified":1552999662892},{"_id":"public/sass/styles.scss","hash":"7d890fc68d4e7d8fa9bb402d7b9ad9f8bbe21460","modified":1552999662892},{"_id":"public/css/styles.css.map","hash":"8732b72e7cbc6d292602ea310a8c9f9639e59cc9","modified":1552999662897},{"_id":"public/fonts/calligraffitti-regular-webfont.ttf","hash":"4688935c427ae40dcbf16523bc11d9fc10e359b5","modified":1552999662897},{"_id":"public/images/qr-wechat.png","hash":"b9b750ab12f2627ebfea6abf834cffe359d27f5a","modified":1552999662897},{"_id":"public/js/app.js","hash":"a6d6e7fba3d69d0dec2c4d18debe0dc4cc7ab319","modified":1552999662902},{"_id":"public/js/util.js","hash":"8136da2bec1faf5fe3e14fa436f501292fca8c07","modified":1552999662903},{"_id":"public/js/scroll-spy.js","hash":"81b81362fcd63592045a673b54ce1edb7a6e3028","modified":1552999662903},{"_id":"public/resource/fuzixiongbing.jpg","hash":"78eb4b8e3da883e8b561eee488a9c2c4037c15e6","modified":1552999662903},{"_id":"public/resource/yunnan/IMG_9729.JPG","hash":"de9e2717cfe33a428e0621fb68df283dac10eba9","modified":1552999662903},{"_id":"public/fonts/PoiretOne-Regular.svg","hash":"e21109783f218cb7849b12e867e0b775ce3fadda","modified":1552999662903},{"_id":"public/fonts/calligraffitti-regular-webfont.svg","hash":"3f1f4e7974e2cff38f52daf44697048c3c4492fe","modified":1552999662903},{"_id":"public/js/bundle.js","hash":"fe2b6d4fbc32c78cd9868fb3b75ad71cf5250f24","modified":1552999662909},{"_id":"public/js/zenscroll.js","hash":"bea2a3571555fdae64e8fc56f161f9a4f427b335","modified":1552999662909},{"_id":"public/resource/yunnan/IMG_9444.JPG","hash":"23d67212ac4570713178e4b24a3c3ecd0ecd20dd","modified":1552999662909},{"_id":"public/js/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1552999662921},{"_id":"public/css/styles.css","hash":"36eaef3801c3fc5c962b5a46b949bace5b57b851","modified":1552999662927},{"_id":"public/resource/yunnan/IMG_9428.JPG","hash":"7a4028874b7d2d437c0a3f1ac7e54fc87eac4872","modified":1552999662927},{"_id":"public/fonts/Lobster-Regular.woff","hash":"298b80b1c9f694e1a055d62a5d809863c89baf50","modified":1552999662936},{"_id":"public/fonts/Lobster-Regular.eot","hash":"4f0c85f63beb0d95610317e16f1d4acdd2962eee","modified":1552999662937},{"_id":"public/fonts/Lobster-Regular.ttf","hash":"50a84291b7012bfdcf9ff5116d6c7aa3f257f37f","modified":1552999662937},{"_id":"public/resource/yunnan/IMG_9334.JPG","hash":"659b6971f1360996c96566c86982c23f2297139d","modified":1552999662940},{"_id":"public/resource/yunnan/IMG_9625.JPG","hash":"c1c74f2be226974fc4a93722019068678ab842b3","modified":1552999662943},{"_id":"public/resource/yunnan/IMG_9686.JPG","hash":"b845856badbc7a91fdc4107371fda3f7cfb49a0a","modified":1552999662943},{"_id":"public/resource/yunnan/IMG_9540.JPG","hash":"a919f67218645c826a0d408627be09b736f180a2","modified":1552999662946},{"_id":"public/fonts/Lobster-Regular.svg","hash":"be1cab622c673942fb4d11a23c012227938b4792","modified":1552999662946},{"_id":"public/resource/yunnan/IMG_9472.JPG","hash":"4bddaaa8b43114cffb25bacb871e96abf0b8d91c","modified":1552999662946},{"_id":"public/resource/yunnan/IMG_9618.JPG","hash":"89d9c2ac2969129a0047636d464c9524594e937a","modified":1552999662952},{"_id":"public/resource/100-gdb-tips.html","hash":"07877a74316c1dcf4ffe9d54d49af54df2aff46a","modified":1552999662966}],"Category":[{"name":"调试工具","_id":"cjtfrwgbu0004b30nb80clk92"},{"name":"JAVA语言","_id":"cjtfrwgc1000bb30nisg6eizo"},{"name":"Python语言","_id":"cjtfrwgc6000jb30n9810h4i6"},{"name":"生活娱乐","_id":"cjtfrwgce000pb30ngiqfnxq9"},{"name":"C++","_id":"cjtfrwgdu0013b30n3d90qg34"}],"Data":[],"Page":[{"title":"about","layout":"about","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: about\nlayout: about\ncomments: false\n---","date":"2019-03-19T12:37:11.037Z","updated":"2019-03-19T12:37:11.037Z","path":"about/index.html","_id":"cjtfrwgbp0001b30nyw4ztuam","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"category","layout":"category","comments":0,"_content":"","source":"category/index.md","raw":"---\ntitle: category\nlayout: category\ncomments: false\n---","date":"2019-03-19T12:37:11.031Z","updated":"2019-03-19T12:37:11.031Z","path":"category/index.html","_id":"cjtfrwgbs0003b30n6e609yfw","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  background-image: url('/images/bg.jpg')\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}","source":"css/personal-style.css","raw":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  background-image: url('/images/bg.jpg')\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}","date":"2019-03-19T12:37:11.032Z","updated":"2019-03-19T12:37:11.032Z","path":"css/personal-style.css","layout":"false","title":"","comments":1,"_id":"cjtfrwgbw0007b30n0pywrrla","content":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  background-image: url('/images/bg.jpg')\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}","site":{"data":{}},"excerpt":"","more":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  background-image: url('/images/bg.jpg')\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}"},{"title":"常用电子书和链接整理","_content":"\n* [C++手册](http://www.cplusplus.com/reference/)  \n* [C++ 风格指南](http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/contents/) \n* [谷歌C++测试框架](https://github.com/google/googletest) \n* [Unix/Linux系统调用](http://www.yiibai.com/unix_system_calls/)  \n* [百度质量部开源社区](https://github.com/baidu)\n* [腾讯开源](https://github.com/Tencent)\n* [阿里开源](https://github.com/alibaba)\n* [Google Testing Blog](https://testing.googleblog.com/)  \n* [TestHomer](https://testerhome.com/)  \n* [Python风格规范](http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules)\n* [Valgrind](http://valgrind.org/)\n* [Irrlicht（游戏引擎）](http://irrlicht.sourceforge.net)  \n* [Cocos2d-x（游戏引擎）](http://www.cocos2d-x.org/)  \n\n\n","source":"e-book/index.md","raw":"---\ntitle: 常用电子书和链接整理\n---\n\n* [C++手册](http://www.cplusplus.com/reference/)  \n* [C++ 风格指南](http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/contents/) \n* [谷歌C++测试框架](https://github.com/google/googletest) \n* [Unix/Linux系统调用](http://www.yiibai.com/unix_system_calls/)  \n* [百度质量部开源社区](https://github.com/baidu)\n* [腾讯开源](https://github.com/Tencent)\n* [阿里开源](https://github.com/alibaba)\n* [Google Testing Blog](https://testing.googleblog.com/)  \n* [TestHomer](https://testerhome.com/)  \n* [Python风格规范](http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules)\n* [Valgrind](http://valgrind.org/)\n* [Irrlicht（游戏引擎）](http://irrlicht.sourceforge.net)  \n* [Cocos2d-x（游戏引擎）](http://www.cocos2d-x.org/)  \n\n\n","date":"2019-03-19T12:37:11.039Z","updated":"2019-03-19T12:37:11.039Z","path":"e-book/index.html","comments":1,"layout":"page","_id":"cjtfrwgbz0009b30nsbnltbgc","content":"<ul>\n<li><a href=\"http://www.cplusplus.com/reference/\" target=\"_blank\" rel=\"noopener\">C++手册</a>  </li>\n<li><a href=\"http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/contents/\" target=\"_blank\" rel=\"noopener\">C++ 风格指南</a> </li>\n<li><a href=\"https://github.com/google/googletest\" target=\"_blank\" rel=\"noopener\">谷歌C++测试框架</a> </li>\n<li><a href=\"http://www.yiibai.com/unix_system_calls/\" target=\"_blank\" rel=\"noopener\">Unix/Linux系统调用</a>  </li>\n<li><a href=\"https://github.com/baidu\" target=\"_blank\" rel=\"noopener\">百度质量部开源社区</a></li>\n<li><a href=\"https://github.com/Tencent\" target=\"_blank\" rel=\"noopener\">腾讯开源</a></li>\n<li><a href=\"https://github.com/alibaba\" target=\"_blank\" rel=\"noopener\">阿里开源</a></li>\n<li><a href=\"https://testing.googleblog.com/\" target=\"_blank\" rel=\"noopener\">Google Testing Blog</a>  </li>\n<li><a href=\"https://testerhome.com/\" target=\"_blank\" rel=\"noopener\">TestHomer</a>  </li>\n<li><a href=\"http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules\" target=\"_blank\" rel=\"noopener\">Python风格规范</a></li>\n<li><a href=\"http://valgrind.org/\" target=\"_blank\" rel=\"noopener\">Valgrind</a></li>\n<li><a href=\"http://irrlicht.sourceforge.net\" target=\"_blank\" rel=\"noopener\">Irrlicht（游戏引擎）</a>  </li>\n<li><a href=\"http://www.cocos2d-x.org/\" target=\"_blank\" rel=\"noopener\">Cocos2d-x（游戏引擎）</a>  </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"http://www.cplusplus.com/reference/\" target=\"_blank\" rel=\"noopener\">C++手册</a>  </li>\n<li><a href=\"http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/contents/\" target=\"_blank\" rel=\"noopener\">C++ 风格指南</a> </li>\n<li><a href=\"https://github.com/google/googletest\" target=\"_blank\" rel=\"noopener\">谷歌C++测试框架</a> </li>\n<li><a href=\"http://www.yiibai.com/unix_system_calls/\" target=\"_blank\" rel=\"noopener\">Unix/Linux系统调用</a>  </li>\n<li><a href=\"https://github.com/baidu\" target=\"_blank\" rel=\"noopener\">百度质量部开源社区</a></li>\n<li><a href=\"https://github.com/Tencent\" target=\"_blank\" rel=\"noopener\">腾讯开源</a></li>\n<li><a href=\"https://github.com/alibaba\" target=\"_blank\" rel=\"noopener\">阿里开源</a></li>\n<li><a href=\"https://testing.googleblog.com/\" target=\"_blank\" rel=\"noopener\">Google Testing Blog</a>  </li>\n<li><a href=\"https://testerhome.com/\" target=\"_blank\" rel=\"noopener\">TestHomer</a>  </li>\n<li><a href=\"http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules\" target=\"_blank\" rel=\"noopener\">Python风格规范</a></li>\n<li><a href=\"http://valgrind.org/\" target=\"_blank\" rel=\"noopener\">Valgrind</a></li>\n<li><a href=\"http://irrlicht.sourceforge.net\" target=\"_blank\" rel=\"noopener\">Irrlicht（游戏引擎）</a>  </li>\n<li><a href=\"http://www.cocos2d-x.org/\" target=\"_blank\" rel=\"noopener\">Cocos2d-x（游戏引擎）</a>  </li>\n</ul>\n"},{"title":"project","layout":"project","comments":0,"_content":"","source":"project/index.md","raw":"---\ntitle: project\nlayout: project\ncomments: false\n---","date":"2019-03-19T12:37:11.038Z","updated":"2019-03-19T12:37:11.038Z","path":"project/index.html","_id":"cjtfrwgc2000db30n9qx588o1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"search","layout":"search","comments":0,"_content":"","source":"search/index.md","raw":"---\ntitle: search\nlayout: search\ncomments: false\n---","date":"2019-03-19T12:37:11.038Z","updated":"2019-03-19T12:37:11.038Z","path":"search/index.html","_id":"cjtfrwgc4000gb30ncsq1jbie","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tag","layout":"tag","comments":0,"_content":"","source":"tag/index.md","raw":"---\ntitle: tag\nlayout: tag\ncomments: false\n---","date":"2019-03-19T12:37:11.046Z","updated":"2019-03-19T12:37:11.046Z","path":"tag/index.html","_id":"cjtfrwgcv0011b30nnf0064cc","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"100个GDB小技巧","date":"2015-09-07T08:57:13.000Z","_content":"[阅读全文...](https://erhua.github.io/resource/100-gdb-tips.html)\n","source":"_posts/100-gdb-tips.md","raw":"---\ntitle: 100个GDB小技巧\ndate: 2015-09-07 16:57:13\ntags: gdb-tip\ncategory: 调试工具\n---\n[阅读全文...](https://erhua.github.io/resource/100-gdb-tips.html)\n","slug":"100-gdb-tips","published":1,"updated":"2019-03-19T12:37:11.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgbj0000b30ni41s2wbt","content":"<p><a href=\"https://erhua.github.io/resource/100-gdb-tips.html\">阅读全文…</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://erhua.github.io/resource/100-gdb-tips.html\">阅读全文…</a></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-03-19T12:37:11.032Z","updated":"2019-03-19T12:37:11.033Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgbq0002b30n4e8xotap","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"Lua脚本如何调用JAVA函数","date":"2017-09-15T11:01:49.000Z","_content":"正文待添加","source":"_posts/lua-call-java.md","raw":"---\ntitle: Lua脚本如何调用JAVA函数\ndate: 2017-09-15 19:01:49\ncategory: JAVA语言\ntags: Lua\n---\n正文待添加","slug":"lua-call-java","published":1,"updated":"2019-03-19T12:37:11.035Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgbv0006b30n0makyyiz","content":"<p>正文待添加</p>\n","site":{"data":{}},"excerpt":"","more":"<p>正文待添加</p>\n"},{"title":"Python封装的一个简单LOG类","date":"2016-10-09T16:00:18.000Z","_content":"```` python\n#!/usr/bin/env python\n# coding=utf-8\n\nimport logging\nimport logging.handlers\nimport sys\n\n\nclass CLog(object):\n    def __init__(self):\n        self.m_Logger = logging.getLogger()\n        self.m_Logger.setLevel(logging.NOTSET)\n        self.m_Formatter = logging.Formatter(\"[%(asctime)s]|%(levelname)s|%(process)d|%(thread)d|%(filename)s|%(lineno)s|%(funcName)s|%(message)s\")\n\n        # 默认先输出到控制台\n        tHandler = logging.StreamHandler(sys.stdout)\n        tHandler.setFormatter(self.m_Formatter)\n        self.m_Logger.addHandler(tHandler)\n\n    def Load(self, strPath, strLogLevel, iLogCount):\n        mapLevel = {\"debug\": logging.DEBUG, \"normal\": logging.INFO, \"warning\": logging.WARNING, \"error\": logging.ERROR}\n        iLevel = mapLevel.get(strLogLevel, logging.DEBUG)\n\n        tHandler = logging.handlers.TimedRotatingFileHandler(filename=strPath, when=\"midnight\", backupCount=iLogCount, encoding=\"utf-8\")\n        tHandler.setFormatter(self.m_Formatter)\n        tHandler.setLevel(iLevel)\n\n        self.m_Logger.addHandler(tHandler)\n\n    @property\n    def Debug(self):\n        return self.m_Logger.debug\n\n    @property\n    def Normal(self):\n        return self.m_Logger.info\n\n    @property\n    def Warning(self):\n        return self.m_Logger.warning\n\n    @property\n    def Error(self):\n        return self.m_Logger.error\n\n\ngLogger = CLog()\n\n'''\n# 使用演示\nif __name__ == \"__main__\":\n    gLogger.Load(\"test.log\",\"debug\",0)\n    try:\n        doSomething()\n    except Exception, args:\n        gLogger.Error(args, exc_info=True)\n'''\n\n````","source":"_posts/python日志打印类.md","raw":"---\ntitle: Python封装的一个简单LOG类\ndate: 2016-10-10 00:00:18\ncategory: Python语言\n---\n```` python\n#!/usr/bin/env python\n# coding=utf-8\n\nimport logging\nimport logging.handlers\nimport sys\n\n\nclass CLog(object):\n    def __init__(self):\n        self.m_Logger = logging.getLogger()\n        self.m_Logger.setLevel(logging.NOTSET)\n        self.m_Formatter = logging.Formatter(\"[%(asctime)s]|%(levelname)s|%(process)d|%(thread)d|%(filename)s|%(lineno)s|%(funcName)s|%(message)s\")\n\n        # 默认先输出到控制台\n        tHandler = logging.StreamHandler(sys.stdout)\n        tHandler.setFormatter(self.m_Formatter)\n        self.m_Logger.addHandler(tHandler)\n\n    def Load(self, strPath, strLogLevel, iLogCount):\n        mapLevel = {\"debug\": logging.DEBUG, \"normal\": logging.INFO, \"warning\": logging.WARNING, \"error\": logging.ERROR}\n        iLevel = mapLevel.get(strLogLevel, logging.DEBUG)\n\n        tHandler = logging.handlers.TimedRotatingFileHandler(filename=strPath, when=\"midnight\", backupCount=iLogCount, encoding=\"utf-8\")\n        tHandler.setFormatter(self.m_Formatter)\n        tHandler.setLevel(iLevel)\n\n        self.m_Logger.addHandler(tHandler)\n\n    @property\n    def Debug(self):\n        return self.m_Logger.debug\n\n    @property\n    def Normal(self):\n        return self.m_Logger.info\n\n    @property\n    def Warning(self):\n        return self.m_Logger.warning\n\n    @property\n    def Error(self):\n        return self.m_Logger.error\n\n\ngLogger = CLog()\n\n'''\n# 使用演示\nif __name__ == \"__main__\":\n    gLogger.Load(\"test.log\",\"debug\",0)\n    try:\n        doSomething()\n    except Exception, args:\n        gLogger.Error(args, exc_info=True)\n'''\n\n````","slug":"python日志打印类","published":1,"updated":"2019-03-19T12:37:11.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgby0008b30ngc0usnmw","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\"><span class=\"keyword\">import</span> logging.handlers</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CLog</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        self.m_Logger = logging.getLogger()</span><br><span class=\"line\">        self.m_Logger.setLevel(logging.NOTSET)</span><br><span class=\"line\">        self.m_Formatter = logging.Formatter(<span class=\"string\">\"[%(asctime)s]|%(levelname)s|%(process)d|%(thread)d|%(filename)s|%(lineno)s|%(funcName)s|%(message)s\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 默认先输出到控制台</span></span><br><span class=\"line\">        tHandler = logging.StreamHandler(sys.stdout)</span><br><span class=\"line\">        tHandler.setFormatter(self.m_Formatter)</span><br><span class=\"line\">        self.m_Logger.addHandler(tHandler)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Load</span><span class=\"params\">(self, strPath, strLogLevel, iLogCount)</span>:</span></span><br><span class=\"line\">        mapLevel = &#123;<span class=\"string\">\"debug\"</span>: logging.DEBUG, <span class=\"string\">\"normal\"</span>: logging.INFO, <span class=\"string\">\"warning\"</span>: logging.WARNING, <span class=\"string\">\"error\"</span>: logging.ERROR&#125;</span><br><span class=\"line\">        iLevel = mapLevel.get(strLogLevel, logging.DEBUG)</span><br><span class=\"line\"></span><br><span class=\"line\">        tHandler = logging.handlers.TimedRotatingFileHandler(filename=strPath, when=<span class=\"string\">\"midnight\"</span>, backupCount=iLogCount, encoding=<span class=\"string\">\"utf-8\"</span>)</span><br><span class=\"line\">        tHandler.setFormatter(self.m_Formatter)</span><br><span class=\"line\">        tHandler.setLevel(iLevel)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.m_Logger.addHandler(tHandler)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Debug</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.m_Logger.debug</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Normal</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.m_Logger.info</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Warning</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.m_Logger.warning</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Error</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.m_Logger.error</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">gLogger = CLog()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\"># 使用演示</span></span><br><span class=\"line\"><span class=\"string\">if __name__ == \"__main__\":</span></span><br><span class=\"line\"><span class=\"string\">    gLogger.Load(\"test.log\",\"debug\",0)</span></span><br><span class=\"line\"><span class=\"string\">    try:</span></span><br><span class=\"line\"><span class=\"string\">        doSomething()</span></span><br><span class=\"line\"><span class=\"string\">    except Exception, args:</span></span><br><span class=\"line\"><span class=\"string\">        gLogger.Error(args, exc_info=True)</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\"><span class=\"keyword\">import</span> logging.handlers</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CLog</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        self.m_Logger = logging.getLogger()</span><br><span class=\"line\">        self.m_Logger.setLevel(logging.NOTSET)</span><br><span class=\"line\">        self.m_Formatter = logging.Formatter(<span class=\"string\">\"[%(asctime)s]|%(levelname)s|%(process)d|%(thread)d|%(filename)s|%(lineno)s|%(funcName)s|%(message)s\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 默认先输出到控制台</span></span><br><span class=\"line\">        tHandler = logging.StreamHandler(sys.stdout)</span><br><span class=\"line\">        tHandler.setFormatter(self.m_Formatter)</span><br><span class=\"line\">        self.m_Logger.addHandler(tHandler)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Load</span><span class=\"params\">(self, strPath, strLogLevel, iLogCount)</span>:</span></span><br><span class=\"line\">        mapLevel = &#123;<span class=\"string\">\"debug\"</span>: logging.DEBUG, <span class=\"string\">\"normal\"</span>: logging.INFO, <span class=\"string\">\"warning\"</span>: logging.WARNING, <span class=\"string\">\"error\"</span>: logging.ERROR&#125;</span><br><span class=\"line\">        iLevel = mapLevel.get(strLogLevel, logging.DEBUG)</span><br><span class=\"line\"></span><br><span class=\"line\">        tHandler = logging.handlers.TimedRotatingFileHandler(filename=strPath, when=<span class=\"string\">\"midnight\"</span>, backupCount=iLogCount, encoding=<span class=\"string\">\"utf-8\"</span>)</span><br><span class=\"line\">        tHandler.setFormatter(self.m_Formatter)</span><br><span class=\"line\">        tHandler.setLevel(iLevel)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.m_Logger.addHandler(tHandler)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Debug</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.m_Logger.debug</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Normal</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.m_Logger.info</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Warning</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.m_Logger.warning</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Error</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.m_Logger.error</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">gLogger = CLog()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\"># 使用演示</span></span><br><span class=\"line\"><span class=\"string\">if __name__ == \"__main__\":</span></span><br><span class=\"line\"><span class=\"string\">    gLogger.Load(\"test.log\",\"debug\",0)</span></span><br><span class=\"line\"><span class=\"string\">    try:</span></span><br><span class=\"line\"><span class=\"string\">        doSomething()</span></span><br><span class=\"line\"><span class=\"string\">    except Exception, args:</span></span><br><span class=\"line\"><span class=\"string\">        gLogger.Error(args, exc_info=True)</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br></pre></td></tr></table></figure>"},{"title":"placeholder","date":"2017-11-21T11:08:36.000Z","_content":"","source":"_posts/placeholder.md","raw":"---\ntitle: placeholder\ndate: 2017-11-21 19:08:36\ntags:\n---\n","slug":"placeholder","published":1,"updated":"2019-03-19T12:37:11.035Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgc0000ab30nyn5ijtci","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"云南之旅","date":"2016-10-09T16:00:18.000Z","_content":"## 香格里拉\n\n![](/resource/yunnan/IMG_9334.JPG) \n![](/resource/yunnan/IMG_9428.JPG) \n![](/resource/yunnan/IMG_9444.JPG) \n![](/resource/yunnan/IMG_9472.JPG) \n![](/resource/yunnan/IMG_9540.JPG) \n可爱的小松鼠\n![](/resource/yunnan/IMG_9618.JPG) \n![](/resource/yunnan/IMG_9625.JPG) \n![](/resource/yunnan/IMG_9686.JPG) \n![](/resource/yunnan/IMG_9729.JPG) \n","source":"_posts/云南之旅.md","raw":"---\ntitle: 云南之旅\ndate: 2016-10-10 00:00:18\ncategory: 生活娱乐\ntags: 旅行\n---\n## 香格里拉\n\n![](/resource/yunnan/IMG_9334.JPG) \n![](/resource/yunnan/IMG_9428.JPG) \n![](/resource/yunnan/IMG_9444.JPG) \n![](/resource/yunnan/IMG_9472.JPG) \n![](/resource/yunnan/IMG_9540.JPG) \n可爱的小松鼠\n![](/resource/yunnan/IMG_9618.JPG) \n![](/resource/yunnan/IMG_9625.JPG) \n![](/resource/yunnan/IMG_9686.JPG) \n![](/resource/yunnan/IMG_9729.JPG) \n","slug":"云南之旅","published":1,"updated":"2019-03-19T12:37:11.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgc4000fb30nkxoq2o61","content":"<h2 id=\"香格里拉\"><a href=\"#香格里拉\" class=\"headerlink\" title=\"香格里拉\"></a>香格里拉</h2><p><img src=\"/resource/yunnan/IMG_9334.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9428.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9444.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9472.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9540.JPG\" alt><br>可爱的小松鼠<br><img src=\"/resource/yunnan/IMG_9618.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9625.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9686.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9729.JPG\" alt> </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"香格里拉\"><a href=\"#香格里拉\" class=\"headerlink\" title=\"香格里拉\"></a>香格里拉</h2><p><img src=\"/resource/yunnan/IMG_9334.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9428.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9444.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9472.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9540.JPG\" alt><br>可爱的小松鼠<br><img src=\"/resource/yunnan/IMG_9618.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9625.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9686.JPG\" alt><br><img src=\"/resource/yunnan/IMG_9729.JPG\" alt> </p>\n"},{"title":"summming-up","date":"2018-04-05T05:19:16.000Z","_content":"","source":"_posts/summming-up.md","raw":"---\ntitle: summming-up\ndate: 2018-04-05 13:19:16\ntags:\n---\n","slug":"summming-up","published":1,"updated":"2019-03-19T12:37:11.033Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgc6000hb30nmgaiz9vf","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"持续发布","date":"2018-03-14T03:33:28.000Z","_content":"","source":"_posts/持续发布.md","raw":"---\ntitle: 持续发布\ndate: 2018-03-14 11:33:28\ntags:\n---\n","slug":"持续发布","published":1,"updated":"2019-03-19T12:37:11.033Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgc7000lb30n7r36g18v","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"广告的双引擎回归测试","date":"2018-04-10T14:10:48.000Z","_content":"","source":"_posts/广告的双引擎回归测试.md","raw":"---\ntitle: 广告的双引擎回归测试\ndate: 2018-04-10 22:10:48\ntags:\n---\n","slug":"广告的双引擎回归测试","published":1,"updated":"2019-03-19T12:37:11.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgcd000nb30ndhbsheeb","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"排序算法学习（持续更新）","date":"2018-04-08T10:07:30.000Z","_content":"常用排查算法学习笔记，所有算法均通过c++来实现，持续更新中，计划每周实现一种排序算法。\n\n---\n## 基础排序【选择、冒泡、快排】\n    ```C++\n    namespace seh {\n\n      void CSort::Swap(int *left, int *right) {\n        auto tmp = *left;\n        *left = *right;\n        *right = tmp;\n\n        // 这里如果不允许申请额外的空间，那么如何交换两个变量的值？\n        // 记得以前面试的时候被问到过,我们可以通过运算的方式来实现\n        // *left = *left + *right;\n        // *right = *left - *right;\n        // *left = *left - *right;\n      }\n      \n      /*\n      选择排序原理：选出一个最小值放在最前面，然后从下一个位置开始\n      再选择一个最小值放在当前位置，以此类推，直到所有位置都遍历完\n      */\n      void CSort::SelectSort(int *array, int size) {\n        for (auto i = 0; i < size; ++i) {\n          for (auto j = i + 1; j < size; ++j) {\n            if (array[i] > array[j]) {\n              Swap(array + i, array + j);\n            }\n          }\n        }\n      }\n\n      /*\n      冒泡排序原理：每次比较相邻的两个数，把大的数调到后面，依次比较，\n      直至把最大的数移到最后，最后将剩下的数据继续以上操作\n      */\n      void CSort::BubbleSort(int *array, int size) {\n        for (auto i = 0; i < size - 1; ++i) {\n          for (auto j = 0; j + 1 < size - i; ++j) {\n            if (array[j] > array[j + 1]) {\n              Swap(array + j, array + j + 1);\n            }\n          }\n        }\n      }\n\n      /*\n      快速排序原理：分治法\n      首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，\n      然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面，\n      这个过程称为一趟快速排序，然后进行递归调用\n      */\n      void CSort::QuickSort(int *array, int size) {\n        if (size <= 1) {\n          return;\n        }\n        int key = array[0]; // 保留关键数据，然后把key的位置好空出来\n        int low = 0;\n        int height = size - 1;\n        while (low < height) {\n          // 从右到左查询小于key的位置\n          while (height > low && array[height] > key) {\n            --height;\n          }\n          // 把找到的小于key的值放进最前面的位置array[0]，array[0]的值前面已备份\n          // 这样array[height]的位置就空出来了，后面就可以存放大于于key的数据\n          array[low] = array[height];\n\n          // 从左到右查找大于key的位置\n          while (low < height && array[low] <= key) {\n            ++low;\n          }\n          // 找到大于key的数据时，就可以放在上面空出来的array[height]位置\n          // 之后array[low]的位置就又空出来，用于存放下次小于key的数据\n          array[height] = array[low];\n        }\n        array[low] = key; // 当low=height时退出循环，low的位置就会空出来，用于存放key\n\n        /*\n        退出循环后，整个数组就已经基于Key做完了一次排序，整个数组分成三个部分，小于key\n        的部分，key，大于key的部分，然后采用分治法，对于小于key和大于key的部分继续递归调用\n        */\n        QuickSort(array, low);\n        QuickSort(array + low + 1, size - low - 1);\n      }\n    }\n\t```\n---\n## 插入排序\n    ```C++\n    void InsertSort(int *array, const int size)\n\t{\n\t\tif(!array) {\n\t\t\treturn ;\n\t\t}\n\t\t// 先把要排序的元素保存在一个临时变量中，然后在已排好序的部分，查找元素的位置，最后插入进去\n\t\tfor (int i=1; i<size; i++)\n\t\t{ \t\t \n\t\t\tint tmp = array[i];\n\t\t\tfor (int j = i-1; j>=0 && tmp < array[j];j--)\n\t\t\t{\n\t\t\t\tarray[j+1] = array[j];\n\t\t\t}\n\t\t\tarray[j+1] =tmp ;\n\t\t\t\n\t\t}\n\t}\n    ```\n\n","source":"_posts/排序算法.md","raw":"---\ntitle: 排序算法学习（持续更新）\ndate: 2018-04-08 18:07:30\ntags: algorithm\n---\n常用排查算法学习笔记，所有算法均通过c++来实现，持续更新中，计划每周实现一种排序算法。\n\n---\n## 基础排序【选择、冒泡、快排】\n    ```C++\n    namespace seh {\n\n      void CSort::Swap(int *left, int *right) {\n        auto tmp = *left;\n        *left = *right;\n        *right = tmp;\n\n        // 这里如果不允许申请额外的空间，那么如何交换两个变量的值？\n        // 记得以前面试的时候被问到过,我们可以通过运算的方式来实现\n        // *left = *left + *right;\n        // *right = *left - *right;\n        // *left = *left - *right;\n      }\n      \n      /*\n      选择排序原理：选出一个最小值放在最前面，然后从下一个位置开始\n      再选择一个最小值放在当前位置，以此类推，直到所有位置都遍历完\n      */\n      void CSort::SelectSort(int *array, int size) {\n        for (auto i = 0; i < size; ++i) {\n          for (auto j = i + 1; j < size; ++j) {\n            if (array[i] > array[j]) {\n              Swap(array + i, array + j);\n            }\n          }\n        }\n      }\n\n      /*\n      冒泡排序原理：每次比较相邻的两个数，把大的数调到后面，依次比较，\n      直至把最大的数移到最后，最后将剩下的数据继续以上操作\n      */\n      void CSort::BubbleSort(int *array, int size) {\n        for (auto i = 0; i < size - 1; ++i) {\n          for (auto j = 0; j + 1 < size - i; ++j) {\n            if (array[j] > array[j + 1]) {\n              Swap(array + j, array + j + 1);\n            }\n          }\n        }\n      }\n\n      /*\n      快速排序原理：分治法\n      首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，\n      然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面，\n      这个过程称为一趟快速排序，然后进行递归调用\n      */\n      void CSort::QuickSort(int *array, int size) {\n        if (size <= 1) {\n          return;\n        }\n        int key = array[0]; // 保留关键数据，然后把key的位置好空出来\n        int low = 0;\n        int height = size - 1;\n        while (low < height) {\n          // 从右到左查询小于key的位置\n          while (height > low && array[height] > key) {\n            --height;\n          }\n          // 把找到的小于key的值放进最前面的位置array[0]，array[0]的值前面已备份\n          // 这样array[height]的位置就空出来了，后面就可以存放大于于key的数据\n          array[low] = array[height];\n\n          // 从左到右查找大于key的位置\n          while (low < height && array[low] <= key) {\n            ++low;\n          }\n          // 找到大于key的数据时，就可以放在上面空出来的array[height]位置\n          // 之后array[low]的位置就又空出来，用于存放下次小于key的数据\n          array[height] = array[low];\n        }\n        array[low] = key; // 当low=height时退出循环，low的位置就会空出来，用于存放key\n\n        /*\n        退出循环后，整个数组就已经基于Key做完了一次排序，整个数组分成三个部分，小于key\n        的部分，key，大于key的部分，然后采用分治法，对于小于key和大于key的部分继续递归调用\n        */\n        QuickSort(array, low);\n        QuickSort(array + low + 1, size - low - 1);\n      }\n    }\n\t```\n---\n## 插入排序\n    ```C++\n    void InsertSort(int *array, const int size)\n\t{\n\t\tif(!array) {\n\t\t\treturn ;\n\t\t}\n\t\t// 先把要排序的元素保存在一个临时变量中，然后在已排好序的部分，查找元素的位置，最后插入进去\n\t\tfor (int i=1; i<size; i++)\n\t\t{ \t\t \n\t\t\tint tmp = array[i];\n\t\t\tfor (int j = i-1; j>=0 && tmp < array[j];j--)\n\t\t\t{\n\t\t\t\tarray[j+1] = array[j];\n\t\t\t}\n\t\t\tarray[j+1] =tmp ;\n\t\t\t\n\t\t}\n\t}\n    ```\n\n","slug":"排序算法","published":1,"updated":"2019-03-19T12:37:11.036Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgce000qb30nw2466bk6","content":"<p>常用排查算法学习笔记，所有算法均通过c++来实现，持续更新中，计划每周实现一种排序算法。</p>\n<hr>\n<h2 id=\"基础排序【选择、冒泡、快排】\"><a href=\"#基础排序【选择、冒泡、快排】\" class=\"headerlink\" title=\"基础排序【选择、冒泡、快排】\"></a>基础排序【选择、冒泡、快排】</h2><pre><code><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> seh &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> CSort::Swap(<span class=\"keyword\">int</span> *left, <span class=\"keyword\">int</span> *right) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> tmp = *left;</span><br><span class=\"line\">    *left = *right;</span><br><span class=\"line\">    *right = tmp;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 这里如果不允许申请额外的空间，那么如何交换两个变量的值？</span></span><br><span class=\"line\">    <span class=\"comment\">// 记得以前面试的时候被问到过,我们可以通过运算的方式来实现</span></span><br><span class=\"line\">    <span class=\"comment\">// *left = *left + *right;</span></span><br><span class=\"line\">    <span class=\"comment\">// *right = *left - *right;</span></span><br><span class=\"line\">    <span class=\"comment\">// *left = *left - *right;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  选择排序原理：选出一个最小值放在最前面，然后从下一个位置开始</span></span><br><span class=\"line\"><span class=\"comment\">  再选择一个最小值放在当前位置，以此类推，直到所有位置都遍历完</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> CSort::SelectSort(<span class=\"keyword\">int</span> *<span class=\"built_in\">array</span>, <span class=\"keyword\">int</span> size) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; size; ++i) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> j = i + <span class=\"number\">1</span>; j &lt; size; ++j) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">array</span>[i] &gt; <span class=\"built_in\">array</span>[j]) &#123;</span><br><span class=\"line\">          Swap(<span class=\"built_in\">array</span> + i, <span class=\"built_in\">array</span> + j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  冒泡排序原理：每次比较相邻的两个数，把大的数调到后面，依次比较，</span></span><br><span class=\"line\"><span class=\"comment\">  直至把最大的数移到最后，最后将剩下的数据继续以上操作</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> CSort::BubbleSort(<span class=\"keyword\">int</span> *<span class=\"built_in\">array</span>, <span class=\"keyword\">int</span> size) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; size - <span class=\"number\">1</span>; ++i) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> j = <span class=\"number\">0</span>; j + <span class=\"number\">1</span> &lt; size - i; ++j) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">array</span>[j] &gt; <span class=\"built_in\">array</span>[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">          Swap(<span class=\"built_in\">array</span> + j, <span class=\"built_in\">array</span> + j + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  快速排序原理：分治法</span></span><br><span class=\"line\"><span class=\"comment\">  首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，</span></span><br><span class=\"line\"><span class=\"comment\">  然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面，</span></span><br><span class=\"line\"><span class=\"comment\">  这个过程称为一趟快速排序，然后进行递归调用</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> CSort::QuickSort(<span class=\"keyword\">int</span> *<span class=\"built_in\">array</span>, <span class=\"keyword\">int</span> size) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> key = <span class=\"built_in\">array</span>[<span class=\"number\">0</span>]; <span class=\"comment\">// 保留关键数据，然后把key的位置好空出来</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> low = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> height = size - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (low &lt; height) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 从右到左查询小于key的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (height &gt; low &amp;&amp; <span class=\"built_in\">array</span>[height] &gt; key) &#123;</span><br><span class=\"line\">        --height;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 把找到的小于key的值放进最前面的位置array[0]，array[0]的值前面已备份</span></span><br><span class=\"line\">      <span class=\"comment\">// 这样array[height]的位置就空出来了，后面就可以存放大于于key的数据</span></span><br><span class=\"line\">      <span class=\"built_in\">array</span>[low] = <span class=\"built_in\">array</span>[height];</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 从左到右查找大于key的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (low &lt; height &amp;&amp; <span class=\"built_in\">array</span>[low] &lt;= key) &#123;</span><br><span class=\"line\">        ++low;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 找到大于key的数据时，就可以放在上面空出来的array[height]位置</span></span><br><span class=\"line\">      <span class=\"comment\">// 之后array[low]的位置就又空出来，用于存放下次小于key的数据</span></span><br><span class=\"line\">      <span class=\"built_in\">array</span>[height] = <span class=\"built_in\">array</span>[low];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">array</span>[low] = key; <span class=\"comment\">// 当low=height时退出循环，low的位置就会空出来，用于存放key</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    退出循环后，整个数组就已经基于Key做完了一次排序，整个数组分成三个部分，小于key</span></span><br><span class=\"line\"><span class=\"comment\">    的部分，key，大于key的部分，然后采用分治法，对于小于key和大于key的部分继续递归调用</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    QuickSort(<span class=\"built_in\">array</span>, low);</span><br><span class=\"line\">    QuickSort(<span class=\"built_in\">array</span> + low + <span class=\"number\">1</span>, size - low - <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre><hr>\n<h2 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h2><pre><code><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InsertSort</span><span class=\"params\">(<span class=\"keyword\">int</span> *<span class=\"built_in\">array</span>, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> size)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!<span class=\"built_in\">array</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 先把要排序的元素保存在一个临时变量中，然后在已排好序的部分，查找元素的位置，最后插入进去</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;size; i++)</span><br><span class=\"line\">\t&#123; \t\t </span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> tmp = <span class=\"built_in\">array</span>[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i<span class=\"number\">-1</span>; j&gt;=<span class=\"number\">0</span> &amp;&amp; tmp &lt; <span class=\"built_in\">array</span>[j];j--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">array</span>[j+<span class=\"number\">1</span>] = <span class=\"built_in\">array</span>[j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">array</span>[j+<span class=\"number\">1</span>] =tmp ;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>常用排查算法学习笔记，所有算法均通过c++来实现，持续更新中，计划每周实现一种排序算法。</p>\n<hr>\n<h2 id=\"基础排序【选择、冒泡、快排】\"><a href=\"#基础排序【选择、冒泡、快排】\" class=\"headerlink\" title=\"基础排序【选择、冒泡、快排】\"></a>基础排序【选择、冒泡、快排】</h2><pre><code><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> seh &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> CSort::Swap(<span class=\"keyword\">int</span> *left, <span class=\"keyword\">int</span> *right) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> tmp = *left;</span><br><span class=\"line\">    *left = *right;</span><br><span class=\"line\">    *right = tmp;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 这里如果不允许申请额外的空间，那么如何交换两个变量的值？</span></span><br><span class=\"line\">    <span class=\"comment\">// 记得以前面试的时候被问到过,我们可以通过运算的方式来实现</span></span><br><span class=\"line\">    <span class=\"comment\">// *left = *left + *right;</span></span><br><span class=\"line\">    <span class=\"comment\">// *right = *left - *right;</span></span><br><span class=\"line\">    <span class=\"comment\">// *left = *left - *right;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  选择排序原理：选出一个最小值放在最前面，然后从下一个位置开始</span></span><br><span class=\"line\"><span class=\"comment\">  再选择一个最小值放在当前位置，以此类推，直到所有位置都遍历完</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> CSort::SelectSort(<span class=\"keyword\">int</span> *<span class=\"built_in\">array</span>, <span class=\"keyword\">int</span> size) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; size; ++i) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> j = i + <span class=\"number\">1</span>; j &lt; size; ++j) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">array</span>[i] &gt; <span class=\"built_in\">array</span>[j]) &#123;</span><br><span class=\"line\">          Swap(<span class=\"built_in\">array</span> + i, <span class=\"built_in\">array</span> + j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  冒泡排序原理：每次比较相邻的两个数，把大的数调到后面，依次比较，</span></span><br><span class=\"line\"><span class=\"comment\">  直至把最大的数移到最后，最后将剩下的数据继续以上操作</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> CSort::BubbleSort(<span class=\"keyword\">int</span> *<span class=\"built_in\">array</span>, <span class=\"keyword\">int</span> size) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; size - <span class=\"number\">1</span>; ++i) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> j = <span class=\"number\">0</span>; j + <span class=\"number\">1</span> &lt; size - i; ++j) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">array</span>[j] &gt; <span class=\"built_in\">array</span>[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">          Swap(<span class=\"built_in\">array</span> + j, <span class=\"built_in\">array</span> + j + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  快速排序原理：分治法</span></span><br><span class=\"line\"><span class=\"comment\">  首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，</span></span><br><span class=\"line\"><span class=\"comment\">  然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面，</span></span><br><span class=\"line\"><span class=\"comment\">  这个过程称为一趟快速排序，然后进行递归调用</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> CSort::QuickSort(<span class=\"keyword\">int</span> *<span class=\"built_in\">array</span>, <span class=\"keyword\">int</span> size) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> key = <span class=\"built_in\">array</span>[<span class=\"number\">0</span>]; <span class=\"comment\">// 保留关键数据，然后把key的位置好空出来</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> low = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> height = size - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (low &lt; height) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 从右到左查询小于key的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (height &gt; low &amp;&amp; <span class=\"built_in\">array</span>[height] &gt; key) &#123;</span><br><span class=\"line\">        --height;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 把找到的小于key的值放进最前面的位置array[0]，array[0]的值前面已备份</span></span><br><span class=\"line\">      <span class=\"comment\">// 这样array[height]的位置就空出来了，后面就可以存放大于于key的数据</span></span><br><span class=\"line\">      <span class=\"built_in\">array</span>[low] = <span class=\"built_in\">array</span>[height];</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 从左到右查找大于key的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (low &lt; height &amp;&amp; <span class=\"built_in\">array</span>[low] &lt;= key) &#123;</span><br><span class=\"line\">        ++low;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 找到大于key的数据时，就可以放在上面空出来的array[height]位置</span></span><br><span class=\"line\">      <span class=\"comment\">// 之后array[low]的位置就又空出来，用于存放下次小于key的数据</span></span><br><span class=\"line\">      <span class=\"built_in\">array</span>[height] = <span class=\"built_in\">array</span>[low];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">array</span>[low] = key; <span class=\"comment\">// 当low=height时退出循环，low的位置就会空出来，用于存放key</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    退出循环后，整个数组就已经基于Key做完了一次排序，整个数组分成三个部分，小于key</span></span><br><span class=\"line\"><span class=\"comment\">    的部分，key，大于key的部分，然后采用分治法，对于小于key和大于key的部分继续递归调用</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    QuickSort(<span class=\"built_in\">array</span>, low);</span><br><span class=\"line\">    QuickSort(<span class=\"built_in\">array</span> + low + <span class=\"number\">1</span>, size - low - <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre><hr>\n<h2 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h2><pre><code><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InsertSort</span><span class=\"params\">(<span class=\"keyword\">int</span> *<span class=\"built_in\">array</span>, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> size)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!<span class=\"built_in\">array</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 先把要排序的元素保存在一个临时变量中，然后在已排好序的部分，查找元素的位置，最后插入进去</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;size; i++)</span><br><span class=\"line\">\t&#123; \t\t </span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> tmp = <span class=\"built_in\">array</span>[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i<span class=\"number\">-1</span>; j&gt;=<span class=\"number\">0</span> &amp;&amp; tmp &lt; <span class=\"built_in\">array</span>[j];j--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">array</span>[j+<span class=\"number\">1</span>] = <span class=\"built_in\">array</span>[j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">array</span>[j+<span class=\"number\">1</span>] =tmp ;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>"},{"title":"父子雄兵影评","date":"2017-09-10T04:17:50.000Z","_content":"不吹不黑地说这部电影很一般，不管是情节还是搞笑，都远远赶不上大鹏的煎饼侠，不过范伟老师的演技还是很棒的。尽管整部影片很一般，但当影片最后《老爸》这首歌响起的时候，还是能够勾起人们很多的回忆，特别是那种深深的父子情。\n![父子雄兵](https://erhua.github.io/resource/fuzixiongbing.jpg)","source":"_posts/观影影评.md","raw":"---\ntitle: 父子雄兵影评\ndate: 2017-09-10 12:17:50\ntags: movie\ncategory: 生活娱乐\n---\n不吹不黑地说这部电影很一般，不管是情节还是搞笑，都远远赶不上大鹏的煎饼侠，不过范伟老师的演技还是很棒的。尽管整部影片很一般，但当影片最后《老爸》这首歌响起的时候，还是能够勾起人们很多的回忆，特别是那种深深的父子情。\n![父子雄兵](https://erhua.github.io/resource/fuzixiongbing.jpg)","slug":"观影影评","published":1,"updated":"2019-03-19T12:37:11.033Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgcg000sb30nx7tx4f7o","content":"<p>不吹不黑地说这部电影很一般，不管是情节还是搞笑，都远远赶不上大鹏的煎饼侠，不过范伟老师的演技还是很棒的。尽管整部影片很一般，但当影片最后《老爸》这首歌响起的时候，还是能够勾起人们很多的回忆，特别是那种深深的父子情。<br><img src=\"https://erhua.github.io/resource/fuzixiongbing.jpg\" alt=\"父子雄兵\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>不吹不黑地说这部电影很一般，不管是情节还是搞笑，都远远赶不上大鹏的煎饼侠，不过范伟老师的演技还是很棒的。尽管整部影片很一般，但当影片最后《老爸》这首歌响起的时候，还是能够勾起人们很多的回忆，特别是那种深深的父子情。<br><img src=\"https://erhua.github.io/resource/fuzixiongbing.jpg\" alt=\"父子雄兵\"></p>\n"},{"title":"设计模式(C++)学习","date":"2018-06-03T07:08:22.000Z","_content":"","source":"_posts/设计模式-C-学习.md","raw":"---\ntitle: 设计模式(C++)学习\ndate: 2018-06-03 15:08:22\ntags:\n---\n","slug":"设计模式-C-学习","published":1,"updated":"2019-03-19T12:37:11.036Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgch000vb30naozso8at","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"值得推荐的C C++框架和库","date":"2017-09-22T09:45:05.000Z","_content":"文章出处：http://blog.csdn.net/xiaoxiaoyeyaya/article/details/42541419\n\n## <a name=\"t1\" target=\"_blank\"></a>- 1\\. Webbench\n\nWebbench是一个在linux下使用的非常简单的网站压测工具。它使用fork()模拟多个客户端同时访问我们设定的URL，测试网站在压力下工作的性能，最多可以模拟3万个并发连接去测试网站的负载能力。Webbench使用C语言编写, 代码实在太简洁，源码加起来不到600行。\n\n下载链接：[http://home.tiscali.cz/~cz210552/webbench.html](http://home.tiscali.cz/~cz210552/webbench.html)\n\n## <a name=\"t2\" target=\"_blank\"></a>- 2\\. Tinyhttpd\n\ntinyhttpd是一个超轻量型Http Server，使用C语言开发，全部代码只有502行(包括注释)，附带一个简单的Client，可以通过阅读这段代码理解一个 Http Server 的本质。\n\n下载链接：[http://sourceforge.net/projects/tinyhttpd/](http://sourceforge.net/projects/tinyhttpd/)\n\n## <a name=\"t3\" target=\"_blank\"></a>- 3\\. cJSON\n\ncJSON是C语言中的一个JSON编解码器，非常轻量级，C文件只有500多行，速度也非常理想。\n\ncJSON也存在几个弱点，虽然功能不是非常强大，但cJSON的小身板和速度是最值得赞赏的。其代码被非常好地维护着，结构也简单易懂，可以作为一个非常好的C语言项目进行学习。\n\n项目主页:[http://sourceforge.net/projects/cjson/](http://sourceforge.net/projects/cjson/)\n\n## <a name=\"t4\" target=\"_blank\"></a>- 4\\. CMockery\n\ncmockery是google发布的用于C单元测试的一个轻量级的框架。它很小巧，对其他开源包没有依赖，对被测试代码侵入性小。cmockery的源代码行数不到3K，你阅读一下will_return和mock的源代码就一目了然了。\n\n主要特点：\n\n*   免费且开源，google提供技术支持；\n*   轻量级的框架，使测试更加快速简单；\n*   避免使用复杂的编译器特性，对老版本的编译器来讲，兼容性好;\n*   并不强制要求待测代码必须依赖C99标准，这一特性对许多嵌入式系统的开发很有用\n\n下载链接：[http://code.google.com/p/cmockery/downloads/list](http://code.google.com/p/cmockery/downloads/list)\n\n## <a name=\"t5\" target=\"_blank\"></a>- 5\\. Libev\n\nlibev是一个开源的事件驱动库，基于epoll，kqueue等OS提供的基础设施。其以高效出名，它可以将IO事件，定时器，和信号统一起来，统一放在事件处理这一套框架下处理。基于Reactor模式，效率较高，并且代码精简（4.15版本8000多行），是学习事件驱动编程的很好的资源。\n\n下载链接：[http://software.schmorp.de/pkg/libev.html](http://software.schmorp.de/pkg/libev.html)\n\n## <a name=\"t6\" target=\"_blank\"></a>- 6\\. Memcached\n\nMemcached 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态数据库驱动网站的速度。Memcached 基于一个存储键/值对的 hashmap。Memcached-1.4.7的代码量还是可以接受的，只有10K行左右。\n\n下载地址：[http://memcached.org/](http://memcached.org/)\n\n## <a name=\"t7\" target=\"_blank\"></a>- 7\\. Lua\n\nLua很棒，Lua是巴西人发明的，这些都令我不爽，但是还不至于脸红，最多眼红。\n\n让我脸红的是Lua的源代码，百分之一百的ANSI C，一点都不掺杂。在任何支持ANSI C编译器的平台上都可以轻松编译通过。我试过，真是一点废话都没有。Lua的代码数量足够小，5.1.4仅仅1.5W行，去掉空白行和注释估计能到1W行。\n\n下载地址：[http://www.lua.org/](http://www.lua.org/)\n\n## <a name=\"t8\" target=\"_blank\"></a>- 8\\. SQLite\n\nSQLite是一个开源的嵌入式关系数据库，实现自包容、零配置、支持事务的SQL数据库引擎。 其特点是高度便携、使用方便、结构紧凑、高效、可靠。足够小，大致3万行C代码，250K。\n\n下载地址：http://www.sqlite.org/ 。\n\n## <a name=\"t9\" target=\"_blank\"></a>- 9\\. UNIX v6\n\nUNIX V6 的内核源代码包括设备驱动程序在内 约有1 万行，这个数量的源代码，初学者是能够充分理解的。有一种说法是一个人所能理解的代码量上限为1 万行，UNIX V6的内核源代码从数量上看正好在这个范围之内。看到这里，大家是不是也有“如果只有1万行的话没准儿我也能学会”的想法呢？\n\n另一方面，最近的操作系统，例如Linux 最新版的内核源代码据说超过了1000 万行。就算不是初学者，想完全理解全部代码基本上也是不可能的。\n\n下载地址：[http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6](http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6)\n\n## <a name=\"t10\" target=\"_blank\"></a>- 10\\. NETBSD\n\nNetBSD是一个免费的，具有高度移植性的 UNIX-like 操作系统，是现行可移植平台最多的操作系统，可以在许多平台上执行，从 64bit alpha 服务器到手持设备和嵌入式设备。NetBSD计划的口号是：”Of course it runs NetBSD”。它设计简洁，代码规范，拥有众多先进特性，使得它在业界和学术界广受好评。由于简洁的设计和先进的特征，使得它在生产和研究方面，都有卓越的表现，而且它也有受使用者支持的完整的源代码。许多程序都可以很容易地通过NetBSD Packages Collection获得。\n\n下载地址：[http://www.netbsd.org/](http://www.netbsd.org/)\n\n<!-- more -->\n\n## <a name=\"t11\" target=\"_blank\"></a>C++ 资源大全\n\n关于 C++ 框架、库和资源的一些汇总列表，内容包括：标准库、Web应用框架、人工智能、数据库、图片处理、机器学习、日志、代码分析等。\n\n### <a name=\"t12\" target=\"_blank\"></a>标准库\n\nC++标准库，包括了STL容器，算法和函数等。\n\n*   [C++ Standard Library](http://en.wikipedia.org/wiki/C%2B%2B_Standard_Library)：是一系列类和函数的集合，使用核心语言编写，也是C++ISO自身标准的一部分。\n*   [Standard Template Library](http://en.wikipedia.org/wiki/Standard_Template_Library)：标准模板库\n*   [C POSIX library](http://en.wikipedia.org/wiki/C_POSIX_library) ： POSIX系统的C标准库规范\n*   [ISO C++ Standards Committee](https://github.com/cplusplus) ：C++标准委员会\n\n### <a name=\"t13\" target=\"_blank\"></a>框架\n\nC++通用框架和库\n\n*   [Apache C++ Standard Library](http://stdcxx.apache.org/)：是一系列算法，容器，迭代器和其他基本组件的集合\n*   [ASL](http://stlab.adobe.com/) ：Adobe源代码库提供了同行的评审和可移植的C++源代码库。\n*   [Boost](https://github.com/boostorg) ：大量通用C++库的集合。\n*   [BDE](https://github.com/bloomberg/bde) ：来自于彭博资讯实验室的开发环境。\n*   [Cinder](http://libcinder.org/)：提供专业品质创造性编码的开源开发社区。\n*   [Cxxomfort](http://ryan.gulix.cl/fossil.cgi/cxxomfort/)：轻量级的，只包含头文件的库，将C++ 11的一些新特性移植到C++03中。\n*   [Dlib](http://dlib.net/)：使用契约式编程和现代C++科技设计的通用的跨平台的C++库。\n*   [EASTL](https://github.com/paulhodge/EASTL) ：EA-STL公共部分\n*   [ffead-cpp](https://github.com/sumeetchhetri/ffead-cpp) ：企业应用程序开发框架\n*   [Folly](https://github.com/facebook/folly)：由Facebook开发和使用的开源C++库\n*   [JUCE](https://github.com/julianstorer/JUCE) ：包罗万象的C++类库，用于开发跨平台软件\n*   [libPhenom](https://github.com/facebook/libphenom)：用于构建高性能和高度可扩展性系统的事件框架。\n*   [LibSourcey](https://github.com/sourcey/libsourcey) ：用于实时的视频流和高性能网络应用程序的C++11 evented IO\n*   [LibU](https://github.com/koanlogic/libu) ： C语言写的多平台工具库\n*   [Loki](http://loki-lib.sourceforge.net/) ：C++库的设计，包括常见的设计模式和习语的实现。\n*   [MiLi](https://code.google.com/p/mili/) ：只含头文件的小型C++库\n*   [openFrameworks](http://www.openframeworks.cc/) ：开发C++工具包，用于创意性编码。\n*   [Qt](http://qt-project.org/) ：跨平台的应用程序和用户界面框架\n*   [Reason](http://code.google.com/p/reason/) ：跨平台的框架，使开发者能够更容易地使用Java，.Net和Python，同时也满足了他们对C++性能和优势的需求。\n*   [ROOT](http://root.cern.ch/) ：具备所有功能的一系列面向对象的框架，能够非常高效地处理和分析大量的数据，为欧洲原子能研究机构所用。\n*   [STLport](http://www.stlport.org/)：是STL具有代表性的版本\n*   [STXXL](http://stxxl.sourceforge.net/)：用于额外的大型数据集的标准模板库。\n*   [Ultimate++](http://www.ultimatepp.org/) ：C++跨平台快速应用程序开发框架\n*   [Windows Template Library](http://sourceforge.net/projects/wtl/)：用于开发Windows应用程序和UI组件的C++库\n*   [Yomm11](https://github.com/jll63/yomm11) ：C++11的开放multi-methods.\n\n### <a name=\"t14\" target=\"_blank\"></a>人工智能\n\n*   [btsk](https://github.com/aigamedev/btsk) ：游戏行为树启动器工具\n*   [Evolving Objects](http://eodev.sourceforge.net/)：基于模板的，ANSI C++演化计算库，能够帮助你非常快速地编写出自己的随机优化算法。\n*   [Neu](https://github.com/andrometa/neu)：C++11框架，编程语言集，用于创建人工智能应用程序的多用途软件系统。\n\n### <a name=\"t15\" target=\"_blank\"></a>异步事件循环\n\n*   [Boost.Asio](http://think-async.com/)：用于网络和底层I/O编程的跨平台的C++库。\n*   [libev](http://libev.schmorp.de/) ：功能齐全，高性能的时间循环，轻微地仿效libevent，但是不再像libevent一样有局限性，也修复了它的一些bug。\n*   [libevent](http://libevent.org/) ：事件通知库\n*   [libuv](https://github.com/joyent/libuv) ：跨平台异步I/O。\n\n### <a name=\"t16\" target=\"_blank\"></a>音频\n\n音频，声音，音乐，数字化音乐库\n\n*   [FMOD](http://www.fmod.org/) ：易于使用的跨平台的音频引擎和音频内容的游戏创作工具。\n*   [Maximilian](https://github.com/micknoise/Maximilian) ：C++音频和音乐数字信号处理库\n*   [OpenAL](http://www.openal.org/) ：开源音频库—跨平台的音频API\n*   [Opus](http://opus-codec.org/)：一个完全开放的，免版税的，高度通用的音频编解码器\n*   [Speex](http://www.speex.org/)：免费编解码器，为Opus所废弃\n*   [Tonic](https://github.com/TonicAudio/Tonic)： C++易用和高效的音频合成\n*   [Vorbis](http://xiph.org/vorbis/)： Ogg Vorbis是一种完全开放的，非专有的，免版税的通用压缩音频格式。\n\n### <a name=\"t17\" target=\"_blank\"></a>生态学\n\n生物信息，基因组学和生物技术\n\n*   [libsequence](http://molpopgen.github.io/libsequence/)：用于表示和分析群体遗传学数据的C++库。\n*   [SeqAn](http://www.seqan.de/)：专注于生物数据序列分析的算法和数据结构。\n*   [Vcflib](https://github.com/ekg/vcflib) ：用于解析和处理VCF文件的C++库\n*   [Wham](https://github.com/jewmanchue/wham)：直接把联想测试应用到BAM文件的基因结构变异。\n\n### <a name=\"t18\" target=\"_blank\"></a>压缩\n\n压缩和归档库\n\n*   [bzip2](http://www.bzip.org/)：一个完全免费，免费专利和高质量的数据压缩\n*   [doboz](https://bitbucket.org/attila_afra/doboz/overview)：能够快速解压缩的压缩库\n*   [PhysicsFS](https://icculus.org/physfs/)：对各种归档提供抽象访问的库，主要用于视频游戏，设计灵感部分来自于Quake3的文件子系统。\n*   [KArchive](https://projects.kde.org/projects/frameworks/karchive)：用于创建，读写和操作文件档案（例如zip和 tar）的库，它通过QIODevice的一系列子类，使用gzip格式，提供了透明的压缩和解压缩的数据。\n*   [LZ4](https://code.google.com/p/lz4/) ：非常快速的压缩算法\n*   [LZHAM](https://code.google.com/p/lzham/) ：无损压缩数据库，压缩比率跟LZMA接近，但是解压缩速度却要快得多。\n*   [LZMA](http://www.7-zip.org/sdk.html) ：7z格式默认和通用的压缩方法。\n*   [LZMAT](http://www.matcode.com/lzmat.htm) ：及其快速的实时无损数据压缩库\n*   [miniz](https://code.google.com/p/miniz/)：单一的C源文件，紧缩/膨胀压缩库，使用zlib兼容API，ZIP归档读写，PNG写方式。\n*   [Minizip](https://github.com/nmoinvaz/minizip)：Zlib最新bug修复，支持PKWARE磁盘跨越，AES加密和IO缓冲。\n*   [Snappy](https://code.google.com/p/snappy/) ：快速压缩和解压缩\n*   [ZLib](http://zlib.net/) ：非常紧凑的数据流压缩库\n*   [ZZIPlib](http://zziplib.sourceforge.net/)：提供ZIP归档的读权限。\n\n### <a name=\"t19\" target=\"_blank\"></a>并发性\n\n并发执行和多线程\n\n*   [Boost.Compute](https://github.com/kylelutz/compute) ：用于OpenCL的C++GPU计算库\n*   [Bolt](https://github.com/HSA-Libraries/Bolt) ：针对GPU进行优化的C++模板库\n*   [C++React](https://github.com/schlangster/cpp.react) ：用于C++11的反应性编程库\n*   [Intel TBB](https://www.threadingbuildingblocks.org/) ：Intel线程构件块\n*   [Libclsph](https://github.com/libclsph/libclsph)：基于OpenCL的GPU加速SPH流体仿真库\n*   [OpenCL](https://www.khronos.org/opencl/) ：并行编程的异构系统的开放标准\n*   [OpenMP](http://openmp.org/)：OpenMP API\n*   [Thrust](http://thrust.github.io/) ：类似于C++标准模板库的并行算法库\n*   [HPX](https://github.com/STEllAR-GROUP/hpx/) ：用于任何规模的并行和分布式应用程序的通用C++运行时系统\n*   [VexCL](https://github.com/ddemidov/vexcl) ：用于OpenCL/CUDA 的C++向量表达式模板库。\n\n### <a name=\"t20\" target=\"_blank\"></a>容器\n\n*   [C++ B-tree](https://code.google.com/p/cpp-btree/) ：基于B树数据结构，实现命令内存容器的模板库\n*   [Hashmaps](https://github.com/goossaert/hashmap)： C++中开放寻址哈希表算法的实现\n\n### <a name=\"t21\" target=\"_blank\"></a>密码学\n\n*   [Bcrypt](http://bcrypt.sourceforge.net/) ：一个跨平台的文件加密工具，加密文件可以移植到所有可支持的操作系统和处理器中。\n*   [BeeCrypt](https://github.com/fffaraz/awesome-cpp/blob/master)：\n*   [Botan](http://botan.randombit.net/)： C++加密库\n*   [Crypto++](http://www.cryptopp.com/)：一个有关加密方案的免费的C++库\n*   [GnuPG](https://www.gnupg.org/)： OpenPGP标准的完整实现\n*   [GnuTLS](http://www.gnutls.org/) ：实现了SSL，TLS和DTLS协议的安全通信库\n*   [Libgcrypt](http://www.gnu.org/software/libgcrypt/)\n*   [libmcrypt](https://github.com/fffaraz/awesome-cpp/blob/master)\n*   [LibreSSL](http://www.libressl.org/)：免费的SSL/TLS协议，属于2014 OpenSSL的一个分支\n*   [LibTomCrypt](https://github.com/libtom/libtomcrypt)：一个非常全面的，模块化的，可移植的加密工具\n*   [libsodium](https://github.com/jedisct1/libsodium)：基于NaCI的加密库，固执己见，容易使用\n*   [Nettle](http://www.lysator.liu.se/~nisse/nettle/) 底层的加密库\n*   [OpenSSL](http://www.openssl.org/) ： 一个强大的，商用的，功能齐全的，开放源代码的加密库。\n*   [Tiny AES128 in C](https://github.com/kokke/tiny-AES128-C) ：用C实现的一个小巧，可移植的实现了AES128ESB的加密算法\n\n### <a name=\"t22\" target=\"_blank\"></a>数据库\n\n数据库，SQL服务器，ODBC驱动程序和工具\n\n*   [hiberlite](https://github.com/paulftw/hiberlite) ：用于Sqlite3的C++对象关系映射\n*   [Hiredis](https://github.com/redis/hiredis)： 用于Redis数据库的很简单的C客户端库\n*   [LevelDB](https://github.com/google/leveldb)： 快速键值存储库\n*   [LMDB](http://symas.com/mdb/)：符合数据库四大基本元素的嵌入键值存储\n*   [MySQL++](http://www.tangentsoft.net/mysql++/)：封装了MySql的C API的C++ 包装器\n*   [RocksDB](https://github.com/facebook/rocksdb)：来自Facebook的嵌入键值的快速存储\n*   [SQLite](http://www.sqlite.org/)：一个完全嵌入式的，功能齐全的关系数据库，只有几百KB，可以正确包含到你的项目中。\n\n### <a name=\"t23\" target=\"_blank\"></a>调试\n\n调试库， 内存和资源泄露检测，单元测试\n\n*   [Boost.Test](http://www.boost.org/doc/libs/master/libs/test/doc/html/index.html)：Boost测试库\n*   [Catch](https://github.com/philsquared/Catch)：一个很时尚的，C++原生的框架，只包含头文件，用于单元测试，测试驱动开发和行为驱动开发。\n*   [CppUnit](http://www.freedesktop.org/wiki/Software/cppunit/)：由JUnit移植过来的C++测试框架\n*   [CTest](http://www.cmake.org/cmake/help/v2.8.8/ctest.html)：CMake测试驱动程序\n*   [googletest](http://code.google.com/p/googletest/)：谷歌C++测试框架\n*   [ig-debugheap](https://github.com/deplinenoise/ig-debugheap)：用于跟踪内存错误的多平台调试堆\n*   [libtap](https://github.com/zorgnax/libtap)：用C语言编写测试\n*   [MemTrack](http://www.almostinfinite.com/memtrack.html) —用于C++跟踪内存分配\n*   [microprofile](https://bitbucket.org/jonasmeyer/microprofile/overview)- 跨平台的网络试图分析器\n*   [minUnit](http://www.jera.com/techinfo/jtns/jtn002.html) ：使用C写的迷你单元测试框架，只使用了两个宏\n*   [Remotery](https://github.com/Celtoys/Remotery)：用于web视图的单一C文件分析器\n*   [UnitTest++](http://unittest-cpp.sourceforge.net/)：轻量级的C++单元测试框架\n\n### <a name=\"t24\" target=\"_blank\"></a>游戏引擎\n\n*   [Cocos2d-x](http://www.cocos2d-x.org/) ：一个跨平台框架，用于构建2D游戏，互动图书，演示和其他图形应用程序。\n*   [Grit](http://gritengine.com/) ：社区项目，用于构建一个免费的游戏引擎，实现开放的世界3D游戏。\n*   [Irrlicht](http://irrlicht.sourceforge.net/) ：C++语言编写的开源高性能的实时#D引擎\n*   [Polycode](http://polycode.org/)：C++实现的用于创建游戏的开源框架（与Lua绑定）。\n\n### <a name=\"t25\" target=\"_blank\"></a>图形用户界面\n\n*   [CEGUI](http://cegui.org.uk/) ： 很灵活的跨平台GUI库\n*   [FLTK](http://www.fltk.org/index.php) ：快速，轻量级的跨平台的C++GUI工具包。\n*   [GTK+](http://www.gtk.org/)： 用于创建图形用户界面的跨平台工具包\n*   [gtkmm](http://www.gtkmm.org/en/) ：用于受欢迎的GUI库GTK+的官方C++接口。\n*   [imgui](https://github.com/ocornut/imgui)：拥有最小依赖关系的立即模式图形用户界面\n*   [libRocket](http://librocket.com/) ：[libRocket](http://librocket.com/) 是一个C++ HTML/CSS 游戏接口中间件\n*   [MyGUI](http://mygui.info/) ：快速，灵活，简单的GUI\n*   [Ncurses](http://invisible-island.net/ncurses/)：终端用户界面\n*   [QCustomPlot](http://qcustomplot.com/) ：没有更多依赖关系的Qt绘图控件\n*   [Qwt](http://qwt.sourceforge.net/) ：用户与技术应用的Qt 控件\n*   [QwtPlot3D](http://qwtplot3d.sourceforge.net/) ：功能丰富的基于Qt/OpenGL的C++编程库，本质上提供了一群3D控件\n*   [OtterUI](https://github.com/Twolewis/OtterUI) ：[OtterUI](https://github.com/Twolewis/OtterUI) 是用于嵌入式系统和互动娱乐软件的用户界面开发解决方案\n*   [PDCurses](http://pdcurses.sourceforge.net/) 包含源代码和预编译库的公共图形函数库\n*   [wxWidgets](http://wxwidgets.org/) C++库，允许开发人员使用一个代码库可以为widows， Mac OS X，Linux和其他平台创建应用程序\n\n### <a name=\"t26\" target=\"_blank\"></a>图形\n\n*   [bgfx](https://github.com/bkaradzic/bgfx)：跨平台的渲染库\n*   [Cairo](http://www.cairographics.org/)：支持多种输出设备的2D图形库\n*   [Horde3D](https://github.com/horde3d/Horde3D) 一个小型的3D渲染和动画引擎\n*   [magnum](https://github.com/mosra/magnum) C++11和OpenGL 2D/3D 图形引擎\n*   [Ogre 3D](http://www.ogre3d.org/) 用C++编写的一个面向场景，实时，灵活的3D渲染引擎（并非游戏引擎）\n*   [OpenSceneGraph](http://www.openscenegraph.org/) 具有高性能的开源3D图形工具包\n*   [Panda3D](http://www.panda3d.org/) 用于3D渲染和游戏开发的框架，用Python和C++编写。\n*   [Skia](https://github.com/google/skia) 用于绘制文字，图形和图像的完整的2D图形库\n*   [urho3d](https://github.com/urho3d/Urho3D) 跨平台的渲染和游戏引擎。\n\n### <a name=\"t27\" target=\"_blank\"></a>图像处理\n\n*   [Boost.GIL](http://www.boost.org/doc/libs/1_56_0/libs/gil/doc/index.html)：通用图像库\n*   [CImg](http://cimg.sourceforge.net/) ：用于图像处理的小型开源C++工具包\n*   [CxImage](http://www.xdp.it/cximage.htm) ：用于加载，保存，显示和转换的图像处理和转换库，可以处理的图片格式包括 BMP, JPEG, GIF, PNG, TIFF, MNG, ICO, PCX, TGA, WMF, WBMP, JBG, J2K。\n*   [FreeImage](http://freeimage.sourceforge.net/) ：开源库，支持现在多媒体应用所需的通用图片格式和其他格式。\n*   [GDCM](http://gdcm.sourceforge.net/wiki/index.php/Main_Page)：Grassroots DICOM 库\n*   [ITK](http://www.itk.org/)：跨平台的开源图像分析系统\n*   [Magick++](http://www.imagemagick.org/script/api.php)：ImageMagick程序的C++接口\n*   [MagickWnd](http://www.imagemagick.org/script/api.php)：ImageMagick程序的C++接口\n*   [OpenCV](http://opencv.org/) ： 开源计算机视觉类库\n*   [tesseract-ocr](https://code.google.com/p/tesseract-ocr/)：OCR引擎\n*   [VIGRA](https://github.com/ukoethe/vigra) ：用于图像分析通用C++计算机视觉库\n*   [VTK](http://www.vtk.org/) ：用于3D计算机图形学，图像处理和可视化的开源免费软件系统。\n\n### <a name=\"t28\" target=\"_blank\"></a>国际化\n\n*   [gettext](http://www.gnu.org/software/gettext/) ：GNU `gettext’\n*   [IBM ICU](http://site.icu-project.org/)：提供Unicode 和全球化支持的C、C++ 和Java库\n*   [libiconv](http://www.gnu.org/software/libiconv/) ：用于不同字符编码之间的编码转换库\n\n### <a name=\"t29\" target=\"_blank\"></a>Jason\n\n*   [frozen](https://github.com/cesanta/frozen) ： C/C++的Jason解析生成器\n*   [Jansson](https://github.com/akheron/jansson) ：进行编解码和处理Jason数据的C语言库\n*   [jbson](https://github.com/chrismanning/jbson) ：C++14中构建和迭代BSON data,和Json 文档的库\n*   [JeayeSON](https://github.com/jeaye/jeayeson)：非常健全的C++ JSON库，只包含头文件\n*   [JSON++](https://github.com/hjiang/jsonxx) ： C++ JSON 解析器\n*   [json-parser](https://github.com/udp/json-parser)：用可移植的ANSI C编写的JSON解析器，占用内存非常少\n*   [json11](https://github.com/dropbox/json11) ：一个迷你的C++11 JSON库\n*   [jute](https://github.com/amir-s/jute) ：非常简单的C++ JSON解析器\n*   [ibjson](https://github.com/vincenthz/libjson)：C语言中的JSON解析和打印库，很容易和任何模型集成。\n*   [libjson](http://sourceforge.net/projects/libjson/)：轻量级的JSON库\n*   [PicoJSON](https://github.com/kazuho/picojson)：C++中JSON解析序列化，只包含头文件\n*   [qt-json](https://github.com/gaudecker/qt-json) ：用于JSON数据和 QVariant层次间的相互解析的简单类\n*   [QJson](https://github.com/flavio/qjson)：将JSON数据映射到QVariant对象的基于Qt的库\n*   [RapidJSON](https://github.com/miloyip/rapidjson)： 用于C++的快速JSON 解析生成器，包含SAX和DOM两种风格的API\n*   [YAJL](https://github.com/lloyd/yajl) ：C语言中快速流JSON解析库\n\n### <a name=\"t30\" target=\"_blank\"></a>日志\n\n*   [Boost.Log](http://www.boost.org/doc/libs/1_56_0/libs/log/doc/html/index.html) ：设计非常模块化，并且具有扩展性\n*   [easyloggingpp](https://github.com/easylogging/easyloggingpp)：C++日志库，只包含单一的头文件。\n*   [Log4cpp](http://log4cpp.sourceforge.net/) ：一系列C++类库，灵活添加日志到文件，系统日志，IDSA和其他地方。\n*   [templog](http://www.templog.org/)：轻量级C++库，可以添加日志到你的C++应用程序中\n\n### <a name=\"t31\" target=\"_blank\"></a>机器学习\n\n*   [Caffe](https://github.com/BVLC/caffe) ：快速的神经网络框架\n*   [CCV](https://github.com/liuliu/ccv) ：以C语言为核心的现代计算机视觉库\n*   [mlpack](http://www.mlpack.org/) ：可扩展的C++机器学习库\n*   [OpenCV](https://github.com/Itseez/opencv)：开源计算机视觉库\n*   [Recommender](https://github.com/GHamrouni/Recommender)：使用协同过滤进行产品推荐/建议的C语言库。\n*   [SHOGUN](https://github.com/shogun-toolbox/shogun)：Shogun 机器学习工具\n*   [sofia-ml](https://code.google.com/p/sofia-ml/) ：用于机器学习的快速增量算法套件\n\n### <a name=\"t32\" target=\"_blank\"></a>数学\n\n*   [Armadillo](http://arma.sourceforge.net/) ：高质量的C++线性代数库，速度和易用性做到了很好的平衡。语法和MatlAB很相似\n*   [blaze](https://code.google.com/p/blaze-lib/)：高性能的C++数学库，用于密集和稀疏算法。\n*   [ceres-solver](http://ceres-solver.org/) ：来自谷歌的C++库，用于建模和解决大型复杂非线性最小平方问题。\n*   [CGal](http://www.cgal.org/)： 高效，可靠的集合算法集合\n*   [cml](http://cmldev.net/) ：用于游戏和图形的免费C++数学库\n*   [Eigen](http://eigen.tuxfamily.org/) ：高级C++模板头文件库，包括线性代数，矩阵，向量操作，数值解决和其他相关的算法。\n*   [GMTL](http://ggt.sourceforge.net/)：数学图形模板库是一组广泛实现基本图形的工具。\n*   [GMP](https://gmplib.org/)：用于个高精度计算的C/C++库，处理有符号整数，有理数和浮点数。\n\n### <a name=\"t33\" target=\"_blank\"></a>多媒体\n\n*   [GStreamer](http://gstreamer.freedesktop.org/) ：构建媒体处理组件图形的库\n*   [LIVE555 Streaming Media](http://www.live555.com/liveMedia/) ：使用开放标准协议(RTP/RTCP, RTSP, SIP) 的多媒体流库\n*   [libVLC](https://wiki.videolan.org/LibVLC) ：libVLC (VLC SDK)媒体框架\n*   [QtAv](https://github.com/wang-bin/QtAV)：基于Qt和FFmpeg的多媒体播放框架，能够帮助你轻而易举地编写出一个播放器\n*   [SDL](http://www.libsdl.org/) ：简单直控媒体层\n*   [SFML](http://www.sfml-dev.org/) ：快速，简单的多媒体库\n\n### <a name=\"t34\" target=\"_blank\"></a>网络\n\n*   [ACE](http://www.cs.wustl.edu/~schmidt/ACE.html)：C++面向对象网络变成工具包\n*   [Boost.Asio](http://think-async.com/)：用于网络和底层I/O编程的跨平台的C++库\n*   [Casablanca](http://casablanca.codeplex.com/)：C++ REST SDK\n*   [cpp-netlib](http://cpp-netlib.org/)：高级网络编程的开源库集合\n*   [Dyad.c](https://github.com/rxi/dyad)：C语言的异步网络\n*   [libcurl](http://curl.haxx.se/libcurl/) :多协议文件传输库\n*   [Mongoose](https://github.com/cesanta/mongoose)<span style=\"text-decoration:underline\">：</span>非常轻量级的网络服务器\n*   [Muduo](https://github.com/chenshuo/muduo) ：用于Linux多线程服务器的C++非阻塞网络库\n*   [net_skeleton](https://github.com/cesanta/net_skeleton) ：C/C++的TCP 客户端/服务器库\n*   [nope.c](https://github.com/riolet/nope.c) ：基于C语言的超轻型软件平台，用于可扩展的服务器端和网络应用。 对于C编程人员，可以考虑node.js\n*   [Onion](https://github.com/davidmoreno/onion) :C语言HTTP服务器库，其设计为轻量级，易使用。\n*   [POCO](https://github.com/pocoproject)：用于构建网络和基于互联网应用程序的C++类库，可以运行在桌面，服务器，移动和嵌入式系统。\n*   [RakNet](https://github.com/OculusVR/RakNet)：为游戏开发人员提供的跨平台的开源C++网络引擎。\n*   [Tuf o](https://github.com/vinipsmaker/tufao) ：用于Qt之上的C++构建的异步Web框架。\n*   [WebSocket++](https://github.com/zaphoyd/websocketpp) ：基于C++/Boost Aiso的websocket 客户端/服务器库\n*   [ZeroMQ](http://zeromq.org/) ：高速，模块化的异步通信库\n\n### <a name=\"t35\" target=\"_blank\"></a>物理学\n\n动力学仿真引擎\n\n*   [Box2D](https://code.google.com/p/box2d/)：2D的游戏物理引擎。\n*   [Bullet](https://github.com/bulletphysics/bullet3) ：3D的游戏物理引擎。\n*   [Chipmunk](https://github.com/slembcke/Chipmunk2D) ：快速，轻量级的2D游戏物理库\n*   [LiquidFun](https://github.com/google/liquidfun)：2D的游戏物理引擎\n*   [ODE](http://www.ode.org/) ：开放动力学引擎-开源，高性能库，模拟刚体动力学。\n*   [ofxBox2d](https://github.com/vanderlin/ofxBox2d)：Box2D开源框架包装器。\n*   [Simbody](https://github.com/simbody/simbody) ：高性能C++多体动力学/物理库，模拟关节生物力学和机械系统，像车辆，机器人和人体骨骼。\n\n### <a name=\"t36\" target=\"_blank\"></a>机器人学\n\n*   [MOOS-IvP](http://moos-ivp.org/) ：一组开源C++模块，提供机器人平台的自主权，尤其是自主的海洋车辆。\n*   [MRPT](http://www.mrpt.org/)：移动机器人编程工具包\n*   [PCL](https://github.com/PointCloudLibrary/pcl) ：点云库是一个独立的，大规模的开放项目，用于2D/3D图像和点云处理。\n*   [Robotics Library (RL)](http://www.roboticslibrary.org/)： 一个独立的C++库，包括机器人动力学，运动规划和控制。\n*   [RobWork](http://www.robwork.dk/jrobwork/)：一组C++库的集合，用于机器人系统的仿真和控制。\n*   [ROS](http://wiki.ros.org/) ：机器人操作系统，提供了一些库和工具帮助软件开发人员创建机器人应用程序。\n\n### <a name=\"t37\" target=\"_blank\"></a>科学计算\n\n*   [FFTW](http://www.fftw.org/) :用一维或者多维计算DFT的C语言库。\n*   [GSL](http://www.gnu.org/software/gsl/)：GNU科学库。\n\n### <a name=\"t38\" target=\"_blank\"></a>脚本\n\n*   [ChaiScript](https://github.com/ChaiScript/ChaiScript/) ：用于C++的易于使用的嵌入式脚本语言。\n*   [Lua](http://www.lua.org/) ：用于配置文件和基本应用程序脚本的小型快速脚本引擎。\n*   [luacxx](https://github.com/dafrito/luacxx)：用于创建Lua绑定的C++ 11 API\n*   [SWIG](http://www.swig.org/) ：一个可以让你的C++代码链接到JavaScript，Perl，PHP，Python，Tcl和Ruby的包装器/接口生成器\n*   [V7](https://github.com/cesanta/v7)：嵌入式的JavaScript 引擎。\n*   [V8](http://code.google.com/p/v8/) ：谷歌的快速JavaScript引擎，可以被嵌入到任何C++应用程序中。\n\n### <a name=\"t39\" target=\"_blank\"></a>序列化\n\n*   [Cap’n Proto](http://kentonv.github.io/capnproto/) ：快速数据交换格式和RPC系统。\n*   [cereal](https://github.com/USCiLab/cereal) ：C++11 序列化库\n*   [FlatBuffers](https://github.com/google/flatbuffers) ：内存高效的序列化库\n*   [MessagePack](https://github.com/msgpack/msgpack-c) ：C/C++的高效二进制序列化库，例如 JSON\n*   [protobuf](http://code.google.com/p/protobuf/) ：协议缓冲，谷歌的数据交换格式。\n*   [protobuf-c](https://github.com/protobuf-c/protobuf-c) ：C语言的协议缓冲实现\n*   [SimpleBinaryEncoding](https://github.com/real-logic/simple-binary-encoding)：用于低延迟应用程序的对二进制格式的应用程序信息的编码和解码。\n*   [Thrift](https://thrift.apache.org/) ：高效的跨语言IPC/RPC，用于C++，Java，Python，PHP，C#和其它多种语言中，最初由Twitter开发。\n\n### <a name=\"t40\" target=\"_blank\"></a>视频\n\n*   [libvpx](http://www.webmproject.org/code/) ：VP8/VP9编码解码SDK\n*   [FFmpeg](https://www.ffmpeg.org/) ：一个完整的，跨平台的解决方案，用于记录，转换视频和音频流。\n*   [libde265](https://github.com/strukturag/libde265) ：开放的h.265视频编解码器的实现。\n*   [OpenH264](https://github.com/cisco/openh264)：开源H.364 编解码器。\n*   [Theora](http://www.theora.org/) ：免费开源的视频压缩格式。\n\n### <a name=\"t41\" target=\"_blank\"></a>虚拟机\n\n*   [CarpVM](https://github.com/tekknolagi/carp)：C中有趣的VM，让我们一起来看看这个。\n*   [MicroPython](https://github.com/micropython/micropython) ：旨在实现单片机上Python3.x的实现\n*   [TinyVM](https://github.com/jakogut/tinyvm)：用纯粹的ANSI C编写的小型，快速，轻量级的虚拟机。\n\n### <a name=\"t42\" target=\"_blank\"></a>Web应用框架\n\n*   [Civetweb](https://github.com/bel2125/civetweb) ：提供易于使用，强大的，C/C++嵌入式Web服务器，带有可选的CGI，SSL和Lua支持。\n*   [CppCMS](http://cppcms.com/) ：免费高性能的Web开发框架（不是 CMS）.\n*   [Crow](https://github.com/ipkn/crow) ：一个C++微型web框架（灵感来自于Python Flask）\n*   [Kore](https://kore.io/) :使用C语言开发的用于web应用程序的超快速和灵活的web服务器/框架。\n*   [libOnion](http://www.coralbits.com/libonion/)：轻量级的库，帮助你使用C编程语言创建web服务器。\n*   [QDjango](https://github.com/jlaine/qdjango/)：使用C++编写的，基于Qt库的web框架，试图效仿Django API，因此得此名。\n*   [Wt](http://www.webtoolkit.eu/wt) ：开发Web应用的C++库。\n\n### <a name=\"t43\" target=\"_blank\"></a>XML\n\nXML就是个垃圾，xml的解析很烦人，对于计算机它也是个灾难。这种糟糕的东西完全没有存在的理由了。-Linus Torvalds\n\n*   [Expat](http://www.libexpat.org/) ：用C语言编写的xml解析库\n*   [Libxml2](http://xmlsoft.org/) ：Gnome的xml C解析器和工具包\n*   [libxml++](http://libxmlplusplus.sourceforge.net/) ：C++的xml解析器\n*   [PugiXML](http://pugixml.org/) ：用于C++的，支持XPath的轻量级，简单快速的XML解析器。\n*   [RapidXml](http://rapidxml.sourceforge.net/) ：试图创建最快速的XML解析器，同时保持易用性，可移植性和合理的W3C兼容性。\n*   [TinyXML](http://sourceforge.net/projects/tinyxml/) ：简单小型的C++XML解析器，可以很容易地集成到其它项目中。\n*   [TinyXML2](https://github.com/leethomason/tinyxml2)：简单快速的C++CML解析器，可以很容易集成到其它项目中。\n*   [TinyXML++](https://code.google.com/p/ticpp/)：TinyXML的一个全新的接口，使用了C++的许多许多优势，模板，异常和更好的异常处理。\n*   [Xerces-C++](http://xerces.apache.org/xerces-c/) ：用可移植的C++的子集编写的XML验证解析器。\n\n### <a name=\"t44\" target=\"_blank\"></a>多项混杂\n\n一些有用的库或者工具，但是不适合上面的分类，或者还没有分类。\n\n*   [C++ Format](https://github.com/cppformat/cppformat) ：C++的小型，安全和快速格式化库\n*   [casacore](https://code.google.com/p/casacore/) ：从aips++ 派生的一系列C++核心库\n*   [cxx-prettyprint](https://github.com/louisdx/cxx-prettyprint)：用于C++容器的打印库\n*   [DynaPDF](http://www.dynaforms.com/) ：易于使用的PDF生成库\n*   [gcc-poison](https://github.com/leafsr/gcc-poison) ：帮助开发人员禁止应用程序中的不安全的C/C++函数的简单的头文件。\n*   [googlemock](http://code.google.com/p/googlemock/)：编写和使用C++模拟类的库\n*   [HTTP Parser](https://github.com/joyent/http-parser) ：C的http请求/响应解析器\n*   [libcpuid](https://github.com/anrieff/libcpuid) ：用于x86 CPU检测盒特征提取的小型C库\n*   [libevil](https://github.com/avati/libevil) ：许可证管理器\n*   [libusb](http://www.libusb.org/)：允许移动访问USB设备的通用USB库\n*   [PCRE](http://pcre.org/)：正则表达式C库，灵感来自于Perl中正则表达式的功能。\n*   [Remote Call Framework](http://www.deltavsoft.com/) ：C++的进程间通信框架。\n*   [Scintilla](http://scintilla.org/) ：开源的代码编辑控件\n*   [Serial Communication Library](https://github.com/wjwwood/serial) ：C++语言编写的跨平台，串口库。\n*   [SDS](https://github.com/antirez/sds)：C的简单动态字符串库\n*   [SLDR](https://github.com/cesanta/sldr) ：超轻的DNS解析器\n*   [SLRE](https://github.com/cesanta/slre)： 超轻的正则表达式库\n*   [Stage](https://github.com/rtv/Stage) ：移动机器人模拟器\n*   [VarTypes](https://code.google.com/p/vartypes/)：C++/Qt4功能丰富，面向对象的管理变量的框架。\n*   [ZBar](http://zbar.sourceforge.net/)：‘条形码扫描器’库，可以扫描照片，图片和视频流中的条形码，并返回结果。\n*   [CppVerbalExpressions](https://github.com/VerbalExpressions/CppVerbalExpressions) ：易于使用的C++正则表达式\n*   [QtVerbalExpressions](https://github.com/VerbalExpressions/QtVerbalExpressions)：基于C++ VerbalExpressions 库的Qt库\n*   [PHP-CPP](https://github.com/CopernicaMarketingSoftware/PHP-CPP)：使用C++来构建PHP扩展的库\n*   [Better String](http://bstring.sourceforge.net/) ：C的另一个字符串库，功能更丰富，但是没有缓冲溢出问题，还包含了一个C++包装器。\n\n### <a name=\"t45\" target=\"_blank\"></a>软件\n\n用于创建开发环境的软件\n\n### <a name=\"t46\" target=\"_blank\"></a>编译器\n\nC/C++编译器列表\n\n*   [Clang](http://clang.llvm.org/) :由苹果公司开发的\n*   [GCC](https://gcc.gnu.org/)：GNU编译器集合\n*   [Intel C++ Compiler](https://software.intel.com/en-us/c-compilers) ：由英特尔公司开发\n*   [LLVM](http://llvm.org/) ：模块化和可重用编译器和工具链技术的集合\n*   [Microsoft Visual C++](http://msdn.microsoft.com/en-us/vstudio/hh386302.aspx) ：MSVC，由微软公司开发\n*   [Open WatCom](http://www.openwatcom.org/index.php/Main_Page) ：Watcom，C，C++和Fortran交叉编译器和工具\n*   [TCC](http://bellard.org/tcc/) ：轻量级的C语言编译器\n\n### <a name=\"t47\" target=\"_blank\"></a>在线编译器\n\n在线C/C++编译器列表\n\n*   [codepad](http://codepad.org/) ：在线编译器/解释器，一个简单的协作工具\n*   [CodeTwist](http://codetwist.com/)：一个简单的在线编译器/解释器，你可以粘贴的C,C++或者Java代码，在线执行并查看结果\n*   [coliru](http://coliru.stacked-crooked.com/) ：在线编译器/shell， 支持各种C++编译器\n*   [Compiler Explorer](http://gcc.godbolt.org/)：交互式编译器，可以进行汇编输出\n*   [CompileOnline](http://www.compileonline.com/compile_cpp11_online.php)：Linux上在线编译和执行C++程序\n*   [Ideone](http://ideone.com/) ：一个在线编译器和调试工具，允许你在线编译源代码并执行，支持60多种编程语言。\n\n### <a name=\"t48\" target=\"_blank\"></a>调试器\n\nC/C++调试器列表\n\n*   [Comparison of debuggers](http://en.wikipedia.org/wiki/Comparison_of_debuggers) ：来自维基百科的调试器列表\n*   [GDB](https://www.gnu.org/software/gdb) ：GNU调试器\n*   [Valgrind](http://valgrind.org/)：内存调试，内存泄露检测，性能分析工具。\n\n### <a name=\"t49\" target=\"_blank\"></a>集成开发环境（IDE）\n\nC/C++集成开发环境列表\n\n*   [AppCode](http://www.jetbrains.com/objc/) ：构建与JetBrains’ IntelliJ IDEA 平台上的用于Objective-C，C,C++，Java和Java开发的集成开发环境\n*   [CLion](http://www.jetbrains.com/clion/)：来自JetBrains的跨平台的C/C++的集成开发环境\n*   [Code::Blocks](http://www.codeblocks.org/) ：免费C，C++和Fortran的集成开发环境\n*   [CodeLite](http://codelite.org/) ：另一个跨平台的免费的C/C++集成开发环境\n*   [Dev-C++](http://sourceforge.net/projects/orwelldevcpp/)：可移植的C/C++/C++11集成开发环境\n*   [Eclipse CDT](http://www.eclipse.org/cdt/)：基于Eclipse平台的功能齐全的C和C++集成开发环境\n*   [Geany](http://www.geany.org/) ：轻量级的快速，跨平台的集成开发环境。\n*   [IBM VisualAge](http://www-03.ibm.com/software/products/en/visgen) ：来自IBM的家庭计算机集成开发环境。\n*   [Irony-mode](https://github.com/Sarcasm/irony-mode)：由libclang驱动的用于Emacs的C/C++微模式\n*   [KDevelop](https://www.kdevelop.org/)：免费开源集成开发环境\n*   [Microsoft Visual Studio](http://www.visualstudio.com/) ：来自微软的集成开发环境\n*   [NetBeans](https://netbeans.org/) ：主要用于Java开发的的集成开发环境，也支持其他语言，尤其是PHP，C/C++和HTML5。\n*   [Qt Creator](http://qt-project.org/)：跨平台的C++，Javascript和QML集成开发环境，也是Qt SDK的一部分。\n*   [rtags](https://github.com/Andersbakken/rtags)：C/C++的客户端服务器索引，用于 跟基于clang的emacs的集成\n*   [Xcode](https://developer.apple.com/xcode/) ：由苹果公司开发\n*   [YouCompleteMe](https://valloric.github.io/YouCompleteMe/)：一个用于Vim的根据你敲的代码快速模糊搜索并进行代码补全的引擎。\n\n### <a name=\"t50\" target=\"_blank\"></a>构建系统\n\n*   [Bear](https://github.com/rizsotto/Bear) ：用于为clang工具生成编译数据库的工具\n*   [Biicode](https://www.biicode.com/)：基于文件的简单依赖管理器。\n*   [CMake](http://www.cmake.org/) ：跨平台的免费开源软件用于管理软件使用独立编译的方法进行构建的过程。\n*   [CPM](https://github.com/iauns/cpm)：基于CMake和Git的C++包管理器\n*   [FASTBuild](http://www.fastbuild.org/docs/home.html)：高性能，开源的构建系统，支持高度可扩展性的编译，缓冲和网络分布。\n*   [Ninja](http://martine.github.io/ninja/) ：专注于速度的小型构建系统\n*   [Scons](http://www.scons.org/) ：使用Python scipt 配置的软件构建工具\n*   [tundra](https://github.com/deplinenoise/tundra) ：高性能的代码构建系统，甚至对于非常大型的软件项目，也能提供最好的增量构建次数。\n*   [tup](http://gittup.org/tup/)：基于文件的构建系统，用于后台监控变化的文件。\n\n### <a name=\"t51\" target=\"_blank\"></a>静态代码分析\n\n提高质量，减少瑕疵的代码分析工具列表\n\n*   [Cppcheck](http://cppcheck.sourceforge.net/) ：静态C/C++代码分析工具\n*   [include-what-you-use](https://code.google.com/p/include-what-you-use/) ：使用clang进行代码分析的工具，可以#include在C和C++文件中。\n*   [OCLint](http://oclint.org/) ：用于C，C++和Objective-C的静态源代码分析工具，用于提高质量，减少瑕疵。\n*   [Clang Static Analyzer](http://clang-analyzer.llvm.org/index.html)：查找C，C++和Objective-C程序bug的源代码分析工具\n*   [List of tools for static code analysis](http://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis#C.2FC.2B.2B) ：来自维基百科的静态代码分析工具列表\n","source":"_posts/cplusplus学习笔记.md","raw":"---\ntitle: 值得推荐的C C++框架和库\ndate: 2017-09-22 17:45:05\ncategory: C++\ntags: C++\n---\n文章出处：http://blog.csdn.net/xiaoxiaoyeyaya/article/details/42541419\n\n## <a name=\"t1\" target=\"_blank\"></a>- 1\\. Webbench\n\nWebbench是一个在linux下使用的非常简单的网站压测工具。它使用fork()模拟多个客户端同时访问我们设定的URL，测试网站在压力下工作的性能，最多可以模拟3万个并发连接去测试网站的负载能力。Webbench使用C语言编写, 代码实在太简洁，源码加起来不到600行。\n\n下载链接：[http://home.tiscali.cz/~cz210552/webbench.html](http://home.tiscali.cz/~cz210552/webbench.html)\n\n## <a name=\"t2\" target=\"_blank\"></a>- 2\\. Tinyhttpd\n\ntinyhttpd是一个超轻量型Http Server，使用C语言开发，全部代码只有502行(包括注释)，附带一个简单的Client，可以通过阅读这段代码理解一个 Http Server 的本质。\n\n下载链接：[http://sourceforge.net/projects/tinyhttpd/](http://sourceforge.net/projects/tinyhttpd/)\n\n## <a name=\"t3\" target=\"_blank\"></a>- 3\\. cJSON\n\ncJSON是C语言中的一个JSON编解码器，非常轻量级，C文件只有500多行，速度也非常理想。\n\ncJSON也存在几个弱点，虽然功能不是非常强大，但cJSON的小身板和速度是最值得赞赏的。其代码被非常好地维护着，结构也简单易懂，可以作为一个非常好的C语言项目进行学习。\n\n项目主页:[http://sourceforge.net/projects/cjson/](http://sourceforge.net/projects/cjson/)\n\n## <a name=\"t4\" target=\"_blank\"></a>- 4\\. CMockery\n\ncmockery是google发布的用于C单元测试的一个轻量级的框架。它很小巧，对其他开源包没有依赖，对被测试代码侵入性小。cmockery的源代码行数不到3K，你阅读一下will_return和mock的源代码就一目了然了。\n\n主要特点：\n\n*   免费且开源，google提供技术支持；\n*   轻量级的框架，使测试更加快速简单；\n*   避免使用复杂的编译器特性，对老版本的编译器来讲，兼容性好;\n*   并不强制要求待测代码必须依赖C99标准，这一特性对许多嵌入式系统的开发很有用\n\n下载链接：[http://code.google.com/p/cmockery/downloads/list](http://code.google.com/p/cmockery/downloads/list)\n\n## <a name=\"t5\" target=\"_blank\"></a>- 5\\. Libev\n\nlibev是一个开源的事件驱动库，基于epoll，kqueue等OS提供的基础设施。其以高效出名，它可以将IO事件，定时器，和信号统一起来，统一放在事件处理这一套框架下处理。基于Reactor模式，效率较高，并且代码精简（4.15版本8000多行），是学习事件驱动编程的很好的资源。\n\n下载链接：[http://software.schmorp.de/pkg/libev.html](http://software.schmorp.de/pkg/libev.html)\n\n## <a name=\"t6\" target=\"_blank\"></a>- 6\\. Memcached\n\nMemcached 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态数据库驱动网站的速度。Memcached 基于一个存储键/值对的 hashmap。Memcached-1.4.7的代码量还是可以接受的，只有10K行左右。\n\n下载地址：[http://memcached.org/](http://memcached.org/)\n\n## <a name=\"t7\" target=\"_blank\"></a>- 7\\. Lua\n\nLua很棒，Lua是巴西人发明的，这些都令我不爽，但是还不至于脸红，最多眼红。\n\n让我脸红的是Lua的源代码，百分之一百的ANSI C，一点都不掺杂。在任何支持ANSI C编译器的平台上都可以轻松编译通过。我试过，真是一点废话都没有。Lua的代码数量足够小，5.1.4仅仅1.5W行，去掉空白行和注释估计能到1W行。\n\n下载地址：[http://www.lua.org/](http://www.lua.org/)\n\n## <a name=\"t8\" target=\"_blank\"></a>- 8\\. SQLite\n\nSQLite是一个开源的嵌入式关系数据库，实现自包容、零配置、支持事务的SQL数据库引擎。 其特点是高度便携、使用方便、结构紧凑、高效、可靠。足够小，大致3万行C代码，250K。\n\n下载地址：http://www.sqlite.org/ 。\n\n## <a name=\"t9\" target=\"_blank\"></a>- 9\\. UNIX v6\n\nUNIX V6 的内核源代码包括设备驱动程序在内 约有1 万行，这个数量的源代码，初学者是能够充分理解的。有一种说法是一个人所能理解的代码量上限为1 万行，UNIX V6的内核源代码从数量上看正好在这个范围之内。看到这里，大家是不是也有“如果只有1万行的话没准儿我也能学会”的想法呢？\n\n另一方面，最近的操作系统，例如Linux 最新版的内核源代码据说超过了1000 万行。就算不是初学者，想完全理解全部代码基本上也是不可能的。\n\n下载地址：[http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6](http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6)\n\n## <a name=\"t10\" target=\"_blank\"></a>- 10\\. NETBSD\n\nNetBSD是一个免费的，具有高度移植性的 UNIX-like 操作系统，是现行可移植平台最多的操作系统，可以在许多平台上执行，从 64bit alpha 服务器到手持设备和嵌入式设备。NetBSD计划的口号是：”Of course it runs NetBSD”。它设计简洁，代码规范，拥有众多先进特性，使得它在业界和学术界广受好评。由于简洁的设计和先进的特征，使得它在生产和研究方面，都有卓越的表现，而且它也有受使用者支持的完整的源代码。许多程序都可以很容易地通过NetBSD Packages Collection获得。\n\n下载地址：[http://www.netbsd.org/](http://www.netbsd.org/)\n\n<!-- more -->\n\n## <a name=\"t11\" target=\"_blank\"></a>C++ 资源大全\n\n关于 C++ 框架、库和资源的一些汇总列表，内容包括：标准库、Web应用框架、人工智能、数据库、图片处理、机器学习、日志、代码分析等。\n\n### <a name=\"t12\" target=\"_blank\"></a>标准库\n\nC++标准库，包括了STL容器，算法和函数等。\n\n*   [C++ Standard Library](http://en.wikipedia.org/wiki/C%2B%2B_Standard_Library)：是一系列类和函数的集合，使用核心语言编写，也是C++ISO自身标准的一部分。\n*   [Standard Template Library](http://en.wikipedia.org/wiki/Standard_Template_Library)：标准模板库\n*   [C POSIX library](http://en.wikipedia.org/wiki/C_POSIX_library) ： POSIX系统的C标准库规范\n*   [ISO C++ Standards Committee](https://github.com/cplusplus) ：C++标准委员会\n\n### <a name=\"t13\" target=\"_blank\"></a>框架\n\nC++通用框架和库\n\n*   [Apache C++ Standard Library](http://stdcxx.apache.org/)：是一系列算法，容器，迭代器和其他基本组件的集合\n*   [ASL](http://stlab.adobe.com/) ：Adobe源代码库提供了同行的评审和可移植的C++源代码库。\n*   [Boost](https://github.com/boostorg) ：大量通用C++库的集合。\n*   [BDE](https://github.com/bloomberg/bde) ：来自于彭博资讯实验室的开发环境。\n*   [Cinder](http://libcinder.org/)：提供专业品质创造性编码的开源开发社区。\n*   [Cxxomfort](http://ryan.gulix.cl/fossil.cgi/cxxomfort/)：轻量级的，只包含头文件的库，将C++ 11的一些新特性移植到C++03中。\n*   [Dlib](http://dlib.net/)：使用契约式编程和现代C++科技设计的通用的跨平台的C++库。\n*   [EASTL](https://github.com/paulhodge/EASTL) ：EA-STL公共部分\n*   [ffead-cpp](https://github.com/sumeetchhetri/ffead-cpp) ：企业应用程序开发框架\n*   [Folly](https://github.com/facebook/folly)：由Facebook开发和使用的开源C++库\n*   [JUCE](https://github.com/julianstorer/JUCE) ：包罗万象的C++类库，用于开发跨平台软件\n*   [libPhenom](https://github.com/facebook/libphenom)：用于构建高性能和高度可扩展性系统的事件框架。\n*   [LibSourcey](https://github.com/sourcey/libsourcey) ：用于实时的视频流和高性能网络应用程序的C++11 evented IO\n*   [LibU](https://github.com/koanlogic/libu) ： C语言写的多平台工具库\n*   [Loki](http://loki-lib.sourceforge.net/) ：C++库的设计，包括常见的设计模式和习语的实现。\n*   [MiLi](https://code.google.com/p/mili/) ：只含头文件的小型C++库\n*   [openFrameworks](http://www.openframeworks.cc/) ：开发C++工具包，用于创意性编码。\n*   [Qt](http://qt-project.org/) ：跨平台的应用程序和用户界面框架\n*   [Reason](http://code.google.com/p/reason/) ：跨平台的框架，使开发者能够更容易地使用Java，.Net和Python，同时也满足了他们对C++性能和优势的需求。\n*   [ROOT](http://root.cern.ch/) ：具备所有功能的一系列面向对象的框架，能够非常高效地处理和分析大量的数据，为欧洲原子能研究机构所用。\n*   [STLport](http://www.stlport.org/)：是STL具有代表性的版本\n*   [STXXL](http://stxxl.sourceforge.net/)：用于额外的大型数据集的标准模板库。\n*   [Ultimate++](http://www.ultimatepp.org/) ：C++跨平台快速应用程序开发框架\n*   [Windows Template Library](http://sourceforge.net/projects/wtl/)：用于开发Windows应用程序和UI组件的C++库\n*   [Yomm11](https://github.com/jll63/yomm11) ：C++11的开放multi-methods.\n\n### <a name=\"t14\" target=\"_blank\"></a>人工智能\n\n*   [btsk](https://github.com/aigamedev/btsk) ：游戏行为树启动器工具\n*   [Evolving Objects](http://eodev.sourceforge.net/)：基于模板的，ANSI C++演化计算库，能够帮助你非常快速地编写出自己的随机优化算法。\n*   [Neu](https://github.com/andrometa/neu)：C++11框架，编程语言集，用于创建人工智能应用程序的多用途软件系统。\n\n### <a name=\"t15\" target=\"_blank\"></a>异步事件循环\n\n*   [Boost.Asio](http://think-async.com/)：用于网络和底层I/O编程的跨平台的C++库。\n*   [libev](http://libev.schmorp.de/) ：功能齐全，高性能的时间循环，轻微地仿效libevent，但是不再像libevent一样有局限性，也修复了它的一些bug。\n*   [libevent](http://libevent.org/) ：事件通知库\n*   [libuv](https://github.com/joyent/libuv) ：跨平台异步I/O。\n\n### <a name=\"t16\" target=\"_blank\"></a>音频\n\n音频，声音，音乐，数字化音乐库\n\n*   [FMOD](http://www.fmod.org/) ：易于使用的跨平台的音频引擎和音频内容的游戏创作工具。\n*   [Maximilian](https://github.com/micknoise/Maximilian) ：C++音频和音乐数字信号处理库\n*   [OpenAL](http://www.openal.org/) ：开源音频库—跨平台的音频API\n*   [Opus](http://opus-codec.org/)：一个完全开放的，免版税的，高度通用的音频编解码器\n*   [Speex](http://www.speex.org/)：免费编解码器，为Opus所废弃\n*   [Tonic](https://github.com/TonicAudio/Tonic)： C++易用和高效的音频合成\n*   [Vorbis](http://xiph.org/vorbis/)： Ogg Vorbis是一种完全开放的，非专有的，免版税的通用压缩音频格式。\n\n### <a name=\"t17\" target=\"_blank\"></a>生态学\n\n生物信息，基因组学和生物技术\n\n*   [libsequence](http://molpopgen.github.io/libsequence/)：用于表示和分析群体遗传学数据的C++库。\n*   [SeqAn](http://www.seqan.de/)：专注于生物数据序列分析的算法和数据结构。\n*   [Vcflib](https://github.com/ekg/vcflib) ：用于解析和处理VCF文件的C++库\n*   [Wham](https://github.com/jewmanchue/wham)：直接把联想测试应用到BAM文件的基因结构变异。\n\n### <a name=\"t18\" target=\"_blank\"></a>压缩\n\n压缩和归档库\n\n*   [bzip2](http://www.bzip.org/)：一个完全免费，免费专利和高质量的数据压缩\n*   [doboz](https://bitbucket.org/attila_afra/doboz/overview)：能够快速解压缩的压缩库\n*   [PhysicsFS](https://icculus.org/physfs/)：对各种归档提供抽象访问的库，主要用于视频游戏，设计灵感部分来自于Quake3的文件子系统。\n*   [KArchive](https://projects.kde.org/projects/frameworks/karchive)：用于创建，读写和操作文件档案（例如zip和 tar）的库，它通过QIODevice的一系列子类，使用gzip格式，提供了透明的压缩和解压缩的数据。\n*   [LZ4](https://code.google.com/p/lz4/) ：非常快速的压缩算法\n*   [LZHAM](https://code.google.com/p/lzham/) ：无损压缩数据库，压缩比率跟LZMA接近，但是解压缩速度却要快得多。\n*   [LZMA](http://www.7-zip.org/sdk.html) ：7z格式默认和通用的压缩方法。\n*   [LZMAT](http://www.matcode.com/lzmat.htm) ：及其快速的实时无损数据压缩库\n*   [miniz](https://code.google.com/p/miniz/)：单一的C源文件，紧缩/膨胀压缩库，使用zlib兼容API，ZIP归档读写，PNG写方式。\n*   [Minizip](https://github.com/nmoinvaz/minizip)：Zlib最新bug修复，支持PKWARE磁盘跨越，AES加密和IO缓冲。\n*   [Snappy](https://code.google.com/p/snappy/) ：快速压缩和解压缩\n*   [ZLib](http://zlib.net/) ：非常紧凑的数据流压缩库\n*   [ZZIPlib](http://zziplib.sourceforge.net/)：提供ZIP归档的读权限。\n\n### <a name=\"t19\" target=\"_blank\"></a>并发性\n\n并发执行和多线程\n\n*   [Boost.Compute](https://github.com/kylelutz/compute) ：用于OpenCL的C++GPU计算库\n*   [Bolt](https://github.com/HSA-Libraries/Bolt) ：针对GPU进行优化的C++模板库\n*   [C++React](https://github.com/schlangster/cpp.react) ：用于C++11的反应性编程库\n*   [Intel TBB](https://www.threadingbuildingblocks.org/) ：Intel线程构件块\n*   [Libclsph](https://github.com/libclsph/libclsph)：基于OpenCL的GPU加速SPH流体仿真库\n*   [OpenCL](https://www.khronos.org/opencl/) ：并行编程的异构系统的开放标准\n*   [OpenMP](http://openmp.org/)：OpenMP API\n*   [Thrust](http://thrust.github.io/) ：类似于C++标准模板库的并行算法库\n*   [HPX](https://github.com/STEllAR-GROUP/hpx/) ：用于任何规模的并行和分布式应用程序的通用C++运行时系统\n*   [VexCL](https://github.com/ddemidov/vexcl) ：用于OpenCL/CUDA 的C++向量表达式模板库。\n\n### <a name=\"t20\" target=\"_blank\"></a>容器\n\n*   [C++ B-tree](https://code.google.com/p/cpp-btree/) ：基于B树数据结构，实现命令内存容器的模板库\n*   [Hashmaps](https://github.com/goossaert/hashmap)： C++中开放寻址哈希表算法的实现\n\n### <a name=\"t21\" target=\"_blank\"></a>密码学\n\n*   [Bcrypt](http://bcrypt.sourceforge.net/) ：一个跨平台的文件加密工具，加密文件可以移植到所有可支持的操作系统和处理器中。\n*   [BeeCrypt](https://github.com/fffaraz/awesome-cpp/blob/master)：\n*   [Botan](http://botan.randombit.net/)： C++加密库\n*   [Crypto++](http://www.cryptopp.com/)：一个有关加密方案的免费的C++库\n*   [GnuPG](https://www.gnupg.org/)： OpenPGP标准的完整实现\n*   [GnuTLS](http://www.gnutls.org/) ：实现了SSL，TLS和DTLS协议的安全通信库\n*   [Libgcrypt](http://www.gnu.org/software/libgcrypt/)\n*   [libmcrypt](https://github.com/fffaraz/awesome-cpp/blob/master)\n*   [LibreSSL](http://www.libressl.org/)：免费的SSL/TLS协议，属于2014 OpenSSL的一个分支\n*   [LibTomCrypt](https://github.com/libtom/libtomcrypt)：一个非常全面的，模块化的，可移植的加密工具\n*   [libsodium](https://github.com/jedisct1/libsodium)：基于NaCI的加密库，固执己见，容易使用\n*   [Nettle](http://www.lysator.liu.se/~nisse/nettle/) 底层的加密库\n*   [OpenSSL](http://www.openssl.org/) ： 一个强大的，商用的，功能齐全的，开放源代码的加密库。\n*   [Tiny AES128 in C](https://github.com/kokke/tiny-AES128-C) ：用C实现的一个小巧，可移植的实现了AES128ESB的加密算法\n\n### <a name=\"t22\" target=\"_blank\"></a>数据库\n\n数据库，SQL服务器，ODBC驱动程序和工具\n\n*   [hiberlite](https://github.com/paulftw/hiberlite) ：用于Sqlite3的C++对象关系映射\n*   [Hiredis](https://github.com/redis/hiredis)： 用于Redis数据库的很简单的C客户端库\n*   [LevelDB](https://github.com/google/leveldb)： 快速键值存储库\n*   [LMDB](http://symas.com/mdb/)：符合数据库四大基本元素的嵌入键值存储\n*   [MySQL++](http://www.tangentsoft.net/mysql++/)：封装了MySql的C API的C++ 包装器\n*   [RocksDB](https://github.com/facebook/rocksdb)：来自Facebook的嵌入键值的快速存储\n*   [SQLite](http://www.sqlite.org/)：一个完全嵌入式的，功能齐全的关系数据库，只有几百KB，可以正确包含到你的项目中。\n\n### <a name=\"t23\" target=\"_blank\"></a>调试\n\n调试库， 内存和资源泄露检测，单元测试\n\n*   [Boost.Test](http://www.boost.org/doc/libs/master/libs/test/doc/html/index.html)：Boost测试库\n*   [Catch](https://github.com/philsquared/Catch)：一个很时尚的，C++原生的框架，只包含头文件，用于单元测试，测试驱动开发和行为驱动开发。\n*   [CppUnit](http://www.freedesktop.org/wiki/Software/cppunit/)：由JUnit移植过来的C++测试框架\n*   [CTest](http://www.cmake.org/cmake/help/v2.8.8/ctest.html)：CMake测试驱动程序\n*   [googletest](http://code.google.com/p/googletest/)：谷歌C++测试框架\n*   [ig-debugheap](https://github.com/deplinenoise/ig-debugheap)：用于跟踪内存错误的多平台调试堆\n*   [libtap](https://github.com/zorgnax/libtap)：用C语言编写测试\n*   [MemTrack](http://www.almostinfinite.com/memtrack.html) —用于C++跟踪内存分配\n*   [microprofile](https://bitbucket.org/jonasmeyer/microprofile/overview)- 跨平台的网络试图分析器\n*   [minUnit](http://www.jera.com/techinfo/jtns/jtn002.html) ：使用C写的迷你单元测试框架，只使用了两个宏\n*   [Remotery](https://github.com/Celtoys/Remotery)：用于web视图的单一C文件分析器\n*   [UnitTest++](http://unittest-cpp.sourceforge.net/)：轻量级的C++单元测试框架\n\n### <a name=\"t24\" target=\"_blank\"></a>游戏引擎\n\n*   [Cocos2d-x](http://www.cocos2d-x.org/) ：一个跨平台框架，用于构建2D游戏，互动图书，演示和其他图形应用程序。\n*   [Grit](http://gritengine.com/) ：社区项目，用于构建一个免费的游戏引擎，实现开放的世界3D游戏。\n*   [Irrlicht](http://irrlicht.sourceforge.net/) ：C++语言编写的开源高性能的实时#D引擎\n*   [Polycode](http://polycode.org/)：C++实现的用于创建游戏的开源框架（与Lua绑定）。\n\n### <a name=\"t25\" target=\"_blank\"></a>图形用户界面\n\n*   [CEGUI](http://cegui.org.uk/) ： 很灵活的跨平台GUI库\n*   [FLTK](http://www.fltk.org/index.php) ：快速，轻量级的跨平台的C++GUI工具包。\n*   [GTK+](http://www.gtk.org/)： 用于创建图形用户界面的跨平台工具包\n*   [gtkmm](http://www.gtkmm.org/en/) ：用于受欢迎的GUI库GTK+的官方C++接口。\n*   [imgui](https://github.com/ocornut/imgui)：拥有最小依赖关系的立即模式图形用户界面\n*   [libRocket](http://librocket.com/) ：[libRocket](http://librocket.com/) 是一个C++ HTML/CSS 游戏接口中间件\n*   [MyGUI](http://mygui.info/) ：快速，灵活，简单的GUI\n*   [Ncurses](http://invisible-island.net/ncurses/)：终端用户界面\n*   [QCustomPlot](http://qcustomplot.com/) ：没有更多依赖关系的Qt绘图控件\n*   [Qwt](http://qwt.sourceforge.net/) ：用户与技术应用的Qt 控件\n*   [QwtPlot3D](http://qwtplot3d.sourceforge.net/) ：功能丰富的基于Qt/OpenGL的C++编程库，本质上提供了一群3D控件\n*   [OtterUI](https://github.com/Twolewis/OtterUI) ：[OtterUI](https://github.com/Twolewis/OtterUI) 是用于嵌入式系统和互动娱乐软件的用户界面开发解决方案\n*   [PDCurses](http://pdcurses.sourceforge.net/) 包含源代码和预编译库的公共图形函数库\n*   [wxWidgets](http://wxwidgets.org/) C++库，允许开发人员使用一个代码库可以为widows， Mac OS X，Linux和其他平台创建应用程序\n\n### <a name=\"t26\" target=\"_blank\"></a>图形\n\n*   [bgfx](https://github.com/bkaradzic/bgfx)：跨平台的渲染库\n*   [Cairo](http://www.cairographics.org/)：支持多种输出设备的2D图形库\n*   [Horde3D](https://github.com/horde3d/Horde3D) 一个小型的3D渲染和动画引擎\n*   [magnum](https://github.com/mosra/magnum) C++11和OpenGL 2D/3D 图形引擎\n*   [Ogre 3D](http://www.ogre3d.org/) 用C++编写的一个面向场景，实时，灵活的3D渲染引擎（并非游戏引擎）\n*   [OpenSceneGraph](http://www.openscenegraph.org/) 具有高性能的开源3D图形工具包\n*   [Panda3D](http://www.panda3d.org/) 用于3D渲染和游戏开发的框架，用Python和C++编写。\n*   [Skia](https://github.com/google/skia) 用于绘制文字，图形和图像的完整的2D图形库\n*   [urho3d](https://github.com/urho3d/Urho3D) 跨平台的渲染和游戏引擎。\n\n### <a name=\"t27\" target=\"_blank\"></a>图像处理\n\n*   [Boost.GIL](http://www.boost.org/doc/libs/1_56_0/libs/gil/doc/index.html)：通用图像库\n*   [CImg](http://cimg.sourceforge.net/) ：用于图像处理的小型开源C++工具包\n*   [CxImage](http://www.xdp.it/cximage.htm) ：用于加载，保存，显示和转换的图像处理和转换库，可以处理的图片格式包括 BMP, JPEG, GIF, PNG, TIFF, MNG, ICO, PCX, TGA, WMF, WBMP, JBG, J2K。\n*   [FreeImage](http://freeimage.sourceforge.net/) ：开源库，支持现在多媒体应用所需的通用图片格式和其他格式。\n*   [GDCM](http://gdcm.sourceforge.net/wiki/index.php/Main_Page)：Grassroots DICOM 库\n*   [ITK](http://www.itk.org/)：跨平台的开源图像分析系统\n*   [Magick++](http://www.imagemagick.org/script/api.php)：ImageMagick程序的C++接口\n*   [MagickWnd](http://www.imagemagick.org/script/api.php)：ImageMagick程序的C++接口\n*   [OpenCV](http://opencv.org/) ： 开源计算机视觉类库\n*   [tesseract-ocr](https://code.google.com/p/tesseract-ocr/)：OCR引擎\n*   [VIGRA](https://github.com/ukoethe/vigra) ：用于图像分析通用C++计算机视觉库\n*   [VTK](http://www.vtk.org/) ：用于3D计算机图形学，图像处理和可视化的开源免费软件系统。\n\n### <a name=\"t28\" target=\"_blank\"></a>国际化\n\n*   [gettext](http://www.gnu.org/software/gettext/) ：GNU `gettext’\n*   [IBM ICU](http://site.icu-project.org/)：提供Unicode 和全球化支持的C、C++ 和Java库\n*   [libiconv](http://www.gnu.org/software/libiconv/) ：用于不同字符编码之间的编码转换库\n\n### <a name=\"t29\" target=\"_blank\"></a>Jason\n\n*   [frozen](https://github.com/cesanta/frozen) ： C/C++的Jason解析生成器\n*   [Jansson](https://github.com/akheron/jansson) ：进行编解码和处理Jason数据的C语言库\n*   [jbson](https://github.com/chrismanning/jbson) ：C++14中构建和迭代BSON data,和Json 文档的库\n*   [JeayeSON](https://github.com/jeaye/jeayeson)：非常健全的C++ JSON库，只包含头文件\n*   [JSON++](https://github.com/hjiang/jsonxx) ： C++ JSON 解析器\n*   [json-parser](https://github.com/udp/json-parser)：用可移植的ANSI C编写的JSON解析器，占用内存非常少\n*   [json11](https://github.com/dropbox/json11) ：一个迷你的C++11 JSON库\n*   [jute](https://github.com/amir-s/jute) ：非常简单的C++ JSON解析器\n*   [ibjson](https://github.com/vincenthz/libjson)：C语言中的JSON解析和打印库，很容易和任何模型集成。\n*   [libjson](http://sourceforge.net/projects/libjson/)：轻量级的JSON库\n*   [PicoJSON](https://github.com/kazuho/picojson)：C++中JSON解析序列化，只包含头文件\n*   [qt-json](https://github.com/gaudecker/qt-json) ：用于JSON数据和 QVariant层次间的相互解析的简单类\n*   [QJson](https://github.com/flavio/qjson)：将JSON数据映射到QVariant对象的基于Qt的库\n*   [RapidJSON](https://github.com/miloyip/rapidjson)： 用于C++的快速JSON 解析生成器，包含SAX和DOM两种风格的API\n*   [YAJL](https://github.com/lloyd/yajl) ：C语言中快速流JSON解析库\n\n### <a name=\"t30\" target=\"_blank\"></a>日志\n\n*   [Boost.Log](http://www.boost.org/doc/libs/1_56_0/libs/log/doc/html/index.html) ：设计非常模块化，并且具有扩展性\n*   [easyloggingpp](https://github.com/easylogging/easyloggingpp)：C++日志库，只包含单一的头文件。\n*   [Log4cpp](http://log4cpp.sourceforge.net/) ：一系列C++类库，灵活添加日志到文件，系统日志，IDSA和其他地方。\n*   [templog](http://www.templog.org/)：轻量级C++库，可以添加日志到你的C++应用程序中\n\n### <a name=\"t31\" target=\"_blank\"></a>机器学习\n\n*   [Caffe](https://github.com/BVLC/caffe) ：快速的神经网络框架\n*   [CCV](https://github.com/liuliu/ccv) ：以C语言为核心的现代计算机视觉库\n*   [mlpack](http://www.mlpack.org/) ：可扩展的C++机器学习库\n*   [OpenCV](https://github.com/Itseez/opencv)：开源计算机视觉库\n*   [Recommender](https://github.com/GHamrouni/Recommender)：使用协同过滤进行产品推荐/建议的C语言库。\n*   [SHOGUN](https://github.com/shogun-toolbox/shogun)：Shogun 机器学习工具\n*   [sofia-ml](https://code.google.com/p/sofia-ml/) ：用于机器学习的快速增量算法套件\n\n### <a name=\"t32\" target=\"_blank\"></a>数学\n\n*   [Armadillo](http://arma.sourceforge.net/) ：高质量的C++线性代数库，速度和易用性做到了很好的平衡。语法和MatlAB很相似\n*   [blaze](https://code.google.com/p/blaze-lib/)：高性能的C++数学库，用于密集和稀疏算法。\n*   [ceres-solver](http://ceres-solver.org/) ：来自谷歌的C++库，用于建模和解决大型复杂非线性最小平方问题。\n*   [CGal](http://www.cgal.org/)： 高效，可靠的集合算法集合\n*   [cml](http://cmldev.net/) ：用于游戏和图形的免费C++数学库\n*   [Eigen](http://eigen.tuxfamily.org/) ：高级C++模板头文件库，包括线性代数，矩阵，向量操作，数值解决和其他相关的算法。\n*   [GMTL](http://ggt.sourceforge.net/)：数学图形模板库是一组广泛实现基本图形的工具。\n*   [GMP](https://gmplib.org/)：用于个高精度计算的C/C++库，处理有符号整数，有理数和浮点数。\n\n### <a name=\"t33\" target=\"_blank\"></a>多媒体\n\n*   [GStreamer](http://gstreamer.freedesktop.org/) ：构建媒体处理组件图形的库\n*   [LIVE555 Streaming Media](http://www.live555.com/liveMedia/) ：使用开放标准协议(RTP/RTCP, RTSP, SIP) 的多媒体流库\n*   [libVLC](https://wiki.videolan.org/LibVLC) ：libVLC (VLC SDK)媒体框架\n*   [QtAv](https://github.com/wang-bin/QtAV)：基于Qt和FFmpeg的多媒体播放框架，能够帮助你轻而易举地编写出一个播放器\n*   [SDL](http://www.libsdl.org/) ：简单直控媒体层\n*   [SFML](http://www.sfml-dev.org/) ：快速，简单的多媒体库\n\n### <a name=\"t34\" target=\"_blank\"></a>网络\n\n*   [ACE](http://www.cs.wustl.edu/~schmidt/ACE.html)：C++面向对象网络变成工具包\n*   [Boost.Asio](http://think-async.com/)：用于网络和底层I/O编程的跨平台的C++库\n*   [Casablanca](http://casablanca.codeplex.com/)：C++ REST SDK\n*   [cpp-netlib](http://cpp-netlib.org/)：高级网络编程的开源库集合\n*   [Dyad.c](https://github.com/rxi/dyad)：C语言的异步网络\n*   [libcurl](http://curl.haxx.se/libcurl/) :多协议文件传输库\n*   [Mongoose](https://github.com/cesanta/mongoose)<span style=\"text-decoration:underline\">：</span>非常轻量级的网络服务器\n*   [Muduo](https://github.com/chenshuo/muduo) ：用于Linux多线程服务器的C++非阻塞网络库\n*   [net_skeleton](https://github.com/cesanta/net_skeleton) ：C/C++的TCP 客户端/服务器库\n*   [nope.c](https://github.com/riolet/nope.c) ：基于C语言的超轻型软件平台，用于可扩展的服务器端和网络应用。 对于C编程人员，可以考虑node.js\n*   [Onion](https://github.com/davidmoreno/onion) :C语言HTTP服务器库，其设计为轻量级，易使用。\n*   [POCO](https://github.com/pocoproject)：用于构建网络和基于互联网应用程序的C++类库，可以运行在桌面，服务器，移动和嵌入式系统。\n*   [RakNet](https://github.com/OculusVR/RakNet)：为游戏开发人员提供的跨平台的开源C++网络引擎。\n*   [Tuf o](https://github.com/vinipsmaker/tufao) ：用于Qt之上的C++构建的异步Web框架。\n*   [WebSocket++](https://github.com/zaphoyd/websocketpp) ：基于C++/Boost Aiso的websocket 客户端/服务器库\n*   [ZeroMQ](http://zeromq.org/) ：高速，模块化的异步通信库\n\n### <a name=\"t35\" target=\"_blank\"></a>物理学\n\n动力学仿真引擎\n\n*   [Box2D](https://code.google.com/p/box2d/)：2D的游戏物理引擎。\n*   [Bullet](https://github.com/bulletphysics/bullet3) ：3D的游戏物理引擎。\n*   [Chipmunk](https://github.com/slembcke/Chipmunk2D) ：快速，轻量级的2D游戏物理库\n*   [LiquidFun](https://github.com/google/liquidfun)：2D的游戏物理引擎\n*   [ODE](http://www.ode.org/) ：开放动力学引擎-开源，高性能库，模拟刚体动力学。\n*   [ofxBox2d](https://github.com/vanderlin/ofxBox2d)：Box2D开源框架包装器。\n*   [Simbody](https://github.com/simbody/simbody) ：高性能C++多体动力学/物理库，模拟关节生物力学和机械系统，像车辆，机器人和人体骨骼。\n\n### <a name=\"t36\" target=\"_blank\"></a>机器人学\n\n*   [MOOS-IvP](http://moos-ivp.org/) ：一组开源C++模块，提供机器人平台的自主权，尤其是自主的海洋车辆。\n*   [MRPT](http://www.mrpt.org/)：移动机器人编程工具包\n*   [PCL](https://github.com/PointCloudLibrary/pcl) ：点云库是一个独立的，大规模的开放项目，用于2D/3D图像和点云处理。\n*   [Robotics Library (RL)](http://www.roboticslibrary.org/)： 一个独立的C++库，包括机器人动力学，运动规划和控制。\n*   [RobWork](http://www.robwork.dk/jrobwork/)：一组C++库的集合，用于机器人系统的仿真和控制。\n*   [ROS](http://wiki.ros.org/) ：机器人操作系统，提供了一些库和工具帮助软件开发人员创建机器人应用程序。\n\n### <a name=\"t37\" target=\"_blank\"></a>科学计算\n\n*   [FFTW](http://www.fftw.org/) :用一维或者多维计算DFT的C语言库。\n*   [GSL](http://www.gnu.org/software/gsl/)：GNU科学库。\n\n### <a name=\"t38\" target=\"_blank\"></a>脚本\n\n*   [ChaiScript](https://github.com/ChaiScript/ChaiScript/) ：用于C++的易于使用的嵌入式脚本语言。\n*   [Lua](http://www.lua.org/) ：用于配置文件和基本应用程序脚本的小型快速脚本引擎。\n*   [luacxx](https://github.com/dafrito/luacxx)：用于创建Lua绑定的C++ 11 API\n*   [SWIG](http://www.swig.org/) ：一个可以让你的C++代码链接到JavaScript，Perl，PHP，Python，Tcl和Ruby的包装器/接口生成器\n*   [V7](https://github.com/cesanta/v7)：嵌入式的JavaScript 引擎。\n*   [V8](http://code.google.com/p/v8/) ：谷歌的快速JavaScript引擎，可以被嵌入到任何C++应用程序中。\n\n### <a name=\"t39\" target=\"_blank\"></a>序列化\n\n*   [Cap’n Proto](http://kentonv.github.io/capnproto/) ：快速数据交换格式和RPC系统。\n*   [cereal](https://github.com/USCiLab/cereal) ：C++11 序列化库\n*   [FlatBuffers](https://github.com/google/flatbuffers) ：内存高效的序列化库\n*   [MessagePack](https://github.com/msgpack/msgpack-c) ：C/C++的高效二进制序列化库，例如 JSON\n*   [protobuf](http://code.google.com/p/protobuf/) ：协议缓冲，谷歌的数据交换格式。\n*   [protobuf-c](https://github.com/protobuf-c/protobuf-c) ：C语言的协议缓冲实现\n*   [SimpleBinaryEncoding](https://github.com/real-logic/simple-binary-encoding)：用于低延迟应用程序的对二进制格式的应用程序信息的编码和解码。\n*   [Thrift](https://thrift.apache.org/) ：高效的跨语言IPC/RPC，用于C++，Java，Python，PHP，C#和其它多种语言中，最初由Twitter开发。\n\n### <a name=\"t40\" target=\"_blank\"></a>视频\n\n*   [libvpx](http://www.webmproject.org/code/) ：VP8/VP9编码解码SDK\n*   [FFmpeg](https://www.ffmpeg.org/) ：一个完整的，跨平台的解决方案，用于记录，转换视频和音频流。\n*   [libde265](https://github.com/strukturag/libde265) ：开放的h.265视频编解码器的实现。\n*   [OpenH264](https://github.com/cisco/openh264)：开源H.364 编解码器。\n*   [Theora](http://www.theora.org/) ：免费开源的视频压缩格式。\n\n### <a name=\"t41\" target=\"_blank\"></a>虚拟机\n\n*   [CarpVM](https://github.com/tekknolagi/carp)：C中有趣的VM，让我们一起来看看这个。\n*   [MicroPython](https://github.com/micropython/micropython) ：旨在实现单片机上Python3.x的实现\n*   [TinyVM](https://github.com/jakogut/tinyvm)：用纯粹的ANSI C编写的小型，快速，轻量级的虚拟机。\n\n### <a name=\"t42\" target=\"_blank\"></a>Web应用框架\n\n*   [Civetweb](https://github.com/bel2125/civetweb) ：提供易于使用，强大的，C/C++嵌入式Web服务器，带有可选的CGI，SSL和Lua支持。\n*   [CppCMS](http://cppcms.com/) ：免费高性能的Web开发框架（不是 CMS）.\n*   [Crow](https://github.com/ipkn/crow) ：一个C++微型web框架（灵感来自于Python Flask）\n*   [Kore](https://kore.io/) :使用C语言开发的用于web应用程序的超快速和灵活的web服务器/框架。\n*   [libOnion](http://www.coralbits.com/libonion/)：轻量级的库，帮助你使用C编程语言创建web服务器。\n*   [QDjango](https://github.com/jlaine/qdjango/)：使用C++编写的，基于Qt库的web框架，试图效仿Django API，因此得此名。\n*   [Wt](http://www.webtoolkit.eu/wt) ：开发Web应用的C++库。\n\n### <a name=\"t43\" target=\"_blank\"></a>XML\n\nXML就是个垃圾，xml的解析很烦人，对于计算机它也是个灾难。这种糟糕的东西完全没有存在的理由了。-Linus Torvalds\n\n*   [Expat](http://www.libexpat.org/) ：用C语言编写的xml解析库\n*   [Libxml2](http://xmlsoft.org/) ：Gnome的xml C解析器和工具包\n*   [libxml++](http://libxmlplusplus.sourceforge.net/) ：C++的xml解析器\n*   [PugiXML](http://pugixml.org/) ：用于C++的，支持XPath的轻量级，简单快速的XML解析器。\n*   [RapidXml](http://rapidxml.sourceforge.net/) ：试图创建最快速的XML解析器，同时保持易用性，可移植性和合理的W3C兼容性。\n*   [TinyXML](http://sourceforge.net/projects/tinyxml/) ：简单小型的C++XML解析器，可以很容易地集成到其它项目中。\n*   [TinyXML2](https://github.com/leethomason/tinyxml2)：简单快速的C++CML解析器，可以很容易集成到其它项目中。\n*   [TinyXML++](https://code.google.com/p/ticpp/)：TinyXML的一个全新的接口，使用了C++的许多许多优势，模板，异常和更好的异常处理。\n*   [Xerces-C++](http://xerces.apache.org/xerces-c/) ：用可移植的C++的子集编写的XML验证解析器。\n\n### <a name=\"t44\" target=\"_blank\"></a>多项混杂\n\n一些有用的库或者工具，但是不适合上面的分类，或者还没有分类。\n\n*   [C++ Format](https://github.com/cppformat/cppformat) ：C++的小型，安全和快速格式化库\n*   [casacore](https://code.google.com/p/casacore/) ：从aips++ 派生的一系列C++核心库\n*   [cxx-prettyprint](https://github.com/louisdx/cxx-prettyprint)：用于C++容器的打印库\n*   [DynaPDF](http://www.dynaforms.com/) ：易于使用的PDF生成库\n*   [gcc-poison](https://github.com/leafsr/gcc-poison) ：帮助开发人员禁止应用程序中的不安全的C/C++函数的简单的头文件。\n*   [googlemock](http://code.google.com/p/googlemock/)：编写和使用C++模拟类的库\n*   [HTTP Parser](https://github.com/joyent/http-parser) ：C的http请求/响应解析器\n*   [libcpuid](https://github.com/anrieff/libcpuid) ：用于x86 CPU检测盒特征提取的小型C库\n*   [libevil](https://github.com/avati/libevil) ：许可证管理器\n*   [libusb](http://www.libusb.org/)：允许移动访问USB设备的通用USB库\n*   [PCRE](http://pcre.org/)：正则表达式C库，灵感来自于Perl中正则表达式的功能。\n*   [Remote Call Framework](http://www.deltavsoft.com/) ：C++的进程间通信框架。\n*   [Scintilla](http://scintilla.org/) ：开源的代码编辑控件\n*   [Serial Communication Library](https://github.com/wjwwood/serial) ：C++语言编写的跨平台，串口库。\n*   [SDS](https://github.com/antirez/sds)：C的简单动态字符串库\n*   [SLDR](https://github.com/cesanta/sldr) ：超轻的DNS解析器\n*   [SLRE](https://github.com/cesanta/slre)： 超轻的正则表达式库\n*   [Stage](https://github.com/rtv/Stage) ：移动机器人模拟器\n*   [VarTypes](https://code.google.com/p/vartypes/)：C++/Qt4功能丰富，面向对象的管理变量的框架。\n*   [ZBar](http://zbar.sourceforge.net/)：‘条形码扫描器’库，可以扫描照片，图片和视频流中的条形码，并返回结果。\n*   [CppVerbalExpressions](https://github.com/VerbalExpressions/CppVerbalExpressions) ：易于使用的C++正则表达式\n*   [QtVerbalExpressions](https://github.com/VerbalExpressions/QtVerbalExpressions)：基于C++ VerbalExpressions 库的Qt库\n*   [PHP-CPP](https://github.com/CopernicaMarketingSoftware/PHP-CPP)：使用C++来构建PHP扩展的库\n*   [Better String](http://bstring.sourceforge.net/) ：C的另一个字符串库，功能更丰富，但是没有缓冲溢出问题，还包含了一个C++包装器。\n\n### <a name=\"t45\" target=\"_blank\"></a>软件\n\n用于创建开发环境的软件\n\n### <a name=\"t46\" target=\"_blank\"></a>编译器\n\nC/C++编译器列表\n\n*   [Clang](http://clang.llvm.org/) :由苹果公司开发的\n*   [GCC](https://gcc.gnu.org/)：GNU编译器集合\n*   [Intel C++ Compiler](https://software.intel.com/en-us/c-compilers) ：由英特尔公司开发\n*   [LLVM](http://llvm.org/) ：模块化和可重用编译器和工具链技术的集合\n*   [Microsoft Visual C++](http://msdn.microsoft.com/en-us/vstudio/hh386302.aspx) ：MSVC，由微软公司开发\n*   [Open WatCom](http://www.openwatcom.org/index.php/Main_Page) ：Watcom，C，C++和Fortran交叉编译器和工具\n*   [TCC](http://bellard.org/tcc/) ：轻量级的C语言编译器\n\n### <a name=\"t47\" target=\"_blank\"></a>在线编译器\n\n在线C/C++编译器列表\n\n*   [codepad](http://codepad.org/) ：在线编译器/解释器，一个简单的协作工具\n*   [CodeTwist](http://codetwist.com/)：一个简单的在线编译器/解释器，你可以粘贴的C,C++或者Java代码，在线执行并查看结果\n*   [coliru](http://coliru.stacked-crooked.com/) ：在线编译器/shell， 支持各种C++编译器\n*   [Compiler Explorer](http://gcc.godbolt.org/)：交互式编译器，可以进行汇编输出\n*   [CompileOnline](http://www.compileonline.com/compile_cpp11_online.php)：Linux上在线编译和执行C++程序\n*   [Ideone](http://ideone.com/) ：一个在线编译器和调试工具，允许你在线编译源代码并执行，支持60多种编程语言。\n\n### <a name=\"t48\" target=\"_blank\"></a>调试器\n\nC/C++调试器列表\n\n*   [Comparison of debuggers](http://en.wikipedia.org/wiki/Comparison_of_debuggers) ：来自维基百科的调试器列表\n*   [GDB](https://www.gnu.org/software/gdb) ：GNU调试器\n*   [Valgrind](http://valgrind.org/)：内存调试，内存泄露检测，性能分析工具。\n\n### <a name=\"t49\" target=\"_blank\"></a>集成开发环境（IDE）\n\nC/C++集成开发环境列表\n\n*   [AppCode](http://www.jetbrains.com/objc/) ：构建与JetBrains’ IntelliJ IDEA 平台上的用于Objective-C，C,C++，Java和Java开发的集成开发环境\n*   [CLion](http://www.jetbrains.com/clion/)：来自JetBrains的跨平台的C/C++的集成开发环境\n*   [Code::Blocks](http://www.codeblocks.org/) ：免费C，C++和Fortran的集成开发环境\n*   [CodeLite](http://codelite.org/) ：另一个跨平台的免费的C/C++集成开发环境\n*   [Dev-C++](http://sourceforge.net/projects/orwelldevcpp/)：可移植的C/C++/C++11集成开发环境\n*   [Eclipse CDT](http://www.eclipse.org/cdt/)：基于Eclipse平台的功能齐全的C和C++集成开发环境\n*   [Geany](http://www.geany.org/) ：轻量级的快速，跨平台的集成开发环境。\n*   [IBM VisualAge](http://www-03.ibm.com/software/products/en/visgen) ：来自IBM的家庭计算机集成开发环境。\n*   [Irony-mode](https://github.com/Sarcasm/irony-mode)：由libclang驱动的用于Emacs的C/C++微模式\n*   [KDevelop](https://www.kdevelop.org/)：免费开源集成开发环境\n*   [Microsoft Visual Studio](http://www.visualstudio.com/) ：来自微软的集成开发环境\n*   [NetBeans](https://netbeans.org/) ：主要用于Java开发的的集成开发环境，也支持其他语言，尤其是PHP，C/C++和HTML5。\n*   [Qt Creator](http://qt-project.org/)：跨平台的C++，Javascript和QML集成开发环境，也是Qt SDK的一部分。\n*   [rtags](https://github.com/Andersbakken/rtags)：C/C++的客户端服务器索引，用于 跟基于clang的emacs的集成\n*   [Xcode](https://developer.apple.com/xcode/) ：由苹果公司开发\n*   [YouCompleteMe](https://valloric.github.io/YouCompleteMe/)：一个用于Vim的根据你敲的代码快速模糊搜索并进行代码补全的引擎。\n\n### <a name=\"t50\" target=\"_blank\"></a>构建系统\n\n*   [Bear](https://github.com/rizsotto/Bear) ：用于为clang工具生成编译数据库的工具\n*   [Biicode](https://www.biicode.com/)：基于文件的简单依赖管理器。\n*   [CMake](http://www.cmake.org/) ：跨平台的免费开源软件用于管理软件使用独立编译的方法进行构建的过程。\n*   [CPM](https://github.com/iauns/cpm)：基于CMake和Git的C++包管理器\n*   [FASTBuild](http://www.fastbuild.org/docs/home.html)：高性能，开源的构建系统，支持高度可扩展性的编译，缓冲和网络分布。\n*   [Ninja](http://martine.github.io/ninja/) ：专注于速度的小型构建系统\n*   [Scons](http://www.scons.org/) ：使用Python scipt 配置的软件构建工具\n*   [tundra](https://github.com/deplinenoise/tundra) ：高性能的代码构建系统，甚至对于非常大型的软件项目，也能提供最好的增量构建次数。\n*   [tup](http://gittup.org/tup/)：基于文件的构建系统，用于后台监控变化的文件。\n\n### <a name=\"t51\" target=\"_blank\"></a>静态代码分析\n\n提高质量，减少瑕疵的代码分析工具列表\n\n*   [Cppcheck](http://cppcheck.sourceforge.net/) ：静态C/C++代码分析工具\n*   [include-what-you-use](https://code.google.com/p/include-what-you-use/) ：使用clang进行代码分析的工具，可以#include在C和C++文件中。\n*   [OCLint](http://oclint.org/) ：用于C，C++和Objective-C的静态源代码分析工具，用于提高质量，减少瑕疵。\n*   [Clang Static Analyzer](http://clang-analyzer.llvm.org/index.html)：查找C，C++和Objective-C程序bug的源代码分析工具\n*   [List of tools for static code analysis](http://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis#C.2FC.2B.2B) ：来自维基百科的静态代码分析工具列表\n","slug":"cplusplus学习笔记","published":1,"updated":"2019-03-19T12:37:11.035Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtfrwgdt0012b30nf1cev0mh","content":"<p>文章出处：<a href=\"http://blog.csdn.net/xiaoxiaoyeyaya/article/details/42541419\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/xiaoxiaoyeyaya/article/details/42541419</a></p>\n<h2 id=\"1-Webbench\"><a href=\"#1-Webbench\" class=\"headerlink\" title=\"- 1. Webbench\"></a><a name=\"t1\" target=\"_blank\"></a>- 1. Webbench</h2><p>Webbench是一个在linux下使用的非常简单的网站压测工具。它使用fork()模拟多个客户端同时访问我们设定的URL，测试网站在压力下工作的性能，最多可以模拟3万个并发连接去测试网站的负载能力。Webbench使用C语言编写, 代码实在太简洁，源码加起来不到600行。</p>\n<p>下载链接：<a href=\"http://home.tiscali.cz/~cz210552/webbench.html\" target=\"_blank\" rel=\"noopener\">http://home.tiscali.cz/~cz210552/webbench.html</a></p>\n<h2 id=\"2-Tinyhttpd\"><a href=\"#2-Tinyhttpd\" class=\"headerlink\" title=\"- 2. Tinyhttpd\"></a><a name=\"t2\" target=\"_blank\"></a>- 2. Tinyhttpd</h2><p>tinyhttpd是一个超轻量型Http Server，使用C语言开发，全部代码只有502行(包括注释)，附带一个简单的Client，可以通过阅读这段代码理解一个 Http Server 的本质。</p>\n<p>下载链接：<a href=\"http://sourceforge.net/projects/tinyhttpd/\" target=\"_blank\" rel=\"noopener\">http://sourceforge.net/projects/tinyhttpd/</a></p>\n<h2 id=\"3-cJSON\"><a href=\"#3-cJSON\" class=\"headerlink\" title=\"- 3. cJSON\"></a><a name=\"t3\" target=\"_blank\"></a>- 3. cJSON</h2><p>cJSON是C语言中的一个JSON编解码器，非常轻量级，C文件只有500多行，速度也非常理想。</p>\n<p>cJSON也存在几个弱点，虽然功能不是非常强大，但cJSON的小身板和速度是最值得赞赏的。其代码被非常好地维护着，结构也简单易懂，可以作为一个非常好的C语言项目进行学习。</p>\n<p>项目主页:<a href=\"http://sourceforge.net/projects/cjson/\" target=\"_blank\" rel=\"noopener\">http://sourceforge.net/projects/cjson/</a></p>\n<h2 id=\"4-CMockery\"><a href=\"#4-CMockery\" class=\"headerlink\" title=\"- 4. CMockery\"></a><a name=\"t4\" target=\"_blank\"></a>- 4. CMockery</h2><p>cmockery是google发布的用于C单元测试的一个轻量级的框架。它很小巧，对其他开源包没有依赖，对被测试代码侵入性小。cmockery的源代码行数不到3K，你阅读一下will_return和mock的源代码就一目了然了。</p>\n<p>主要特点：</p>\n<ul>\n<li>免费且开源，google提供技术支持；</li>\n<li>轻量级的框架，使测试更加快速简单；</li>\n<li>避免使用复杂的编译器特性，对老版本的编译器来讲，兼容性好;</li>\n<li>并不强制要求待测代码必须依赖C99标准，这一特性对许多嵌入式系统的开发很有用</li>\n</ul>\n<p>下载链接：<a href=\"http://code.google.com/p/cmockery/downloads/list\" target=\"_blank\" rel=\"noopener\">http://code.google.com/p/cmockery/downloads/list</a></p>\n<h2 id=\"5-Libev\"><a href=\"#5-Libev\" class=\"headerlink\" title=\"- 5. Libev\"></a><a name=\"t5\" target=\"_blank\"></a>- 5. Libev</h2><p>libev是一个开源的事件驱动库，基于epoll，kqueue等OS提供的基础设施。其以高效出名，它可以将IO事件，定时器，和信号统一起来，统一放在事件处理这一套框架下处理。基于Reactor模式，效率较高，并且代码精简（4.15版本8000多行），是学习事件驱动编程的很好的资源。</p>\n<p>下载链接：<a href=\"http://software.schmorp.de/pkg/libev.html\" target=\"_blank\" rel=\"noopener\">http://software.schmorp.de/pkg/libev.html</a></p>\n<h2 id=\"6-Memcached\"><a href=\"#6-Memcached\" class=\"headerlink\" title=\"- 6. Memcached\"></a><a name=\"t6\" target=\"_blank\"></a>- 6. Memcached</h2><p>Memcached 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态数据库驱动网站的速度。Memcached 基于一个存储键/值对的 hashmap。Memcached-1.4.7的代码量还是可以接受的，只有10K行左右。</p>\n<p>下载地址：<a href=\"http://memcached.org/\" target=\"_blank\" rel=\"noopener\">http://memcached.org/</a></p>\n<h2 id=\"7-Lua\"><a href=\"#7-Lua\" class=\"headerlink\" title=\"- 7. Lua\"></a><a name=\"t7\" target=\"_blank\"></a>- 7. Lua</h2><p>Lua很棒，Lua是巴西人发明的，这些都令我不爽，但是还不至于脸红，最多眼红。</p>\n<p>让我脸红的是Lua的源代码，百分之一百的ANSI C，一点都不掺杂。在任何支持ANSI C编译器的平台上都可以轻松编译通过。我试过，真是一点废话都没有。Lua的代码数量足够小，5.1.4仅仅1.5W行，去掉空白行和注释估计能到1W行。</p>\n<p>下载地址：<a href=\"http://www.lua.org/\" target=\"_blank\" rel=\"noopener\">http://www.lua.org/</a></p>\n<h2 id=\"8-SQLite\"><a href=\"#8-SQLite\" class=\"headerlink\" title=\"- 8. SQLite\"></a><a name=\"t8\" target=\"_blank\"></a>- 8. SQLite</h2><p>SQLite是一个开源的嵌入式关系数据库，实现自包容、零配置、支持事务的SQL数据库引擎。 其特点是高度便携、使用方便、结构紧凑、高效、可靠。足够小，大致3万行C代码，250K。</p>\n<p>下载地址：<a href=\"http://www.sqlite.org/\" target=\"_blank\" rel=\"noopener\">http://www.sqlite.org/</a> 。</p>\n<h2 id=\"9-UNIX-v6\"><a href=\"#9-UNIX-v6\" class=\"headerlink\" title=\"- 9. UNIX v6\"></a><a name=\"t9\" target=\"_blank\"></a>- 9. UNIX v6</h2><p>UNIX V6 的内核源代码包括设备驱动程序在内 约有1 万行，这个数量的源代码，初学者是能够充分理解的。有一种说法是一个人所能理解的代码量上限为1 万行，UNIX V6的内核源代码从数量上看正好在这个范围之内。看到这里，大家是不是也有“如果只有1万行的话没准儿我也能学会”的想法呢？</p>\n<p>另一方面，最近的操作系统，例如Linux 最新版的内核源代码据说超过了1000 万行。就算不是初学者，想完全理解全部代码基本上也是不可能的。</p>\n<p>下载地址：<a href=\"http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6\" target=\"_blank\" rel=\"noopener\">http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6</a></p>\n<h2 id=\"10-NETBSD\"><a href=\"#10-NETBSD\" class=\"headerlink\" title=\"- 10. NETBSD\"></a><a name=\"t10\" target=\"_blank\"></a>- 10. NETBSD</h2><p>NetBSD是一个免费的，具有高度移植性的 UNIX-like 操作系统，是现行可移植平台最多的操作系统，可以在许多平台上执行，从 64bit alpha 服务器到手持设备和嵌入式设备。NetBSD计划的口号是：”Of course it runs NetBSD”。它设计简洁，代码规范，拥有众多先进特性，使得它在业界和学术界广受好评。由于简洁的设计和先进的特征，使得它在生产和研究方面，都有卓越的表现，而且它也有受使用者支持的完整的源代码。许多程序都可以很容易地通过NetBSD Packages Collection获得。</p>\n<p>下载地址：<a href=\"http://www.netbsd.org/\" target=\"_blank\" rel=\"noopener\">http://www.netbsd.org/</a></p>\n<a id=\"more\"></a>\n<h2 id=\"C-资源大全\"><a href=\"#C-资源大全\" class=\"headerlink\" title=\"C++ 资源大全\"></a><a name=\"t11\" target=\"_blank\"></a>C++ 资源大全</h2><p>关于 C++ 框架、库和资源的一些汇总列表，内容包括：标准库、Web应用框架、人工智能、数据库、图片处理、机器学习、日志、代码分析等。</p>\n<h3 id=\"标准库\"><a href=\"#标准库\" class=\"headerlink\" title=\"标准库\"></a><a name=\"t12\" target=\"_blank\"></a>标准库</h3><p>C++标准库，包括了STL容器，算法和函数等。</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/C%2B%2B_Standard_Library\" target=\"_blank\" rel=\"noopener\">C++ Standard Library</a>：是一系列类和函数的集合，使用核心语言编写，也是C++ISO自身标准的一部分。</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Standard_Template_Library\" target=\"_blank\" rel=\"noopener\">Standard Template Library</a>：标准模板库</li>\n<li><a href=\"http://en.wikipedia.org/wiki/C_POSIX_library\" target=\"_blank\" rel=\"noopener\">C POSIX library</a> ： POSIX系统的C标准库规范</li>\n<li><a href=\"https://github.com/cplusplus\" target=\"_blank\" rel=\"noopener\">ISO C++ Standards Committee</a> ：C++标准委员会</li>\n</ul>\n<h3 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a><a name=\"t13\" target=\"_blank\"></a>框架</h3><p>C++通用框架和库</p>\n<ul>\n<li><a href=\"http://stdcxx.apache.org/\" target=\"_blank\" rel=\"noopener\">Apache C++ Standard Library</a>：是一系列算法，容器，迭代器和其他基本组件的集合</li>\n<li><a href=\"http://stlab.adobe.com/\" target=\"_blank\" rel=\"noopener\">ASL</a> ：Adobe源代码库提供了同行的评审和可移植的C++源代码库。</li>\n<li><a href=\"https://github.com/boostorg\" target=\"_blank\" rel=\"noopener\">Boost</a> ：大量通用C++库的集合。</li>\n<li><a href=\"https://github.com/bloomberg/bde\" target=\"_blank\" rel=\"noopener\">BDE</a> ：来自于彭博资讯实验室的开发环境。</li>\n<li><a href=\"http://libcinder.org/\" target=\"_blank\" rel=\"noopener\">Cinder</a>：提供专业品质创造性编码的开源开发社区。</li>\n<li><a href=\"http://ryan.gulix.cl/fossil.cgi/cxxomfort/\" target=\"_blank\" rel=\"noopener\">Cxxomfort</a>：轻量级的，只包含头文件的库，将C++ 11的一些新特性移植到C++03中。</li>\n<li><a href=\"http://dlib.net/\" target=\"_blank\" rel=\"noopener\">Dlib</a>：使用契约式编程和现代C++科技设计的通用的跨平台的C++库。</li>\n<li><a href=\"https://github.com/paulhodge/EASTL\" target=\"_blank\" rel=\"noopener\">EASTL</a> ：EA-STL公共部分</li>\n<li><a href=\"https://github.com/sumeetchhetri/ffead-cpp\" target=\"_blank\" rel=\"noopener\">ffead-cpp</a> ：企业应用程序开发框架</li>\n<li><a href=\"https://github.com/facebook/folly\" target=\"_blank\" rel=\"noopener\">Folly</a>：由Facebook开发和使用的开源C++库</li>\n<li><a href=\"https://github.com/julianstorer/JUCE\" target=\"_blank\" rel=\"noopener\">JUCE</a> ：包罗万象的C++类库，用于开发跨平台软件</li>\n<li><a href=\"https://github.com/facebook/libphenom\" target=\"_blank\" rel=\"noopener\">libPhenom</a>：用于构建高性能和高度可扩展性系统的事件框架。</li>\n<li><a href=\"https://github.com/sourcey/libsourcey\" target=\"_blank\" rel=\"noopener\">LibSourcey</a> ：用于实时的视频流和高性能网络应用程序的C++11 evented IO</li>\n<li><a href=\"https://github.com/koanlogic/libu\" target=\"_blank\" rel=\"noopener\">LibU</a> ： C语言写的多平台工具库</li>\n<li><a href=\"http://loki-lib.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Loki</a> ：C++库的设计，包括常见的设计模式和习语的实现。</li>\n<li><a href=\"https://code.google.com/p/mili/\" target=\"_blank\" rel=\"noopener\">MiLi</a> ：只含头文件的小型C++库</li>\n<li><a href=\"http://www.openframeworks.cc/\" target=\"_blank\" rel=\"noopener\">openFrameworks</a> ：开发C++工具包，用于创意性编码。</li>\n<li><a href=\"http://qt-project.org/\" target=\"_blank\" rel=\"noopener\">Qt</a> ：跨平台的应用程序和用户界面框架</li>\n<li><a href=\"http://code.google.com/p/reason/\" target=\"_blank\" rel=\"noopener\">Reason</a> ：跨平台的框架，使开发者能够更容易地使用Java，.Net和Python，同时也满足了他们对C++性能和优势的需求。</li>\n<li><a href=\"http://root.cern.ch/\" target=\"_blank\" rel=\"noopener\">ROOT</a> ：具备所有功能的一系列面向对象的框架，能够非常高效地处理和分析大量的数据，为欧洲原子能研究机构所用。</li>\n<li><a href=\"http://www.stlport.org/\" target=\"_blank\" rel=\"noopener\">STLport</a>：是STL具有代表性的版本</li>\n<li><a href=\"http://stxxl.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">STXXL</a>：用于额外的大型数据集的标准模板库。</li>\n<li><a href=\"http://www.ultimatepp.org/\" target=\"_blank\" rel=\"noopener\">Ultimate++</a> ：C++跨平台快速应用程序开发框架</li>\n<li><a href=\"http://sourceforge.net/projects/wtl/\" target=\"_blank\" rel=\"noopener\">Windows Template Library</a>：用于开发Windows应用程序和UI组件的C++库</li>\n<li><a href=\"https://github.com/jll63/yomm11\" target=\"_blank\" rel=\"noopener\">Yomm11</a> ：C++11的开放multi-methods.</li>\n</ul>\n<h3 id=\"人工智能\"><a href=\"#人工智能\" class=\"headerlink\" title=\"人工智能\"></a><a name=\"t14\" target=\"_blank\"></a>人工智能</h3><ul>\n<li><a href=\"https://github.com/aigamedev/btsk\" target=\"_blank\" rel=\"noopener\">btsk</a> ：游戏行为树启动器工具</li>\n<li><a href=\"http://eodev.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Evolving Objects</a>：基于模板的，ANSI C++演化计算库，能够帮助你非常快速地编写出自己的随机优化算法。</li>\n<li><a href=\"https://github.com/andrometa/neu\" target=\"_blank\" rel=\"noopener\">Neu</a>：C++11框架，编程语言集，用于创建人工智能应用程序的多用途软件系统。</li>\n</ul>\n<h3 id=\"异步事件循环\"><a href=\"#异步事件循环\" class=\"headerlink\" title=\"异步事件循环\"></a><a name=\"t15\" target=\"_blank\"></a>异步事件循环</h3><ul>\n<li><a href=\"http://think-async.com/\" target=\"_blank\" rel=\"noopener\">Boost.Asio</a>：用于网络和底层I/O编程的跨平台的C++库。</li>\n<li><a href=\"http://libev.schmorp.de/\" target=\"_blank\" rel=\"noopener\">libev</a> ：功能齐全，高性能的时间循环，轻微地仿效libevent，但是不再像libevent一样有局限性，也修复了它的一些bug。</li>\n<li><a href=\"http://libevent.org/\" target=\"_blank\" rel=\"noopener\">libevent</a> ：事件通知库</li>\n<li><a href=\"https://github.com/joyent/libuv\" target=\"_blank\" rel=\"noopener\">libuv</a> ：跨平台异步I/O。</li>\n</ul>\n<h3 id=\"音频\"><a href=\"#音频\" class=\"headerlink\" title=\"音频\"></a><a name=\"t16\" target=\"_blank\"></a>音频</h3><p>音频，声音，音乐，数字化音乐库</p>\n<ul>\n<li><a href=\"http://www.fmod.org/\" target=\"_blank\" rel=\"noopener\">FMOD</a> ：易于使用的跨平台的音频引擎和音频内容的游戏创作工具。</li>\n<li><a href=\"https://github.com/micknoise/Maximilian\" target=\"_blank\" rel=\"noopener\">Maximilian</a> ：C++音频和音乐数字信号处理库</li>\n<li><a href=\"http://www.openal.org/\" target=\"_blank\" rel=\"noopener\">OpenAL</a> ：开源音频库—跨平台的音频API</li>\n<li><a href=\"http://opus-codec.org/\" target=\"_blank\" rel=\"noopener\">Opus</a>：一个完全开放的，免版税的，高度通用的音频编解码器</li>\n<li><a href=\"http://www.speex.org/\" target=\"_blank\" rel=\"noopener\">Speex</a>：免费编解码器，为Opus所废弃</li>\n<li><a href=\"https://github.com/TonicAudio/Tonic\" target=\"_blank\" rel=\"noopener\">Tonic</a>： C++易用和高效的音频合成</li>\n<li><a href=\"http://xiph.org/vorbis/\" target=\"_blank\" rel=\"noopener\">Vorbis</a>： Ogg Vorbis是一种完全开放的，非专有的，免版税的通用压缩音频格式。</li>\n</ul>\n<h3 id=\"生态学\"><a href=\"#生态学\" class=\"headerlink\" title=\"生态学\"></a><a name=\"t17\" target=\"_blank\"></a>生态学</h3><p>生物信息，基因组学和生物技术</p>\n<ul>\n<li><a href=\"http://molpopgen.github.io/libsequence/\" target=\"_blank\" rel=\"noopener\">libsequence</a>：用于表示和分析群体遗传学数据的C++库。</li>\n<li><a href=\"http://www.seqan.de/\" target=\"_blank\" rel=\"noopener\">SeqAn</a>：专注于生物数据序列分析的算法和数据结构。</li>\n<li><a href=\"https://github.com/ekg/vcflib\" target=\"_blank\" rel=\"noopener\">Vcflib</a> ：用于解析和处理VCF文件的C++库</li>\n<li><a href=\"https://github.com/jewmanchue/wham\" target=\"_blank\" rel=\"noopener\">Wham</a>：直接把联想测试应用到BAM文件的基因结构变异。</li>\n</ul>\n<h3 id=\"压缩\"><a href=\"#压缩\" class=\"headerlink\" title=\"压缩\"></a><a name=\"t18\" target=\"_blank\"></a>压缩</h3><p>压缩和归档库</p>\n<ul>\n<li><a href=\"http://www.bzip.org/\" target=\"_blank\" rel=\"noopener\">bzip2</a>：一个完全免费，免费专利和高质量的数据压缩</li>\n<li><a href=\"https://bitbucket.org/attila_afra/doboz/overview\" target=\"_blank\" rel=\"noopener\">doboz</a>：能够快速解压缩的压缩库</li>\n<li><a href=\"https://icculus.org/physfs/\" target=\"_blank\" rel=\"noopener\">PhysicsFS</a>：对各种归档提供抽象访问的库，主要用于视频游戏，设计灵感部分来自于Quake3的文件子系统。</li>\n<li><a href=\"https://projects.kde.org/projects/frameworks/karchive\" target=\"_blank\" rel=\"noopener\">KArchive</a>：用于创建，读写和操作文件档案（例如zip和 tar）的库，它通过QIODevice的一系列子类，使用gzip格式，提供了透明的压缩和解压缩的数据。</li>\n<li><a href=\"https://code.google.com/p/lz4/\" target=\"_blank\" rel=\"noopener\">LZ4</a> ：非常快速的压缩算法</li>\n<li><a href=\"https://code.google.com/p/lzham/\" target=\"_blank\" rel=\"noopener\">LZHAM</a> ：无损压缩数据库，压缩比率跟LZMA接近，但是解压缩速度却要快得多。</li>\n<li><a href=\"http://www.7-zip.org/sdk.html\" target=\"_blank\" rel=\"noopener\">LZMA</a> ：7z格式默认和通用的压缩方法。</li>\n<li><a href=\"http://www.matcode.com/lzmat.htm\" target=\"_blank\" rel=\"noopener\">LZMAT</a> ：及其快速的实时无损数据压缩库</li>\n<li><a href=\"https://code.google.com/p/miniz/\" target=\"_blank\" rel=\"noopener\">miniz</a>：单一的C源文件，紧缩/膨胀压缩库，使用zlib兼容API，ZIP归档读写，PNG写方式。</li>\n<li><a href=\"https://github.com/nmoinvaz/minizip\" target=\"_blank\" rel=\"noopener\">Minizip</a>：Zlib最新bug修复，支持PKWARE磁盘跨越，AES加密和IO缓冲。</li>\n<li><a href=\"https://code.google.com/p/snappy/\" target=\"_blank\" rel=\"noopener\">Snappy</a> ：快速压缩和解压缩</li>\n<li><a href=\"http://zlib.net/\" target=\"_blank\" rel=\"noopener\">ZLib</a> ：非常紧凑的数据流压缩库</li>\n<li><a href=\"http://zziplib.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">ZZIPlib</a>：提供ZIP归档的读权限。</li>\n</ul>\n<h3 id=\"并发性\"><a href=\"#并发性\" class=\"headerlink\" title=\"并发性\"></a><a name=\"t19\" target=\"_blank\"></a>并发性</h3><p>并发执行和多线程</p>\n<ul>\n<li><a href=\"https://github.com/kylelutz/compute\" target=\"_blank\" rel=\"noopener\">Boost.Compute</a> ：用于OpenCL的C++GPU计算库</li>\n<li><a href=\"https://github.com/HSA-Libraries/Bolt\" target=\"_blank\" rel=\"noopener\">Bolt</a> ：针对GPU进行优化的C++模板库</li>\n<li><a href=\"https://github.com/schlangster/cpp.react\" target=\"_blank\" rel=\"noopener\">C++React</a> ：用于C++11的反应性编程库</li>\n<li><a href=\"https://www.threadingbuildingblocks.org/\" target=\"_blank\" rel=\"noopener\">Intel TBB</a> ：Intel线程构件块</li>\n<li><a href=\"https://github.com/libclsph/libclsph\" target=\"_blank\" rel=\"noopener\">Libclsph</a>：基于OpenCL的GPU加速SPH流体仿真库</li>\n<li><a href=\"https://www.khronos.org/opencl/\" target=\"_blank\" rel=\"noopener\">OpenCL</a> ：并行编程的异构系统的开放标准</li>\n<li><a href=\"http://openmp.org/\" target=\"_blank\" rel=\"noopener\">OpenMP</a>：OpenMP API</li>\n<li><a href=\"http://thrust.github.io/\" target=\"_blank\" rel=\"noopener\">Thrust</a> ：类似于C++标准模板库的并行算法库</li>\n<li><a href=\"https://github.com/STEllAR-GROUP/hpx/\" target=\"_blank\" rel=\"noopener\">HPX</a> ：用于任何规模的并行和分布式应用程序的通用C++运行时系统</li>\n<li><a href=\"https://github.com/ddemidov/vexcl\" target=\"_blank\" rel=\"noopener\">VexCL</a> ：用于OpenCL/CUDA 的C++向量表达式模板库。</li>\n</ul>\n<h3 id=\"容器\"><a href=\"#容器\" class=\"headerlink\" title=\"容器\"></a><a name=\"t20\" target=\"_blank\"></a>容器</h3><ul>\n<li><a href=\"https://code.google.com/p/cpp-btree/\" target=\"_blank\" rel=\"noopener\">C++ B-tree</a> ：基于B树数据结构，实现命令内存容器的模板库</li>\n<li><a href=\"https://github.com/goossaert/hashmap\" target=\"_blank\" rel=\"noopener\">Hashmaps</a>： C++中开放寻址哈希表算法的实现</li>\n</ul>\n<h3 id=\"密码学\"><a href=\"#密码学\" class=\"headerlink\" title=\"密码学\"></a><a name=\"t21\" target=\"_blank\"></a>密码学</h3><ul>\n<li><a href=\"http://bcrypt.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Bcrypt</a> ：一个跨平台的文件加密工具，加密文件可以移植到所有可支持的操作系统和处理器中。</li>\n<li><a href=\"https://github.com/fffaraz/awesome-cpp/blob/master\" target=\"_blank\" rel=\"noopener\">BeeCrypt</a>：</li>\n<li><a href=\"http://botan.randombit.net/\" target=\"_blank\" rel=\"noopener\">Botan</a>： C++加密库</li>\n<li><a href=\"http://www.cryptopp.com/\" target=\"_blank\" rel=\"noopener\">Crypto++</a>：一个有关加密方案的免费的C++库</li>\n<li><a href=\"https://www.gnupg.org/\" target=\"_blank\" rel=\"noopener\">GnuPG</a>： OpenPGP标准的完整实现</li>\n<li><a href=\"http://www.gnutls.org/\" target=\"_blank\" rel=\"noopener\">GnuTLS</a> ：实现了SSL，TLS和DTLS协议的安全通信库</li>\n<li><a href=\"http://www.gnu.org/software/libgcrypt/\" target=\"_blank\" rel=\"noopener\">Libgcrypt</a></li>\n<li><a href=\"https://github.com/fffaraz/awesome-cpp/blob/master\" target=\"_blank\" rel=\"noopener\">libmcrypt</a></li>\n<li><a href=\"http://www.libressl.org/\" target=\"_blank\" rel=\"noopener\">LibreSSL</a>：免费的SSL/TLS协议，属于2014 OpenSSL的一个分支</li>\n<li><a href=\"https://github.com/libtom/libtomcrypt\" target=\"_blank\" rel=\"noopener\">LibTomCrypt</a>：一个非常全面的，模块化的，可移植的加密工具</li>\n<li><a href=\"https://github.com/jedisct1/libsodium\" target=\"_blank\" rel=\"noopener\">libsodium</a>：基于NaCI的加密库，固执己见，容易使用</li>\n<li><a href=\"http://www.lysator.liu.se/~nisse/nettle/\" target=\"_blank\" rel=\"noopener\">Nettle</a> 底层的加密库</li>\n<li><a href=\"http://www.openssl.org/\" target=\"_blank\" rel=\"noopener\">OpenSSL</a> ： 一个强大的，商用的，功能齐全的，开放源代码的加密库。</li>\n<li><a href=\"https://github.com/kokke/tiny-AES128-C\" target=\"_blank\" rel=\"noopener\">Tiny AES128 in C</a> ：用C实现的一个小巧，可移植的实现了AES128ESB的加密算法</li>\n</ul>\n<h3 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a><a name=\"t22\" target=\"_blank\"></a>数据库</h3><p>数据库，SQL服务器，ODBC驱动程序和工具</p>\n<ul>\n<li><a href=\"https://github.com/paulftw/hiberlite\" target=\"_blank\" rel=\"noopener\">hiberlite</a> ：用于Sqlite3的C++对象关系映射</li>\n<li><a href=\"https://github.com/redis/hiredis\" target=\"_blank\" rel=\"noopener\">Hiredis</a>： 用于Redis数据库的很简单的C客户端库</li>\n<li><a href=\"https://github.com/google/leveldb\" target=\"_blank\" rel=\"noopener\">LevelDB</a>： 快速键值存储库</li>\n<li><a href=\"http://symas.com/mdb/\" target=\"_blank\" rel=\"noopener\">LMDB</a>：符合数据库四大基本元素的嵌入键值存储</li>\n<li><a href=\"http://www.tangentsoft.net/mysql++/\" target=\"_blank\" rel=\"noopener\">MySQL++</a>：封装了MySql的C API的C++ 包装器</li>\n<li><a href=\"https://github.com/facebook/rocksdb\" target=\"_blank\" rel=\"noopener\">RocksDB</a>：来自Facebook的嵌入键值的快速存储</li>\n<li><a href=\"http://www.sqlite.org/\" target=\"_blank\" rel=\"noopener\">SQLite</a>：一个完全嵌入式的，功能齐全的关系数据库，只有几百KB，可以正确包含到你的项目中。</li>\n</ul>\n<h3 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a><a name=\"t23\" target=\"_blank\"></a>调试</h3><p>调试库， 内存和资源泄露检测，单元测试</p>\n<ul>\n<li><a href=\"http://www.boost.org/doc/libs/master/libs/test/doc/html/index.html\" target=\"_blank\" rel=\"noopener\">Boost.Test</a>：Boost测试库</li>\n<li><a href=\"https://github.com/philsquared/Catch\" target=\"_blank\" rel=\"noopener\">Catch</a>：一个很时尚的，C++原生的框架，只包含头文件，用于单元测试，测试驱动开发和行为驱动开发。</li>\n<li><a href=\"http://www.freedesktop.org/wiki/Software/cppunit/\" target=\"_blank\" rel=\"noopener\">CppUnit</a>：由JUnit移植过来的C++测试框架</li>\n<li><a href=\"http://www.cmake.org/cmake/help/v2.8.8/ctest.html\" target=\"_blank\" rel=\"noopener\">CTest</a>：CMake测试驱动程序</li>\n<li><a href=\"http://code.google.com/p/googletest/\" target=\"_blank\" rel=\"noopener\">googletest</a>：谷歌C++测试框架</li>\n<li><a href=\"https://github.com/deplinenoise/ig-debugheap\" target=\"_blank\" rel=\"noopener\">ig-debugheap</a>：用于跟踪内存错误的多平台调试堆</li>\n<li><a href=\"https://github.com/zorgnax/libtap\" target=\"_blank\" rel=\"noopener\">libtap</a>：用C语言编写测试</li>\n<li><a href=\"http://www.almostinfinite.com/memtrack.html\" target=\"_blank\" rel=\"noopener\">MemTrack</a> —用于C++跟踪内存分配</li>\n<li><a href=\"https://bitbucket.org/jonasmeyer/microprofile/overview\" target=\"_blank\" rel=\"noopener\">microprofile</a>- 跨平台的网络试图分析器</li>\n<li><a href=\"http://www.jera.com/techinfo/jtns/jtn002.html\" target=\"_blank\" rel=\"noopener\">minUnit</a> ：使用C写的迷你单元测试框架，只使用了两个宏</li>\n<li><a href=\"https://github.com/Celtoys/Remotery\" target=\"_blank\" rel=\"noopener\">Remotery</a>：用于web视图的单一C文件分析器</li>\n<li><a href=\"http://unittest-cpp.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">UnitTest++</a>：轻量级的C++单元测试框架</li>\n</ul>\n<h3 id=\"游戏引擎\"><a href=\"#游戏引擎\" class=\"headerlink\" title=\"游戏引擎\"></a><a name=\"t24\" target=\"_blank\"></a>游戏引擎</h3><ul>\n<li><a href=\"http://www.cocos2d-x.org/\" target=\"_blank\" rel=\"noopener\">Cocos2d-x</a> ：一个跨平台框架，用于构建2D游戏，互动图书，演示和其他图形应用程序。</li>\n<li><a href=\"http://gritengine.com/\" target=\"_blank\" rel=\"noopener\">Grit</a> ：社区项目，用于构建一个免费的游戏引擎，实现开放的世界3D游戏。</li>\n<li><a href=\"http://irrlicht.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Irrlicht</a> ：C++语言编写的开源高性能的实时#D引擎</li>\n<li><a href=\"http://polycode.org/\" target=\"_blank\" rel=\"noopener\">Polycode</a>：C++实现的用于创建游戏的开源框架（与Lua绑定）。</li>\n</ul>\n<h3 id=\"图形用户界面\"><a href=\"#图形用户界面\" class=\"headerlink\" title=\"图形用户界面\"></a><a name=\"t25\" target=\"_blank\"></a>图形用户界面</h3><ul>\n<li><a href=\"http://cegui.org.uk/\" target=\"_blank\" rel=\"noopener\">CEGUI</a> ： 很灵活的跨平台GUI库</li>\n<li><a href=\"http://www.fltk.org/index.php\" target=\"_blank\" rel=\"noopener\">FLTK</a> ：快速，轻量级的跨平台的C++GUI工具包。</li>\n<li><a href=\"http://www.gtk.org/\" target=\"_blank\" rel=\"noopener\">GTK+</a>： 用于创建图形用户界面的跨平台工具包</li>\n<li><a href=\"http://www.gtkmm.org/en/\" target=\"_blank\" rel=\"noopener\">gtkmm</a> ：用于受欢迎的GUI库GTK+的官方C++接口。</li>\n<li><a href=\"https://github.com/ocornut/imgui\" target=\"_blank\" rel=\"noopener\">imgui</a>：拥有最小依赖关系的立即模式图形用户界面</li>\n<li><a href=\"http://librocket.com/\" target=\"_blank\" rel=\"noopener\">libRocket</a> ：<a href=\"http://librocket.com/\" target=\"_blank\" rel=\"noopener\">libRocket</a> 是一个C++ HTML/CSS 游戏接口中间件</li>\n<li><a href=\"http://mygui.info/\" target=\"_blank\" rel=\"noopener\">MyGUI</a> ：快速，灵活，简单的GUI</li>\n<li><a href=\"http://invisible-island.net/ncurses/\" target=\"_blank\" rel=\"noopener\">Ncurses</a>：终端用户界面</li>\n<li><a href=\"http://qcustomplot.com/\" target=\"_blank\" rel=\"noopener\">QCustomPlot</a> ：没有更多依赖关系的Qt绘图控件</li>\n<li><a href=\"http://qwt.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Qwt</a> ：用户与技术应用的Qt 控件</li>\n<li><a href=\"http://qwtplot3d.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">QwtPlot3D</a> ：功能丰富的基于Qt/OpenGL的C++编程库，本质上提供了一群3D控件</li>\n<li><a href=\"https://github.com/Twolewis/OtterUI\" target=\"_blank\" rel=\"noopener\">OtterUI</a> ：<a href=\"https://github.com/Twolewis/OtterUI\" target=\"_blank\" rel=\"noopener\">OtterUI</a> 是用于嵌入式系统和互动娱乐软件的用户界面开发解决方案</li>\n<li><a href=\"http://pdcurses.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">PDCurses</a> 包含源代码和预编译库的公共图形函数库</li>\n<li><a href=\"http://wxwidgets.org/\" target=\"_blank\" rel=\"noopener\">wxWidgets</a> C++库，允许开发人员使用一个代码库可以为widows， Mac OS X，Linux和其他平台创建应用程序</li>\n</ul>\n<h3 id=\"图形\"><a href=\"#图形\" class=\"headerlink\" title=\"图形\"></a><a name=\"t26\" target=\"_blank\"></a>图形</h3><ul>\n<li><a href=\"https://github.com/bkaradzic/bgfx\" target=\"_blank\" rel=\"noopener\">bgfx</a>：跨平台的渲染库</li>\n<li><a href=\"http://www.cairographics.org/\" target=\"_blank\" rel=\"noopener\">Cairo</a>：支持多种输出设备的2D图形库</li>\n<li><a href=\"https://github.com/horde3d/Horde3D\" target=\"_blank\" rel=\"noopener\">Horde3D</a> 一个小型的3D渲染和动画引擎</li>\n<li><a href=\"https://github.com/mosra/magnum\" target=\"_blank\" rel=\"noopener\">magnum</a> C++11和OpenGL 2D/3D 图形引擎</li>\n<li><a href=\"http://www.ogre3d.org/\" target=\"_blank\" rel=\"noopener\">Ogre 3D</a> 用C++编写的一个面向场景，实时，灵活的3D渲染引擎（并非游戏引擎）</li>\n<li><a href=\"http://www.openscenegraph.org/\" target=\"_blank\" rel=\"noopener\">OpenSceneGraph</a> 具有高性能的开源3D图形工具包</li>\n<li><a href=\"http://www.panda3d.org/\" target=\"_blank\" rel=\"noopener\">Panda3D</a> 用于3D渲染和游戏开发的框架，用Python和C++编写。</li>\n<li><a href=\"https://github.com/google/skia\" target=\"_blank\" rel=\"noopener\">Skia</a> 用于绘制文字，图形和图像的完整的2D图形库</li>\n<li><a href=\"https://github.com/urho3d/Urho3D\" target=\"_blank\" rel=\"noopener\">urho3d</a> 跨平台的渲染和游戏引擎。</li>\n</ul>\n<h3 id=\"图像处理\"><a href=\"#图像处理\" class=\"headerlink\" title=\"图像处理\"></a><a name=\"t27\" target=\"_blank\"></a>图像处理</h3><ul>\n<li><a href=\"http://www.boost.org/doc/libs/1_56_0/libs/gil/doc/index.html\" target=\"_blank\" rel=\"noopener\">Boost.GIL</a>：通用图像库</li>\n<li><a href=\"http://cimg.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">CImg</a> ：用于图像处理的小型开源C++工具包</li>\n<li><a href=\"http://www.xdp.it/cximage.htm\" target=\"_blank\" rel=\"noopener\">CxImage</a> ：用于加载，保存，显示和转换的图像处理和转换库，可以处理的图片格式包括 BMP, JPEG, GIF, PNG, TIFF, MNG, ICO, PCX, TGA, WMF, WBMP, JBG, J2K。</li>\n<li><a href=\"http://freeimage.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">FreeImage</a> ：开源库，支持现在多媒体应用所需的通用图片格式和其他格式。</li>\n<li><a href=\"http://gdcm.sourceforge.net/wiki/index.php/Main_Page\" target=\"_blank\" rel=\"noopener\">GDCM</a>：Grassroots DICOM 库</li>\n<li><a href=\"http://www.itk.org/\" target=\"_blank\" rel=\"noopener\">ITK</a>：跨平台的开源图像分析系统</li>\n<li><a href=\"http://www.imagemagick.org/script/api.php\" target=\"_blank\" rel=\"noopener\">Magick++</a>：ImageMagick程序的C++接口</li>\n<li><a href=\"http://www.imagemagick.org/script/api.php\" target=\"_blank\" rel=\"noopener\">MagickWnd</a>：ImageMagick程序的C++接口</li>\n<li><a href=\"http://opencv.org/\" target=\"_blank\" rel=\"noopener\">OpenCV</a> ： 开源计算机视觉类库</li>\n<li><a href=\"https://code.google.com/p/tesseract-ocr/\" target=\"_blank\" rel=\"noopener\">tesseract-ocr</a>：OCR引擎</li>\n<li><a href=\"https://github.com/ukoethe/vigra\" target=\"_blank\" rel=\"noopener\">VIGRA</a> ：用于图像分析通用C++计算机视觉库</li>\n<li><a href=\"http://www.vtk.org/\" target=\"_blank\" rel=\"noopener\">VTK</a> ：用于3D计算机图形学，图像处理和可视化的开源免费软件系统。</li>\n</ul>\n<h3 id=\"国际化\"><a href=\"#国际化\" class=\"headerlink\" title=\"国际化\"></a><a name=\"t28\" target=\"_blank\"></a>国际化</h3><ul>\n<li><a href=\"http://www.gnu.org/software/gettext/\" target=\"_blank\" rel=\"noopener\">gettext</a> ：GNU `gettext’</li>\n<li><a href=\"http://site.icu-project.org/\" target=\"_blank\" rel=\"noopener\">IBM ICU</a>：提供Unicode 和全球化支持的C、C++ 和Java库</li>\n<li><a href=\"http://www.gnu.org/software/libiconv/\" target=\"_blank\" rel=\"noopener\">libiconv</a> ：用于不同字符编码之间的编码转换库</li>\n</ul>\n<h3 id=\"Jason\"><a href=\"#Jason\" class=\"headerlink\" title=\"Jason\"></a><a name=\"t29\" target=\"_blank\"></a>Jason</h3><ul>\n<li><a href=\"https://github.com/cesanta/frozen\" target=\"_blank\" rel=\"noopener\">frozen</a> ： C/C++的Jason解析生成器</li>\n<li><a href=\"https://github.com/akheron/jansson\" target=\"_blank\" rel=\"noopener\">Jansson</a> ：进行编解码和处理Jason数据的C语言库</li>\n<li><a href=\"https://github.com/chrismanning/jbson\" target=\"_blank\" rel=\"noopener\">jbson</a> ：C++14中构建和迭代BSON data,和Json 文档的库</li>\n<li><a href=\"https://github.com/jeaye/jeayeson\" target=\"_blank\" rel=\"noopener\">JeayeSON</a>：非常健全的C++ JSON库，只包含头文件</li>\n<li><a href=\"https://github.com/hjiang/jsonxx\" target=\"_blank\" rel=\"noopener\">JSON++</a> ： C++ JSON 解析器</li>\n<li><a href=\"https://github.com/udp/json-parser\" target=\"_blank\" rel=\"noopener\">json-parser</a>：用可移植的ANSI C编写的JSON解析器，占用内存非常少</li>\n<li><a href=\"https://github.com/dropbox/json11\" target=\"_blank\" rel=\"noopener\">json11</a> ：一个迷你的C++11 JSON库</li>\n<li><a href=\"https://github.com/amir-s/jute\" target=\"_blank\" rel=\"noopener\">jute</a> ：非常简单的C++ JSON解析器</li>\n<li><a href=\"https://github.com/vincenthz/libjson\" target=\"_blank\" rel=\"noopener\">ibjson</a>：C语言中的JSON解析和打印库，很容易和任何模型集成。</li>\n<li><a href=\"http://sourceforge.net/projects/libjson/\" target=\"_blank\" rel=\"noopener\">libjson</a>：轻量级的JSON库</li>\n<li><a href=\"https://github.com/kazuho/picojson\" target=\"_blank\" rel=\"noopener\">PicoJSON</a>：C++中JSON解析序列化，只包含头文件</li>\n<li><a href=\"https://github.com/gaudecker/qt-json\" target=\"_blank\" rel=\"noopener\">qt-json</a> ：用于JSON数据和 QVariant层次间的相互解析的简单类</li>\n<li><a href=\"https://github.com/flavio/qjson\" target=\"_blank\" rel=\"noopener\">QJson</a>：将JSON数据映射到QVariant对象的基于Qt的库</li>\n<li><a href=\"https://github.com/miloyip/rapidjson\" target=\"_blank\" rel=\"noopener\">RapidJSON</a>： 用于C++的快速JSON 解析生成器，包含SAX和DOM两种风格的API</li>\n<li><a href=\"https://github.com/lloyd/yajl\" target=\"_blank\" rel=\"noopener\">YAJL</a> ：C语言中快速流JSON解析库</li>\n</ul>\n<h3 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a><a name=\"t30\" target=\"_blank\"></a>日志</h3><ul>\n<li><a href=\"http://www.boost.org/doc/libs/1_56_0/libs/log/doc/html/index.html\" target=\"_blank\" rel=\"noopener\">Boost.Log</a> ：设计非常模块化，并且具有扩展性</li>\n<li><a href=\"https://github.com/easylogging/easyloggingpp\" target=\"_blank\" rel=\"noopener\">easyloggingpp</a>：C++日志库，只包含单一的头文件。</li>\n<li><a href=\"http://log4cpp.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Log4cpp</a> ：一系列C++类库，灵活添加日志到文件，系统日志，IDSA和其他地方。</li>\n<li><a href=\"http://www.templog.org/\" target=\"_blank\" rel=\"noopener\">templog</a>：轻量级C++库，可以添加日志到你的C++应用程序中</li>\n</ul>\n<h3 id=\"机器学习\"><a href=\"#机器学习\" class=\"headerlink\" title=\"机器学习\"></a><a name=\"t31\" target=\"_blank\"></a>机器学习</h3><ul>\n<li><a href=\"https://github.com/BVLC/caffe\" target=\"_blank\" rel=\"noopener\">Caffe</a> ：快速的神经网络框架</li>\n<li><a href=\"https://github.com/liuliu/ccv\" target=\"_blank\" rel=\"noopener\">CCV</a> ：以C语言为核心的现代计算机视觉库</li>\n<li><a href=\"http://www.mlpack.org/\" target=\"_blank\" rel=\"noopener\">mlpack</a> ：可扩展的C++机器学习库</li>\n<li><a href=\"https://github.com/Itseez/opencv\" target=\"_blank\" rel=\"noopener\">OpenCV</a>：开源计算机视觉库</li>\n<li><a href=\"https://github.com/GHamrouni/Recommender\" target=\"_blank\" rel=\"noopener\">Recommender</a>：使用协同过滤进行产品推荐/建议的C语言库。</li>\n<li><a href=\"https://github.com/shogun-toolbox/shogun\" target=\"_blank\" rel=\"noopener\">SHOGUN</a>：Shogun 机器学习工具</li>\n<li><a href=\"https://code.google.com/p/sofia-ml/\" target=\"_blank\" rel=\"noopener\">sofia-ml</a> ：用于机器学习的快速增量算法套件</li>\n</ul>\n<h3 id=\"数学\"><a href=\"#数学\" class=\"headerlink\" title=\"数学\"></a><a name=\"t32\" target=\"_blank\"></a>数学</h3><ul>\n<li><a href=\"http://arma.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Armadillo</a> ：高质量的C++线性代数库，速度和易用性做到了很好的平衡。语法和MatlAB很相似</li>\n<li><a href=\"https://code.google.com/p/blaze-lib/\" target=\"_blank\" rel=\"noopener\">blaze</a>：高性能的C++数学库，用于密集和稀疏算法。</li>\n<li><a href=\"http://ceres-solver.org/\" target=\"_blank\" rel=\"noopener\">ceres-solver</a> ：来自谷歌的C++库，用于建模和解决大型复杂非线性最小平方问题。</li>\n<li><a href=\"http://www.cgal.org/\" target=\"_blank\" rel=\"noopener\">CGal</a>： 高效，可靠的集合算法集合</li>\n<li><a href=\"http://cmldev.net/\" target=\"_blank\" rel=\"noopener\">cml</a> ：用于游戏和图形的免费C++数学库</li>\n<li><a href=\"http://eigen.tuxfamily.org/\" target=\"_blank\" rel=\"noopener\">Eigen</a> ：高级C++模板头文件库，包括线性代数，矩阵，向量操作，数值解决和其他相关的算法。</li>\n<li><a href=\"http://ggt.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">GMTL</a>：数学图形模板库是一组广泛实现基本图形的工具。</li>\n<li><a href=\"https://gmplib.org/\" target=\"_blank\" rel=\"noopener\">GMP</a>：用于个高精度计算的C/C++库，处理有符号整数，有理数和浮点数。</li>\n</ul>\n<h3 id=\"多媒体\"><a href=\"#多媒体\" class=\"headerlink\" title=\"多媒体\"></a><a name=\"t33\" target=\"_blank\"></a>多媒体</h3><ul>\n<li><a href=\"http://gstreamer.freedesktop.org/\" target=\"_blank\" rel=\"noopener\">GStreamer</a> ：构建媒体处理组件图形的库</li>\n<li><a href=\"http://www.live555.com/liveMedia/\" target=\"_blank\" rel=\"noopener\">LIVE555 Streaming Media</a> ：使用开放标准协议(RTP/RTCP, RTSP, SIP) 的多媒体流库</li>\n<li><a href=\"https://wiki.videolan.org/LibVLC\" target=\"_blank\" rel=\"noopener\">libVLC</a> ：libVLC (VLC SDK)媒体框架</li>\n<li><a href=\"https://github.com/wang-bin/QtAV\" target=\"_blank\" rel=\"noopener\">QtAv</a>：基于Qt和FFmpeg的多媒体播放框架，能够帮助你轻而易举地编写出一个播放器</li>\n<li><a href=\"http://www.libsdl.org/\" target=\"_blank\" rel=\"noopener\">SDL</a> ：简单直控媒体层</li>\n<li><a href=\"http://www.sfml-dev.org/\" target=\"_blank\" rel=\"noopener\">SFML</a> ：快速，简单的多媒体库</li>\n</ul>\n<h3 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a><a name=\"t34\" target=\"_blank\"></a>网络</h3><ul>\n<li><a href=\"http://www.cs.wustl.edu/~schmidt/ACE.html\" target=\"_blank\" rel=\"noopener\">ACE</a>：C++面向对象网络变成工具包</li>\n<li><a href=\"http://think-async.com/\" target=\"_blank\" rel=\"noopener\">Boost.Asio</a>：用于网络和底层I/O编程的跨平台的C++库</li>\n<li><a href=\"http://casablanca.codeplex.com/\" target=\"_blank\" rel=\"noopener\">Casablanca</a>：C++ REST SDK</li>\n<li><a href=\"http://cpp-netlib.org/\" target=\"_blank\" rel=\"noopener\">cpp-netlib</a>：高级网络编程的开源库集合</li>\n<li><a href=\"https://github.com/rxi/dyad\" target=\"_blank\" rel=\"noopener\">Dyad.c</a>：C语言的异步网络</li>\n<li><a href=\"http://curl.haxx.se/libcurl/\" target=\"_blank\" rel=\"noopener\">libcurl</a> :多协议文件传输库</li>\n<li><a href=\"https://github.com/cesanta/mongoose\" target=\"_blank\" rel=\"noopener\">Mongoose</a><span style=\"text-decoration:underline\">：</span>非常轻量级的网络服务器</li>\n<li><a href=\"https://github.com/chenshuo/muduo\" target=\"_blank\" rel=\"noopener\">Muduo</a> ：用于Linux多线程服务器的C++非阻塞网络库</li>\n<li><a href=\"https://github.com/cesanta/net_skeleton\" target=\"_blank\" rel=\"noopener\">net_skeleton</a> ：C/C++的TCP 客户端/服务器库</li>\n<li><a href=\"https://github.com/riolet/nope.c\" target=\"_blank\" rel=\"noopener\">nope.c</a> ：基于C语言的超轻型软件平台，用于可扩展的服务器端和网络应用。 对于C编程人员，可以考虑node.js</li>\n<li><a href=\"https://github.com/davidmoreno/onion\" target=\"_blank\" rel=\"noopener\">Onion</a> :C语言HTTP服务器库，其设计为轻量级，易使用。</li>\n<li><a href=\"https://github.com/pocoproject\" target=\"_blank\" rel=\"noopener\">POCO</a>：用于构建网络和基于互联网应用程序的C++类库，可以运行在桌面，服务器，移动和嵌入式系统。</li>\n<li><a href=\"https://github.com/OculusVR/RakNet\" target=\"_blank\" rel=\"noopener\">RakNet</a>：为游戏开发人员提供的跨平台的开源C++网络引擎。</li>\n<li><a href=\"https://github.com/vinipsmaker/tufao\" target=\"_blank\" rel=\"noopener\">Tuf o</a> ：用于Qt之上的C++构建的异步Web框架。</li>\n<li><a href=\"https://github.com/zaphoyd/websocketpp\" target=\"_blank\" rel=\"noopener\">WebSocket++</a> ：基于C++/Boost Aiso的websocket 客户端/服务器库</li>\n<li><a href=\"http://zeromq.org/\" target=\"_blank\" rel=\"noopener\">ZeroMQ</a> ：高速，模块化的异步通信库</li>\n</ul>\n<h3 id=\"物理学\"><a href=\"#物理学\" class=\"headerlink\" title=\"物理学\"></a><a name=\"t35\" target=\"_blank\"></a>物理学</h3><p>动力学仿真引擎</p>\n<ul>\n<li><a href=\"https://code.google.com/p/box2d/\" target=\"_blank\" rel=\"noopener\">Box2D</a>：2D的游戏物理引擎。</li>\n<li><a href=\"https://github.com/bulletphysics/bullet3\" target=\"_blank\" rel=\"noopener\">Bullet</a> ：3D的游戏物理引擎。</li>\n<li><a href=\"https://github.com/slembcke/Chipmunk2D\" target=\"_blank\" rel=\"noopener\">Chipmunk</a> ：快速，轻量级的2D游戏物理库</li>\n<li><a href=\"https://github.com/google/liquidfun\" target=\"_blank\" rel=\"noopener\">LiquidFun</a>：2D的游戏物理引擎</li>\n<li><a href=\"http://www.ode.org/\" target=\"_blank\" rel=\"noopener\">ODE</a> ：开放动力学引擎-开源，高性能库，模拟刚体动力学。</li>\n<li><a href=\"https://github.com/vanderlin/ofxBox2d\" target=\"_blank\" rel=\"noopener\">ofxBox2d</a>：Box2D开源框架包装器。</li>\n<li><a href=\"https://github.com/simbody/simbody\" target=\"_blank\" rel=\"noopener\">Simbody</a> ：高性能C++多体动力学/物理库，模拟关节生物力学和机械系统，像车辆，机器人和人体骨骼。</li>\n</ul>\n<h3 id=\"机器人学\"><a href=\"#机器人学\" class=\"headerlink\" title=\"机器人学\"></a><a name=\"t36\" target=\"_blank\"></a>机器人学</h3><ul>\n<li><a href=\"http://moos-ivp.org/\" target=\"_blank\" rel=\"noopener\">MOOS-IvP</a> ：一组开源C++模块，提供机器人平台的自主权，尤其是自主的海洋车辆。</li>\n<li><a href=\"http://www.mrpt.org/\" target=\"_blank\" rel=\"noopener\">MRPT</a>：移动机器人编程工具包</li>\n<li><a href=\"https://github.com/PointCloudLibrary/pcl\" target=\"_blank\" rel=\"noopener\">PCL</a> ：点云库是一个独立的，大规模的开放项目，用于2D/3D图像和点云处理。</li>\n<li><a href=\"http://www.roboticslibrary.org/\" target=\"_blank\" rel=\"noopener\">Robotics Library (RL)</a>： 一个独立的C++库，包括机器人动力学，运动规划和控制。</li>\n<li><a href=\"http://www.robwork.dk/jrobwork/\" target=\"_blank\" rel=\"noopener\">RobWork</a>：一组C++库的集合，用于机器人系统的仿真和控制。</li>\n<li><a href=\"http://wiki.ros.org/\" target=\"_blank\" rel=\"noopener\">ROS</a> ：机器人操作系统，提供了一些库和工具帮助软件开发人员创建机器人应用程序。</li>\n</ul>\n<h3 id=\"科学计算\"><a href=\"#科学计算\" class=\"headerlink\" title=\"科学计算\"></a><a name=\"t37\" target=\"_blank\"></a>科学计算</h3><ul>\n<li><a href=\"http://www.fftw.org/\" target=\"_blank\" rel=\"noopener\">FFTW</a> :用一维或者多维计算DFT的C语言库。</li>\n<li><a href=\"http://www.gnu.org/software/gsl/\" target=\"_blank\" rel=\"noopener\">GSL</a>：GNU科学库。</li>\n</ul>\n<h3 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a><a name=\"t38\" target=\"_blank\"></a>脚本</h3><ul>\n<li><a href=\"https://github.com/ChaiScript/ChaiScript/\" target=\"_blank\" rel=\"noopener\">ChaiScript</a> ：用于C++的易于使用的嵌入式脚本语言。</li>\n<li><a href=\"http://www.lua.org/\" target=\"_blank\" rel=\"noopener\">Lua</a> ：用于配置文件和基本应用程序脚本的小型快速脚本引擎。</li>\n<li><a href=\"https://github.com/dafrito/luacxx\" target=\"_blank\" rel=\"noopener\">luacxx</a>：用于创建Lua绑定的C++ 11 API</li>\n<li><a href=\"http://www.swig.org/\" target=\"_blank\" rel=\"noopener\">SWIG</a> ：一个可以让你的C++代码链接到JavaScript，Perl，PHP，Python，Tcl和Ruby的包装器/接口生成器</li>\n<li><a href=\"https://github.com/cesanta/v7\" target=\"_blank\" rel=\"noopener\">V7</a>：嵌入式的JavaScript 引擎。</li>\n<li><a href=\"http://code.google.com/p/v8/\" target=\"_blank\" rel=\"noopener\">V8</a> ：谷歌的快速JavaScript引擎，可以被嵌入到任何C++应用程序中。</li>\n</ul>\n<h3 id=\"序列化\"><a href=\"#序列化\" class=\"headerlink\" title=\"序列化\"></a><a name=\"t39\" target=\"_blank\"></a>序列化</h3><ul>\n<li><a href=\"http://kentonv.github.io/capnproto/\" target=\"_blank\" rel=\"noopener\">Cap’n Proto</a> ：快速数据交换格式和RPC系统。</li>\n<li><a href=\"https://github.com/USCiLab/cereal\" target=\"_blank\" rel=\"noopener\">cereal</a> ：C++11 序列化库</li>\n<li><a href=\"https://github.com/google/flatbuffers\" target=\"_blank\" rel=\"noopener\">FlatBuffers</a> ：内存高效的序列化库</li>\n<li><a href=\"https://github.com/msgpack/msgpack-c\" target=\"_blank\" rel=\"noopener\">MessagePack</a> ：C/C++的高效二进制序列化库，例如 JSON</li>\n<li><a href=\"http://code.google.com/p/protobuf/\" target=\"_blank\" rel=\"noopener\">protobuf</a> ：协议缓冲，谷歌的数据交换格式。</li>\n<li><a href=\"https://github.com/protobuf-c/protobuf-c\" target=\"_blank\" rel=\"noopener\">protobuf-c</a> ：C语言的协议缓冲实现</li>\n<li><a href=\"https://github.com/real-logic/simple-binary-encoding\" target=\"_blank\" rel=\"noopener\">SimpleBinaryEncoding</a>：用于低延迟应用程序的对二进制格式的应用程序信息的编码和解码。</li>\n<li><a href=\"https://thrift.apache.org/\" target=\"_blank\" rel=\"noopener\">Thrift</a> ：高效的跨语言IPC/RPC，用于C++，Java，Python，PHP，C#和其它多种语言中，最初由Twitter开发。</li>\n</ul>\n<h3 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a><a name=\"t40\" target=\"_blank\"></a>视频</h3><ul>\n<li><a href=\"http://www.webmproject.org/code/\" target=\"_blank\" rel=\"noopener\">libvpx</a> ：VP8/VP9编码解码SDK</li>\n<li><a href=\"https://www.ffmpeg.org/\" target=\"_blank\" rel=\"noopener\">FFmpeg</a> ：一个完整的，跨平台的解决方案，用于记录，转换视频和音频流。</li>\n<li><a href=\"https://github.com/strukturag/libde265\" target=\"_blank\" rel=\"noopener\">libde265</a> ：开放的h.265视频编解码器的实现。</li>\n<li><a href=\"https://github.com/cisco/openh264\" target=\"_blank\" rel=\"noopener\">OpenH264</a>：开源H.364 编解码器。</li>\n<li><a href=\"http://www.theora.org/\" target=\"_blank\" rel=\"noopener\">Theora</a> ：免费开源的视频压缩格式。</li>\n</ul>\n<h3 id=\"虚拟机\"><a href=\"#虚拟机\" class=\"headerlink\" title=\"虚拟机\"></a><a name=\"t41\" target=\"_blank\"></a>虚拟机</h3><ul>\n<li><a href=\"https://github.com/tekknolagi/carp\" target=\"_blank\" rel=\"noopener\">CarpVM</a>：C中有趣的VM，让我们一起来看看这个。</li>\n<li><a href=\"https://github.com/micropython/micropython\" target=\"_blank\" rel=\"noopener\">MicroPython</a> ：旨在实现单片机上Python3.x的实现</li>\n<li><a href=\"https://github.com/jakogut/tinyvm\" target=\"_blank\" rel=\"noopener\">TinyVM</a>：用纯粹的ANSI C编写的小型，快速，轻量级的虚拟机。</li>\n</ul>\n<h3 id=\"Web应用框架\"><a href=\"#Web应用框架\" class=\"headerlink\" title=\"Web应用框架\"></a><a name=\"t42\" target=\"_blank\"></a>Web应用框架</h3><ul>\n<li><a href=\"https://github.com/bel2125/civetweb\" target=\"_blank\" rel=\"noopener\">Civetweb</a> ：提供易于使用，强大的，C/C++嵌入式Web服务器，带有可选的CGI，SSL和Lua支持。</li>\n<li><a href=\"http://cppcms.com/\" target=\"_blank\" rel=\"noopener\">CppCMS</a> ：免费高性能的Web开发框架（不是 CMS）.</li>\n<li><a href=\"https://github.com/ipkn/crow\" target=\"_blank\" rel=\"noopener\">Crow</a> ：一个C++微型web框架（灵感来自于Python Flask）</li>\n<li><a href=\"https://kore.io/\" target=\"_blank\" rel=\"noopener\">Kore</a> :使用C语言开发的用于web应用程序的超快速和灵活的web服务器/框架。</li>\n<li><a href=\"http://www.coralbits.com/libonion/\" target=\"_blank\" rel=\"noopener\">libOnion</a>：轻量级的库，帮助你使用C编程语言创建web服务器。</li>\n<li><a href=\"https://github.com/jlaine/qdjango/\" target=\"_blank\" rel=\"noopener\">QDjango</a>：使用C++编写的，基于Qt库的web框架，试图效仿Django API，因此得此名。</li>\n<li><a href=\"http://www.webtoolkit.eu/wt\" target=\"_blank\" rel=\"noopener\">Wt</a> ：开发Web应用的C++库。</li>\n</ul>\n<h3 id=\"XML\"><a href=\"#XML\" class=\"headerlink\" title=\"XML\"></a><a name=\"t43\" target=\"_blank\"></a>XML</h3><p>XML就是个垃圾，xml的解析很烦人，对于计算机它也是个灾难。这种糟糕的东西完全没有存在的理由了。-Linus Torvalds</p>\n<ul>\n<li><a href=\"http://www.libexpat.org/\" target=\"_blank\" rel=\"noopener\">Expat</a> ：用C语言编写的xml解析库</li>\n<li><a href=\"http://xmlsoft.org/\" target=\"_blank\" rel=\"noopener\">Libxml2</a> ：Gnome的xml C解析器和工具包</li>\n<li><a href=\"http://libxmlplusplus.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">libxml++</a> ：C++的xml解析器</li>\n<li><a href=\"http://pugixml.org/\" target=\"_blank\" rel=\"noopener\">PugiXML</a> ：用于C++的，支持XPath的轻量级，简单快速的XML解析器。</li>\n<li><a href=\"http://rapidxml.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">RapidXml</a> ：试图创建最快速的XML解析器，同时保持易用性，可移植性和合理的W3C兼容性。</li>\n<li><a href=\"http://sourceforge.net/projects/tinyxml/\" target=\"_blank\" rel=\"noopener\">TinyXML</a> ：简单小型的C++XML解析器，可以很容易地集成到其它项目中。</li>\n<li><a href=\"https://github.com/leethomason/tinyxml2\" target=\"_blank\" rel=\"noopener\">TinyXML2</a>：简单快速的C++CML解析器，可以很容易集成到其它项目中。</li>\n<li><a href=\"https://code.google.com/p/ticpp/\" target=\"_blank\" rel=\"noopener\">TinyXML++</a>：TinyXML的一个全新的接口，使用了C++的许多许多优势，模板，异常和更好的异常处理。</li>\n<li><a href=\"http://xerces.apache.org/xerces-c/\" target=\"_blank\" rel=\"noopener\">Xerces-C++</a> ：用可移植的C++的子集编写的XML验证解析器。</li>\n</ul>\n<h3 id=\"多项混杂\"><a href=\"#多项混杂\" class=\"headerlink\" title=\"多项混杂\"></a><a name=\"t44\" target=\"_blank\"></a>多项混杂</h3><p>一些有用的库或者工具，但是不适合上面的分类，或者还没有分类。</p>\n<ul>\n<li><a href=\"https://github.com/cppformat/cppformat\" target=\"_blank\" rel=\"noopener\">C++ Format</a> ：C++的小型，安全和快速格式化库</li>\n<li><a href=\"https://code.google.com/p/casacore/\" target=\"_blank\" rel=\"noopener\">casacore</a> ：从aips++ 派生的一系列C++核心库</li>\n<li><a href=\"https://github.com/louisdx/cxx-prettyprint\" target=\"_blank\" rel=\"noopener\">cxx-prettyprint</a>：用于C++容器的打印库</li>\n<li><a href=\"http://www.dynaforms.com/\" target=\"_blank\" rel=\"noopener\">DynaPDF</a> ：易于使用的PDF生成库</li>\n<li><a href=\"https://github.com/leafsr/gcc-poison\" target=\"_blank\" rel=\"noopener\">gcc-poison</a> ：帮助开发人员禁止应用程序中的不安全的C/C++函数的简单的头文件。</li>\n<li><a href=\"http://code.google.com/p/googlemock/\" target=\"_blank\" rel=\"noopener\">googlemock</a>：编写和使用C++模拟类的库</li>\n<li><a href=\"https://github.com/joyent/http-parser\" target=\"_blank\" rel=\"noopener\">HTTP Parser</a> ：C的http请求/响应解析器</li>\n<li><a href=\"https://github.com/anrieff/libcpuid\" target=\"_blank\" rel=\"noopener\">libcpuid</a> ：用于x86 CPU检测盒特征提取的小型C库</li>\n<li><a href=\"https://github.com/avati/libevil\" target=\"_blank\" rel=\"noopener\">libevil</a> ：许可证管理器</li>\n<li><a href=\"http://www.libusb.org/\" target=\"_blank\" rel=\"noopener\">libusb</a>：允许移动访问USB设备的通用USB库</li>\n<li><a href=\"http://pcre.org/\" target=\"_blank\" rel=\"noopener\">PCRE</a>：正则表达式C库，灵感来自于Perl中正则表达式的功能。</li>\n<li><a href=\"http://www.deltavsoft.com/\" target=\"_blank\" rel=\"noopener\">Remote Call Framework</a> ：C++的进程间通信框架。</li>\n<li><a href=\"http://scintilla.org/\" target=\"_blank\" rel=\"noopener\">Scintilla</a> ：开源的代码编辑控件</li>\n<li><a href=\"https://github.com/wjwwood/serial\" target=\"_blank\" rel=\"noopener\">Serial Communication Library</a> ：C++语言编写的跨平台，串口库。</li>\n<li><a href=\"https://github.com/antirez/sds\" target=\"_blank\" rel=\"noopener\">SDS</a>：C的简单动态字符串库</li>\n<li><a href=\"https://github.com/cesanta/sldr\" target=\"_blank\" rel=\"noopener\">SLDR</a> ：超轻的DNS解析器</li>\n<li><a href=\"https://github.com/cesanta/slre\" target=\"_blank\" rel=\"noopener\">SLRE</a>： 超轻的正则表达式库</li>\n<li><a href=\"https://github.com/rtv/Stage\" target=\"_blank\" rel=\"noopener\">Stage</a> ：移动机器人模拟器</li>\n<li><a href=\"https://code.google.com/p/vartypes/\" target=\"_blank\" rel=\"noopener\">VarTypes</a>：C++/Qt4功能丰富，面向对象的管理变量的框架。</li>\n<li><a href=\"http://zbar.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">ZBar</a>：‘条形码扫描器’库，可以扫描照片，图片和视频流中的条形码，并返回结果。</li>\n<li><a href=\"https://github.com/VerbalExpressions/CppVerbalExpressions\" target=\"_blank\" rel=\"noopener\">CppVerbalExpressions</a> ：易于使用的C++正则表达式</li>\n<li><a href=\"https://github.com/VerbalExpressions/QtVerbalExpressions\" target=\"_blank\" rel=\"noopener\">QtVerbalExpressions</a>：基于C++ VerbalExpressions 库的Qt库</li>\n<li><a href=\"https://github.com/CopernicaMarketingSoftware/PHP-CPP\" target=\"_blank\" rel=\"noopener\">PHP-CPP</a>：使用C++来构建PHP扩展的库</li>\n<li><a href=\"http://bstring.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Better String</a> ：C的另一个字符串库，功能更丰富，但是没有缓冲溢出问题，还包含了一个C++包装器。</li>\n</ul>\n<h3 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a><a name=\"t45\" target=\"_blank\"></a>软件</h3><p>用于创建开发环境的软件</p>\n<h3 id=\"编译器\"><a href=\"#编译器\" class=\"headerlink\" title=\"编译器\"></a><a name=\"t46\" target=\"_blank\"></a>编译器</h3><p>C/C++编译器列表</p>\n<ul>\n<li><a href=\"http://clang.llvm.org/\" target=\"_blank\" rel=\"noopener\">Clang</a> :由苹果公司开发的</li>\n<li><a href=\"https://gcc.gnu.org/\" target=\"_blank\" rel=\"noopener\">GCC</a>：GNU编译器集合</li>\n<li><a href=\"https://software.intel.com/en-us/c-compilers\" target=\"_blank\" rel=\"noopener\">Intel C++ Compiler</a> ：由英特尔公司开发</li>\n<li><a href=\"http://llvm.org/\" target=\"_blank\" rel=\"noopener\">LLVM</a> ：模块化和可重用编译器和工具链技术的集合</li>\n<li><a href=\"http://msdn.microsoft.com/en-us/vstudio/hh386302.aspx\" target=\"_blank\" rel=\"noopener\">Microsoft Visual C++</a> ：MSVC，由微软公司开发</li>\n<li><a href=\"http://www.openwatcom.org/index.php/Main_Page\" target=\"_blank\" rel=\"noopener\">Open WatCom</a> ：Watcom，C，C++和Fortran交叉编译器和工具</li>\n<li><a href=\"http://bellard.org/tcc/\" target=\"_blank\" rel=\"noopener\">TCC</a> ：轻量级的C语言编译器</li>\n</ul>\n<h3 id=\"在线编译器\"><a href=\"#在线编译器\" class=\"headerlink\" title=\"在线编译器\"></a><a name=\"t47\" target=\"_blank\"></a>在线编译器</h3><p>在线C/C++编译器列表</p>\n<ul>\n<li><a href=\"http://codepad.org/\" target=\"_blank\" rel=\"noopener\">codepad</a> ：在线编译器/解释器，一个简单的协作工具</li>\n<li><a href=\"http://codetwist.com/\" target=\"_blank\" rel=\"noopener\">CodeTwist</a>：一个简单的在线编译器/解释器，你可以粘贴的C,C++或者Java代码，在线执行并查看结果</li>\n<li><a href=\"http://coliru.stacked-crooked.com/\" target=\"_blank\" rel=\"noopener\">coliru</a> ：在线编译器/shell， 支持各种C++编译器</li>\n<li><a href=\"http://gcc.godbolt.org/\" target=\"_blank\" rel=\"noopener\">Compiler Explorer</a>：交互式编译器，可以进行汇编输出</li>\n<li><a href=\"http://www.compileonline.com/compile_cpp11_online.php\" target=\"_blank\" rel=\"noopener\">CompileOnline</a>：Linux上在线编译和执行C++程序</li>\n<li><a href=\"http://ideone.com/\" target=\"_blank\" rel=\"noopener\">Ideone</a> ：一个在线编译器和调试工具，允许你在线编译源代码并执行，支持60多种编程语言。</li>\n</ul>\n<h3 id=\"调试器\"><a href=\"#调试器\" class=\"headerlink\" title=\"调试器\"></a><a name=\"t48\" target=\"_blank\"></a>调试器</h3><p>C/C++调试器列表</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Comparison_of_debuggers\" target=\"_blank\" rel=\"noopener\">Comparison of debuggers</a> ：来自维基百科的调试器列表</li>\n<li><a href=\"https://www.gnu.org/software/gdb\" target=\"_blank\" rel=\"noopener\">GDB</a> ：GNU调试器</li>\n<li><a href=\"http://valgrind.org/\" target=\"_blank\" rel=\"noopener\">Valgrind</a>：内存调试，内存泄露检测，性能分析工具。</li>\n</ul>\n<h3 id=\"集成开发环境（IDE）\"><a href=\"#集成开发环境（IDE）\" class=\"headerlink\" title=\"集成开发环境（IDE）\"></a><a name=\"t49\" target=\"_blank\"></a>集成开发环境（IDE）</h3><p>C/C++集成开发环境列表</p>\n<ul>\n<li><a href=\"http://www.jetbrains.com/objc/\" target=\"_blank\" rel=\"noopener\">AppCode</a> ：构建与JetBrains’ IntelliJ IDEA 平台上的用于Objective-C，C,C++，Java和Java开发的集成开发环境</li>\n<li><a href=\"http://www.jetbrains.com/clion/\" target=\"_blank\" rel=\"noopener\">CLion</a>：来自JetBrains的跨平台的C/C++的集成开发环境</li>\n<li><a href=\"http://www.codeblocks.org/\" target=\"_blank\" rel=\"noopener\">Code::Blocks</a> ：免费C，C++和Fortran的集成开发环境</li>\n<li><a href=\"http://codelite.org/\" target=\"_blank\" rel=\"noopener\">CodeLite</a> ：另一个跨平台的免费的C/C++集成开发环境</li>\n<li><a href=\"http://sourceforge.net/projects/orwelldevcpp/\" target=\"_blank\" rel=\"noopener\">Dev-C++</a>：可移植的C/C++/C++11集成开发环境</li>\n<li><a href=\"http://www.eclipse.org/cdt/\" target=\"_blank\" rel=\"noopener\">Eclipse CDT</a>：基于Eclipse平台的功能齐全的C和C++集成开发环境</li>\n<li><a href=\"http://www.geany.org/\" target=\"_blank\" rel=\"noopener\">Geany</a> ：轻量级的快速，跨平台的集成开发环境。</li>\n<li><a href=\"http://www-03.ibm.com/software/products/en/visgen\" target=\"_blank\" rel=\"noopener\">IBM VisualAge</a> ：来自IBM的家庭计算机集成开发环境。</li>\n<li><a href=\"https://github.com/Sarcasm/irony-mode\" target=\"_blank\" rel=\"noopener\">Irony-mode</a>：由libclang驱动的用于Emacs的C/C++微模式</li>\n<li><a href=\"https://www.kdevelop.org/\" target=\"_blank\" rel=\"noopener\">KDevelop</a>：免费开源集成开发环境</li>\n<li><a href=\"http://www.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">Microsoft Visual Studio</a> ：来自微软的集成开发环境</li>\n<li><a href=\"https://netbeans.org/\" target=\"_blank\" rel=\"noopener\">NetBeans</a> ：主要用于Java开发的的集成开发环境，也支持其他语言，尤其是PHP，C/C++和HTML5。</li>\n<li><a href=\"http://qt-project.org/\" target=\"_blank\" rel=\"noopener\">Qt Creator</a>：跨平台的C++，Javascript和QML集成开发环境，也是Qt SDK的一部分。</li>\n<li><a href=\"https://github.com/Andersbakken/rtags\" target=\"_blank\" rel=\"noopener\">rtags</a>：C/C++的客户端服务器索引，用于 跟基于clang的emacs的集成</li>\n<li><a href=\"https://developer.apple.com/xcode/\" target=\"_blank\" rel=\"noopener\">Xcode</a> ：由苹果公司开发</li>\n<li><a href=\"https://valloric.github.io/YouCompleteMe/\" target=\"_blank\" rel=\"noopener\">YouCompleteMe</a>：一个用于Vim的根据你敲的代码快速模糊搜索并进行代码补全的引擎。</li>\n</ul>\n<h3 id=\"构建系统\"><a href=\"#构建系统\" class=\"headerlink\" title=\"构建系统\"></a><a name=\"t50\" target=\"_blank\"></a>构建系统</h3><ul>\n<li><a href=\"https://github.com/rizsotto/Bear\" target=\"_blank\" rel=\"noopener\">Bear</a> ：用于为clang工具生成编译数据库的工具</li>\n<li><a href=\"https://www.biicode.com/\" target=\"_blank\" rel=\"noopener\">Biicode</a>：基于文件的简单依赖管理器。</li>\n<li><a href=\"http://www.cmake.org/\" target=\"_blank\" rel=\"noopener\">CMake</a> ：跨平台的免费开源软件用于管理软件使用独立编译的方法进行构建的过程。</li>\n<li><a href=\"https://github.com/iauns/cpm\" target=\"_blank\" rel=\"noopener\">CPM</a>：基于CMake和Git的C++包管理器</li>\n<li><a href=\"http://www.fastbuild.org/docs/home.html\" target=\"_blank\" rel=\"noopener\">FASTBuild</a>：高性能，开源的构建系统，支持高度可扩展性的编译，缓冲和网络分布。</li>\n<li><a href=\"http://martine.github.io/ninja/\" target=\"_blank\" rel=\"noopener\">Ninja</a> ：专注于速度的小型构建系统</li>\n<li><a href=\"http://www.scons.org/\" target=\"_blank\" rel=\"noopener\">Scons</a> ：使用Python scipt 配置的软件构建工具</li>\n<li><a href=\"https://github.com/deplinenoise/tundra\" target=\"_blank\" rel=\"noopener\">tundra</a> ：高性能的代码构建系统，甚至对于非常大型的软件项目，也能提供最好的增量构建次数。</li>\n<li><a href=\"http://gittup.org/tup/\" target=\"_blank\" rel=\"noopener\">tup</a>：基于文件的构建系统，用于后台监控变化的文件。</li>\n</ul>\n<h3 id=\"静态代码分析\"><a href=\"#静态代码分析\" class=\"headerlink\" title=\"静态代码分析\"></a><a name=\"t51\" target=\"_blank\"></a>静态代码分析</h3><p>提高质量，减少瑕疵的代码分析工具列表</p>\n<ul>\n<li><a href=\"http://cppcheck.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Cppcheck</a> ：静态C/C++代码分析工具</li>\n<li><a href=\"https://code.google.com/p/include-what-you-use/\" target=\"_blank\" rel=\"noopener\">include-what-you-use</a> ：使用clang进行代码分析的工具，可以#include在C和C++文件中。</li>\n<li><a href=\"http://oclint.org/\" target=\"_blank\" rel=\"noopener\">OCLint</a> ：用于C，C++和Objective-C的静态源代码分析工具，用于提高质量，减少瑕疵。</li>\n<li><a href=\"http://clang-analyzer.llvm.org/index.html\" target=\"_blank\" rel=\"noopener\">Clang Static Analyzer</a>：查找C，C++和Objective-C程序bug的源代码分析工具</li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis#C.2FC.2B.2B\" target=\"_blank\" rel=\"noopener\">List of tools for static code analysis</a> ：来自维基百科的静态代码分析工具列表</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>文章出处：<a href=\"http://blog.csdn.net/xiaoxiaoyeyaya/article/details/42541419\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/xiaoxiaoyeyaya/article/details/42541419</a></p>\n<h2 id=\"1-Webbench\"><a href=\"#1-Webbench\" class=\"headerlink\" title=\"- 1. Webbench\"></a><a name=\"t1\" target=\"_blank\"></a>- 1. Webbench</h2><p>Webbench是一个在linux下使用的非常简单的网站压测工具。它使用fork()模拟多个客户端同时访问我们设定的URL，测试网站在压力下工作的性能，最多可以模拟3万个并发连接去测试网站的负载能力。Webbench使用C语言编写, 代码实在太简洁，源码加起来不到600行。</p>\n<p>下载链接：<a href=\"http://home.tiscali.cz/~cz210552/webbench.html\" target=\"_blank\" rel=\"noopener\">http://home.tiscali.cz/~cz210552/webbench.html</a></p>\n<h2 id=\"2-Tinyhttpd\"><a href=\"#2-Tinyhttpd\" class=\"headerlink\" title=\"- 2. Tinyhttpd\"></a><a name=\"t2\" target=\"_blank\"></a>- 2. Tinyhttpd</h2><p>tinyhttpd是一个超轻量型Http Server，使用C语言开发，全部代码只有502行(包括注释)，附带一个简单的Client，可以通过阅读这段代码理解一个 Http Server 的本质。</p>\n<p>下载链接：<a href=\"http://sourceforge.net/projects/tinyhttpd/\" target=\"_blank\" rel=\"noopener\">http://sourceforge.net/projects/tinyhttpd/</a></p>\n<h2 id=\"3-cJSON\"><a href=\"#3-cJSON\" class=\"headerlink\" title=\"- 3. cJSON\"></a><a name=\"t3\" target=\"_blank\"></a>- 3. cJSON</h2><p>cJSON是C语言中的一个JSON编解码器，非常轻量级，C文件只有500多行，速度也非常理想。</p>\n<p>cJSON也存在几个弱点，虽然功能不是非常强大，但cJSON的小身板和速度是最值得赞赏的。其代码被非常好地维护着，结构也简单易懂，可以作为一个非常好的C语言项目进行学习。</p>\n<p>项目主页:<a href=\"http://sourceforge.net/projects/cjson/\" target=\"_blank\" rel=\"noopener\">http://sourceforge.net/projects/cjson/</a></p>\n<h2 id=\"4-CMockery\"><a href=\"#4-CMockery\" class=\"headerlink\" title=\"- 4. CMockery\"></a><a name=\"t4\" target=\"_blank\"></a>- 4. CMockery</h2><p>cmockery是google发布的用于C单元测试的一个轻量级的框架。它很小巧，对其他开源包没有依赖，对被测试代码侵入性小。cmockery的源代码行数不到3K，你阅读一下will_return和mock的源代码就一目了然了。</p>\n<p>主要特点：</p>\n<ul>\n<li>免费且开源，google提供技术支持；</li>\n<li>轻量级的框架，使测试更加快速简单；</li>\n<li>避免使用复杂的编译器特性，对老版本的编译器来讲，兼容性好;</li>\n<li>并不强制要求待测代码必须依赖C99标准，这一特性对许多嵌入式系统的开发很有用</li>\n</ul>\n<p>下载链接：<a href=\"http://code.google.com/p/cmockery/downloads/list\" target=\"_blank\" rel=\"noopener\">http://code.google.com/p/cmockery/downloads/list</a></p>\n<h2 id=\"5-Libev\"><a href=\"#5-Libev\" class=\"headerlink\" title=\"- 5. Libev\"></a><a name=\"t5\" target=\"_blank\"></a>- 5. Libev</h2><p>libev是一个开源的事件驱动库，基于epoll，kqueue等OS提供的基础设施。其以高效出名，它可以将IO事件，定时器，和信号统一起来，统一放在事件处理这一套框架下处理。基于Reactor模式，效率较高，并且代码精简（4.15版本8000多行），是学习事件驱动编程的很好的资源。</p>\n<p>下载链接：<a href=\"http://software.schmorp.de/pkg/libev.html\" target=\"_blank\" rel=\"noopener\">http://software.schmorp.de/pkg/libev.html</a></p>\n<h2 id=\"6-Memcached\"><a href=\"#6-Memcached\" class=\"headerlink\" title=\"- 6. Memcached\"></a><a name=\"t6\" target=\"_blank\"></a>- 6. Memcached</h2><p>Memcached 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态数据库驱动网站的速度。Memcached 基于一个存储键/值对的 hashmap。Memcached-1.4.7的代码量还是可以接受的，只有10K行左右。</p>\n<p>下载地址：<a href=\"http://memcached.org/\" target=\"_blank\" rel=\"noopener\">http://memcached.org/</a></p>\n<h2 id=\"7-Lua\"><a href=\"#7-Lua\" class=\"headerlink\" title=\"- 7. Lua\"></a><a name=\"t7\" target=\"_blank\"></a>- 7. Lua</h2><p>Lua很棒，Lua是巴西人发明的，这些都令我不爽，但是还不至于脸红，最多眼红。</p>\n<p>让我脸红的是Lua的源代码，百分之一百的ANSI C，一点都不掺杂。在任何支持ANSI C编译器的平台上都可以轻松编译通过。我试过，真是一点废话都没有。Lua的代码数量足够小，5.1.4仅仅1.5W行，去掉空白行和注释估计能到1W行。</p>\n<p>下载地址：<a href=\"http://www.lua.org/\" target=\"_blank\" rel=\"noopener\">http://www.lua.org/</a></p>\n<h2 id=\"8-SQLite\"><a href=\"#8-SQLite\" class=\"headerlink\" title=\"- 8. SQLite\"></a><a name=\"t8\" target=\"_blank\"></a>- 8. SQLite</h2><p>SQLite是一个开源的嵌入式关系数据库，实现自包容、零配置、支持事务的SQL数据库引擎。 其特点是高度便携、使用方便、结构紧凑、高效、可靠。足够小，大致3万行C代码，250K。</p>\n<p>下载地址：<a href=\"http://www.sqlite.org/\" target=\"_blank\" rel=\"noopener\">http://www.sqlite.org/</a> 。</p>\n<h2 id=\"9-UNIX-v6\"><a href=\"#9-UNIX-v6\" class=\"headerlink\" title=\"- 9. UNIX v6\"></a><a name=\"t9\" target=\"_blank\"></a>- 9. UNIX v6</h2><p>UNIX V6 的内核源代码包括设备驱动程序在内 约有1 万行，这个数量的源代码，初学者是能够充分理解的。有一种说法是一个人所能理解的代码量上限为1 万行，UNIX V6的内核源代码从数量上看正好在这个范围之内。看到这里，大家是不是也有“如果只有1万行的话没准儿我也能学会”的想法呢？</p>\n<p>另一方面，最近的操作系统，例如Linux 最新版的内核源代码据说超过了1000 万行。就算不是初学者，想完全理解全部代码基本上也是不可能的。</p>\n<p>下载地址：<a href=\"http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6\" target=\"_blank\" rel=\"noopener\">http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6</a></p>\n<h2 id=\"10-NETBSD\"><a href=\"#10-NETBSD\" class=\"headerlink\" title=\"- 10. NETBSD\"></a><a name=\"t10\" target=\"_blank\"></a>- 10. NETBSD</h2><p>NetBSD是一个免费的，具有高度移植性的 UNIX-like 操作系统，是现行可移植平台最多的操作系统，可以在许多平台上执行，从 64bit alpha 服务器到手持设备和嵌入式设备。NetBSD计划的口号是：”Of course it runs NetBSD”。它设计简洁，代码规范，拥有众多先进特性，使得它在业界和学术界广受好评。由于简洁的设计和先进的特征，使得它在生产和研究方面，都有卓越的表现，而且它也有受使用者支持的完整的源代码。许多程序都可以很容易地通过NetBSD Packages Collection获得。</p>\n<p>下载地址：<a href=\"http://www.netbsd.org/\" target=\"_blank\" rel=\"noopener\">http://www.netbsd.org/</a></p>","more":"<h2 id=\"C-资源大全\"><a href=\"#C-资源大全\" class=\"headerlink\" title=\"C++ 资源大全\"></a><a name=\"t11\" target=\"_blank\"></a>C++ 资源大全</h2><p>关于 C++ 框架、库和资源的一些汇总列表，内容包括：标准库、Web应用框架、人工智能、数据库、图片处理、机器学习、日志、代码分析等。</p>\n<h3 id=\"标准库\"><a href=\"#标准库\" class=\"headerlink\" title=\"标准库\"></a><a name=\"t12\" target=\"_blank\"></a>标准库</h3><p>C++标准库，包括了STL容器，算法和函数等。</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/C%2B%2B_Standard_Library\" target=\"_blank\" rel=\"noopener\">C++ Standard Library</a>：是一系列类和函数的集合，使用核心语言编写，也是C++ISO自身标准的一部分。</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Standard_Template_Library\" target=\"_blank\" rel=\"noopener\">Standard Template Library</a>：标准模板库</li>\n<li><a href=\"http://en.wikipedia.org/wiki/C_POSIX_library\" target=\"_blank\" rel=\"noopener\">C POSIX library</a> ： POSIX系统的C标准库规范</li>\n<li><a href=\"https://github.com/cplusplus\" target=\"_blank\" rel=\"noopener\">ISO C++ Standards Committee</a> ：C++标准委员会</li>\n</ul>\n<h3 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a><a name=\"t13\" target=\"_blank\"></a>框架</h3><p>C++通用框架和库</p>\n<ul>\n<li><a href=\"http://stdcxx.apache.org/\" target=\"_blank\" rel=\"noopener\">Apache C++ Standard Library</a>：是一系列算法，容器，迭代器和其他基本组件的集合</li>\n<li><a href=\"http://stlab.adobe.com/\" target=\"_blank\" rel=\"noopener\">ASL</a> ：Adobe源代码库提供了同行的评审和可移植的C++源代码库。</li>\n<li><a href=\"https://github.com/boostorg\" target=\"_blank\" rel=\"noopener\">Boost</a> ：大量通用C++库的集合。</li>\n<li><a href=\"https://github.com/bloomberg/bde\" target=\"_blank\" rel=\"noopener\">BDE</a> ：来自于彭博资讯实验室的开发环境。</li>\n<li><a href=\"http://libcinder.org/\" target=\"_blank\" rel=\"noopener\">Cinder</a>：提供专业品质创造性编码的开源开发社区。</li>\n<li><a href=\"http://ryan.gulix.cl/fossil.cgi/cxxomfort/\" target=\"_blank\" rel=\"noopener\">Cxxomfort</a>：轻量级的，只包含头文件的库，将C++ 11的一些新特性移植到C++03中。</li>\n<li><a href=\"http://dlib.net/\" target=\"_blank\" rel=\"noopener\">Dlib</a>：使用契约式编程和现代C++科技设计的通用的跨平台的C++库。</li>\n<li><a href=\"https://github.com/paulhodge/EASTL\" target=\"_blank\" rel=\"noopener\">EASTL</a> ：EA-STL公共部分</li>\n<li><a href=\"https://github.com/sumeetchhetri/ffead-cpp\" target=\"_blank\" rel=\"noopener\">ffead-cpp</a> ：企业应用程序开发框架</li>\n<li><a href=\"https://github.com/facebook/folly\" target=\"_blank\" rel=\"noopener\">Folly</a>：由Facebook开发和使用的开源C++库</li>\n<li><a href=\"https://github.com/julianstorer/JUCE\" target=\"_blank\" rel=\"noopener\">JUCE</a> ：包罗万象的C++类库，用于开发跨平台软件</li>\n<li><a href=\"https://github.com/facebook/libphenom\" target=\"_blank\" rel=\"noopener\">libPhenom</a>：用于构建高性能和高度可扩展性系统的事件框架。</li>\n<li><a href=\"https://github.com/sourcey/libsourcey\" target=\"_blank\" rel=\"noopener\">LibSourcey</a> ：用于实时的视频流和高性能网络应用程序的C++11 evented IO</li>\n<li><a href=\"https://github.com/koanlogic/libu\" target=\"_blank\" rel=\"noopener\">LibU</a> ： C语言写的多平台工具库</li>\n<li><a href=\"http://loki-lib.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Loki</a> ：C++库的设计，包括常见的设计模式和习语的实现。</li>\n<li><a href=\"https://code.google.com/p/mili/\" target=\"_blank\" rel=\"noopener\">MiLi</a> ：只含头文件的小型C++库</li>\n<li><a href=\"http://www.openframeworks.cc/\" target=\"_blank\" rel=\"noopener\">openFrameworks</a> ：开发C++工具包，用于创意性编码。</li>\n<li><a href=\"http://qt-project.org/\" target=\"_blank\" rel=\"noopener\">Qt</a> ：跨平台的应用程序和用户界面框架</li>\n<li><a href=\"http://code.google.com/p/reason/\" target=\"_blank\" rel=\"noopener\">Reason</a> ：跨平台的框架，使开发者能够更容易地使用Java，.Net和Python，同时也满足了他们对C++性能和优势的需求。</li>\n<li><a href=\"http://root.cern.ch/\" target=\"_blank\" rel=\"noopener\">ROOT</a> ：具备所有功能的一系列面向对象的框架，能够非常高效地处理和分析大量的数据，为欧洲原子能研究机构所用。</li>\n<li><a href=\"http://www.stlport.org/\" target=\"_blank\" rel=\"noopener\">STLport</a>：是STL具有代表性的版本</li>\n<li><a href=\"http://stxxl.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">STXXL</a>：用于额外的大型数据集的标准模板库。</li>\n<li><a href=\"http://www.ultimatepp.org/\" target=\"_blank\" rel=\"noopener\">Ultimate++</a> ：C++跨平台快速应用程序开发框架</li>\n<li><a href=\"http://sourceforge.net/projects/wtl/\" target=\"_blank\" rel=\"noopener\">Windows Template Library</a>：用于开发Windows应用程序和UI组件的C++库</li>\n<li><a href=\"https://github.com/jll63/yomm11\" target=\"_blank\" rel=\"noopener\">Yomm11</a> ：C++11的开放multi-methods.</li>\n</ul>\n<h3 id=\"人工智能\"><a href=\"#人工智能\" class=\"headerlink\" title=\"人工智能\"></a><a name=\"t14\" target=\"_blank\"></a>人工智能</h3><ul>\n<li><a href=\"https://github.com/aigamedev/btsk\" target=\"_blank\" rel=\"noopener\">btsk</a> ：游戏行为树启动器工具</li>\n<li><a href=\"http://eodev.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Evolving Objects</a>：基于模板的，ANSI C++演化计算库，能够帮助你非常快速地编写出自己的随机优化算法。</li>\n<li><a href=\"https://github.com/andrometa/neu\" target=\"_blank\" rel=\"noopener\">Neu</a>：C++11框架，编程语言集，用于创建人工智能应用程序的多用途软件系统。</li>\n</ul>\n<h3 id=\"异步事件循环\"><a href=\"#异步事件循环\" class=\"headerlink\" title=\"异步事件循环\"></a><a name=\"t15\" target=\"_blank\"></a>异步事件循环</h3><ul>\n<li><a href=\"http://think-async.com/\" target=\"_blank\" rel=\"noopener\">Boost.Asio</a>：用于网络和底层I/O编程的跨平台的C++库。</li>\n<li><a href=\"http://libev.schmorp.de/\" target=\"_blank\" rel=\"noopener\">libev</a> ：功能齐全，高性能的时间循环，轻微地仿效libevent，但是不再像libevent一样有局限性，也修复了它的一些bug。</li>\n<li><a href=\"http://libevent.org/\" target=\"_blank\" rel=\"noopener\">libevent</a> ：事件通知库</li>\n<li><a href=\"https://github.com/joyent/libuv\" target=\"_blank\" rel=\"noopener\">libuv</a> ：跨平台异步I/O。</li>\n</ul>\n<h3 id=\"音频\"><a href=\"#音频\" class=\"headerlink\" title=\"音频\"></a><a name=\"t16\" target=\"_blank\"></a>音频</h3><p>音频，声音，音乐，数字化音乐库</p>\n<ul>\n<li><a href=\"http://www.fmod.org/\" target=\"_blank\" rel=\"noopener\">FMOD</a> ：易于使用的跨平台的音频引擎和音频内容的游戏创作工具。</li>\n<li><a href=\"https://github.com/micknoise/Maximilian\" target=\"_blank\" rel=\"noopener\">Maximilian</a> ：C++音频和音乐数字信号处理库</li>\n<li><a href=\"http://www.openal.org/\" target=\"_blank\" rel=\"noopener\">OpenAL</a> ：开源音频库—跨平台的音频API</li>\n<li><a href=\"http://opus-codec.org/\" target=\"_blank\" rel=\"noopener\">Opus</a>：一个完全开放的，免版税的，高度通用的音频编解码器</li>\n<li><a href=\"http://www.speex.org/\" target=\"_blank\" rel=\"noopener\">Speex</a>：免费编解码器，为Opus所废弃</li>\n<li><a href=\"https://github.com/TonicAudio/Tonic\" target=\"_blank\" rel=\"noopener\">Tonic</a>： C++易用和高效的音频合成</li>\n<li><a href=\"http://xiph.org/vorbis/\" target=\"_blank\" rel=\"noopener\">Vorbis</a>： Ogg Vorbis是一种完全开放的，非专有的，免版税的通用压缩音频格式。</li>\n</ul>\n<h3 id=\"生态学\"><a href=\"#生态学\" class=\"headerlink\" title=\"生态学\"></a><a name=\"t17\" target=\"_blank\"></a>生态学</h3><p>生物信息，基因组学和生物技术</p>\n<ul>\n<li><a href=\"http://molpopgen.github.io/libsequence/\" target=\"_blank\" rel=\"noopener\">libsequence</a>：用于表示和分析群体遗传学数据的C++库。</li>\n<li><a href=\"http://www.seqan.de/\" target=\"_blank\" rel=\"noopener\">SeqAn</a>：专注于生物数据序列分析的算法和数据结构。</li>\n<li><a href=\"https://github.com/ekg/vcflib\" target=\"_blank\" rel=\"noopener\">Vcflib</a> ：用于解析和处理VCF文件的C++库</li>\n<li><a href=\"https://github.com/jewmanchue/wham\" target=\"_blank\" rel=\"noopener\">Wham</a>：直接把联想测试应用到BAM文件的基因结构变异。</li>\n</ul>\n<h3 id=\"压缩\"><a href=\"#压缩\" class=\"headerlink\" title=\"压缩\"></a><a name=\"t18\" target=\"_blank\"></a>压缩</h3><p>压缩和归档库</p>\n<ul>\n<li><a href=\"http://www.bzip.org/\" target=\"_blank\" rel=\"noopener\">bzip2</a>：一个完全免费，免费专利和高质量的数据压缩</li>\n<li><a href=\"https://bitbucket.org/attila_afra/doboz/overview\" target=\"_blank\" rel=\"noopener\">doboz</a>：能够快速解压缩的压缩库</li>\n<li><a href=\"https://icculus.org/physfs/\" target=\"_blank\" rel=\"noopener\">PhysicsFS</a>：对各种归档提供抽象访问的库，主要用于视频游戏，设计灵感部分来自于Quake3的文件子系统。</li>\n<li><a href=\"https://projects.kde.org/projects/frameworks/karchive\" target=\"_blank\" rel=\"noopener\">KArchive</a>：用于创建，读写和操作文件档案（例如zip和 tar）的库，它通过QIODevice的一系列子类，使用gzip格式，提供了透明的压缩和解压缩的数据。</li>\n<li><a href=\"https://code.google.com/p/lz4/\" target=\"_blank\" rel=\"noopener\">LZ4</a> ：非常快速的压缩算法</li>\n<li><a href=\"https://code.google.com/p/lzham/\" target=\"_blank\" rel=\"noopener\">LZHAM</a> ：无损压缩数据库，压缩比率跟LZMA接近，但是解压缩速度却要快得多。</li>\n<li><a href=\"http://www.7-zip.org/sdk.html\" target=\"_blank\" rel=\"noopener\">LZMA</a> ：7z格式默认和通用的压缩方法。</li>\n<li><a href=\"http://www.matcode.com/lzmat.htm\" target=\"_blank\" rel=\"noopener\">LZMAT</a> ：及其快速的实时无损数据压缩库</li>\n<li><a href=\"https://code.google.com/p/miniz/\" target=\"_blank\" rel=\"noopener\">miniz</a>：单一的C源文件，紧缩/膨胀压缩库，使用zlib兼容API，ZIP归档读写，PNG写方式。</li>\n<li><a href=\"https://github.com/nmoinvaz/minizip\" target=\"_blank\" rel=\"noopener\">Minizip</a>：Zlib最新bug修复，支持PKWARE磁盘跨越，AES加密和IO缓冲。</li>\n<li><a href=\"https://code.google.com/p/snappy/\" target=\"_blank\" rel=\"noopener\">Snappy</a> ：快速压缩和解压缩</li>\n<li><a href=\"http://zlib.net/\" target=\"_blank\" rel=\"noopener\">ZLib</a> ：非常紧凑的数据流压缩库</li>\n<li><a href=\"http://zziplib.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">ZZIPlib</a>：提供ZIP归档的读权限。</li>\n</ul>\n<h3 id=\"并发性\"><a href=\"#并发性\" class=\"headerlink\" title=\"并发性\"></a><a name=\"t19\" target=\"_blank\"></a>并发性</h3><p>并发执行和多线程</p>\n<ul>\n<li><a href=\"https://github.com/kylelutz/compute\" target=\"_blank\" rel=\"noopener\">Boost.Compute</a> ：用于OpenCL的C++GPU计算库</li>\n<li><a href=\"https://github.com/HSA-Libraries/Bolt\" target=\"_blank\" rel=\"noopener\">Bolt</a> ：针对GPU进行优化的C++模板库</li>\n<li><a href=\"https://github.com/schlangster/cpp.react\" target=\"_blank\" rel=\"noopener\">C++React</a> ：用于C++11的反应性编程库</li>\n<li><a href=\"https://www.threadingbuildingblocks.org/\" target=\"_blank\" rel=\"noopener\">Intel TBB</a> ：Intel线程构件块</li>\n<li><a href=\"https://github.com/libclsph/libclsph\" target=\"_blank\" rel=\"noopener\">Libclsph</a>：基于OpenCL的GPU加速SPH流体仿真库</li>\n<li><a href=\"https://www.khronos.org/opencl/\" target=\"_blank\" rel=\"noopener\">OpenCL</a> ：并行编程的异构系统的开放标准</li>\n<li><a href=\"http://openmp.org/\" target=\"_blank\" rel=\"noopener\">OpenMP</a>：OpenMP API</li>\n<li><a href=\"http://thrust.github.io/\" target=\"_blank\" rel=\"noopener\">Thrust</a> ：类似于C++标准模板库的并行算法库</li>\n<li><a href=\"https://github.com/STEllAR-GROUP/hpx/\" target=\"_blank\" rel=\"noopener\">HPX</a> ：用于任何规模的并行和分布式应用程序的通用C++运行时系统</li>\n<li><a href=\"https://github.com/ddemidov/vexcl\" target=\"_blank\" rel=\"noopener\">VexCL</a> ：用于OpenCL/CUDA 的C++向量表达式模板库。</li>\n</ul>\n<h3 id=\"容器\"><a href=\"#容器\" class=\"headerlink\" title=\"容器\"></a><a name=\"t20\" target=\"_blank\"></a>容器</h3><ul>\n<li><a href=\"https://code.google.com/p/cpp-btree/\" target=\"_blank\" rel=\"noopener\">C++ B-tree</a> ：基于B树数据结构，实现命令内存容器的模板库</li>\n<li><a href=\"https://github.com/goossaert/hashmap\" target=\"_blank\" rel=\"noopener\">Hashmaps</a>： C++中开放寻址哈希表算法的实现</li>\n</ul>\n<h3 id=\"密码学\"><a href=\"#密码学\" class=\"headerlink\" title=\"密码学\"></a><a name=\"t21\" target=\"_blank\"></a>密码学</h3><ul>\n<li><a href=\"http://bcrypt.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Bcrypt</a> ：一个跨平台的文件加密工具，加密文件可以移植到所有可支持的操作系统和处理器中。</li>\n<li><a href=\"https://github.com/fffaraz/awesome-cpp/blob/master\" target=\"_blank\" rel=\"noopener\">BeeCrypt</a>：</li>\n<li><a href=\"http://botan.randombit.net/\" target=\"_blank\" rel=\"noopener\">Botan</a>： C++加密库</li>\n<li><a href=\"http://www.cryptopp.com/\" target=\"_blank\" rel=\"noopener\">Crypto++</a>：一个有关加密方案的免费的C++库</li>\n<li><a href=\"https://www.gnupg.org/\" target=\"_blank\" rel=\"noopener\">GnuPG</a>： OpenPGP标准的完整实现</li>\n<li><a href=\"http://www.gnutls.org/\" target=\"_blank\" rel=\"noopener\">GnuTLS</a> ：实现了SSL，TLS和DTLS协议的安全通信库</li>\n<li><a href=\"http://www.gnu.org/software/libgcrypt/\" target=\"_blank\" rel=\"noopener\">Libgcrypt</a></li>\n<li><a href=\"https://github.com/fffaraz/awesome-cpp/blob/master\" target=\"_blank\" rel=\"noopener\">libmcrypt</a></li>\n<li><a href=\"http://www.libressl.org/\" target=\"_blank\" rel=\"noopener\">LibreSSL</a>：免费的SSL/TLS协议，属于2014 OpenSSL的一个分支</li>\n<li><a href=\"https://github.com/libtom/libtomcrypt\" target=\"_blank\" rel=\"noopener\">LibTomCrypt</a>：一个非常全面的，模块化的，可移植的加密工具</li>\n<li><a href=\"https://github.com/jedisct1/libsodium\" target=\"_blank\" rel=\"noopener\">libsodium</a>：基于NaCI的加密库，固执己见，容易使用</li>\n<li><a href=\"http://www.lysator.liu.se/~nisse/nettle/\" target=\"_blank\" rel=\"noopener\">Nettle</a> 底层的加密库</li>\n<li><a href=\"http://www.openssl.org/\" target=\"_blank\" rel=\"noopener\">OpenSSL</a> ： 一个强大的，商用的，功能齐全的，开放源代码的加密库。</li>\n<li><a href=\"https://github.com/kokke/tiny-AES128-C\" target=\"_blank\" rel=\"noopener\">Tiny AES128 in C</a> ：用C实现的一个小巧，可移植的实现了AES128ESB的加密算法</li>\n</ul>\n<h3 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a><a name=\"t22\" target=\"_blank\"></a>数据库</h3><p>数据库，SQL服务器，ODBC驱动程序和工具</p>\n<ul>\n<li><a href=\"https://github.com/paulftw/hiberlite\" target=\"_blank\" rel=\"noopener\">hiberlite</a> ：用于Sqlite3的C++对象关系映射</li>\n<li><a href=\"https://github.com/redis/hiredis\" target=\"_blank\" rel=\"noopener\">Hiredis</a>： 用于Redis数据库的很简单的C客户端库</li>\n<li><a href=\"https://github.com/google/leveldb\" target=\"_blank\" rel=\"noopener\">LevelDB</a>： 快速键值存储库</li>\n<li><a href=\"http://symas.com/mdb/\" target=\"_blank\" rel=\"noopener\">LMDB</a>：符合数据库四大基本元素的嵌入键值存储</li>\n<li><a href=\"http://www.tangentsoft.net/mysql++/\" target=\"_blank\" rel=\"noopener\">MySQL++</a>：封装了MySql的C API的C++ 包装器</li>\n<li><a href=\"https://github.com/facebook/rocksdb\" target=\"_blank\" rel=\"noopener\">RocksDB</a>：来自Facebook的嵌入键值的快速存储</li>\n<li><a href=\"http://www.sqlite.org/\" target=\"_blank\" rel=\"noopener\">SQLite</a>：一个完全嵌入式的，功能齐全的关系数据库，只有几百KB，可以正确包含到你的项目中。</li>\n</ul>\n<h3 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a><a name=\"t23\" target=\"_blank\"></a>调试</h3><p>调试库， 内存和资源泄露检测，单元测试</p>\n<ul>\n<li><a href=\"http://www.boost.org/doc/libs/master/libs/test/doc/html/index.html\" target=\"_blank\" rel=\"noopener\">Boost.Test</a>：Boost测试库</li>\n<li><a href=\"https://github.com/philsquared/Catch\" target=\"_blank\" rel=\"noopener\">Catch</a>：一个很时尚的，C++原生的框架，只包含头文件，用于单元测试，测试驱动开发和行为驱动开发。</li>\n<li><a href=\"http://www.freedesktop.org/wiki/Software/cppunit/\" target=\"_blank\" rel=\"noopener\">CppUnit</a>：由JUnit移植过来的C++测试框架</li>\n<li><a href=\"http://www.cmake.org/cmake/help/v2.8.8/ctest.html\" target=\"_blank\" rel=\"noopener\">CTest</a>：CMake测试驱动程序</li>\n<li><a href=\"http://code.google.com/p/googletest/\" target=\"_blank\" rel=\"noopener\">googletest</a>：谷歌C++测试框架</li>\n<li><a href=\"https://github.com/deplinenoise/ig-debugheap\" target=\"_blank\" rel=\"noopener\">ig-debugheap</a>：用于跟踪内存错误的多平台调试堆</li>\n<li><a href=\"https://github.com/zorgnax/libtap\" target=\"_blank\" rel=\"noopener\">libtap</a>：用C语言编写测试</li>\n<li><a href=\"http://www.almostinfinite.com/memtrack.html\" target=\"_blank\" rel=\"noopener\">MemTrack</a> —用于C++跟踪内存分配</li>\n<li><a href=\"https://bitbucket.org/jonasmeyer/microprofile/overview\" target=\"_blank\" rel=\"noopener\">microprofile</a>- 跨平台的网络试图分析器</li>\n<li><a href=\"http://www.jera.com/techinfo/jtns/jtn002.html\" target=\"_blank\" rel=\"noopener\">minUnit</a> ：使用C写的迷你单元测试框架，只使用了两个宏</li>\n<li><a href=\"https://github.com/Celtoys/Remotery\" target=\"_blank\" rel=\"noopener\">Remotery</a>：用于web视图的单一C文件分析器</li>\n<li><a href=\"http://unittest-cpp.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">UnitTest++</a>：轻量级的C++单元测试框架</li>\n</ul>\n<h3 id=\"游戏引擎\"><a href=\"#游戏引擎\" class=\"headerlink\" title=\"游戏引擎\"></a><a name=\"t24\" target=\"_blank\"></a>游戏引擎</h3><ul>\n<li><a href=\"http://www.cocos2d-x.org/\" target=\"_blank\" rel=\"noopener\">Cocos2d-x</a> ：一个跨平台框架，用于构建2D游戏，互动图书，演示和其他图形应用程序。</li>\n<li><a href=\"http://gritengine.com/\" target=\"_blank\" rel=\"noopener\">Grit</a> ：社区项目，用于构建一个免费的游戏引擎，实现开放的世界3D游戏。</li>\n<li><a href=\"http://irrlicht.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Irrlicht</a> ：C++语言编写的开源高性能的实时#D引擎</li>\n<li><a href=\"http://polycode.org/\" target=\"_blank\" rel=\"noopener\">Polycode</a>：C++实现的用于创建游戏的开源框架（与Lua绑定）。</li>\n</ul>\n<h3 id=\"图形用户界面\"><a href=\"#图形用户界面\" class=\"headerlink\" title=\"图形用户界面\"></a><a name=\"t25\" target=\"_blank\"></a>图形用户界面</h3><ul>\n<li><a href=\"http://cegui.org.uk/\" target=\"_blank\" rel=\"noopener\">CEGUI</a> ： 很灵活的跨平台GUI库</li>\n<li><a href=\"http://www.fltk.org/index.php\" target=\"_blank\" rel=\"noopener\">FLTK</a> ：快速，轻量级的跨平台的C++GUI工具包。</li>\n<li><a href=\"http://www.gtk.org/\" target=\"_blank\" rel=\"noopener\">GTK+</a>： 用于创建图形用户界面的跨平台工具包</li>\n<li><a href=\"http://www.gtkmm.org/en/\" target=\"_blank\" rel=\"noopener\">gtkmm</a> ：用于受欢迎的GUI库GTK+的官方C++接口。</li>\n<li><a href=\"https://github.com/ocornut/imgui\" target=\"_blank\" rel=\"noopener\">imgui</a>：拥有最小依赖关系的立即模式图形用户界面</li>\n<li><a href=\"http://librocket.com/\" target=\"_blank\" rel=\"noopener\">libRocket</a> ：<a href=\"http://librocket.com/\" target=\"_blank\" rel=\"noopener\">libRocket</a> 是一个C++ HTML/CSS 游戏接口中间件</li>\n<li><a href=\"http://mygui.info/\" target=\"_blank\" rel=\"noopener\">MyGUI</a> ：快速，灵活，简单的GUI</li>\n<li><a href=\"http://invisible-island.net/ncurses/\" target=\"_blank\" rel=\"noopener\">Ncurses</a>：终端用户界面</li>\n<li><a href=\"http://qcustomplot.com/\" target=\"_blank\" rel=\"noopener\">QCustomPlot</a> ：没有更多依赖关系的Qt绘图控件</li>\n<li><a href=\"http://qwt.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Qwt</a> ：用户与技术应用的Qt 控件</li>\n<li><a href=\"http://qwtplot3d.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">QwtPlot3D</a> ：功能丰富的基于Qt/OpenGL的C++编程库，本质上提供了一群3D控件</li>\n<li><a href=\"https://github.com/Twolewis/OtterUI\" target=\"_blank\" rel=\"noopener\">OtterUI</a> ：<a href=\"https://github.com/Twolewis/OtterUI\" target=\"_blank\" rel=\"noopener\">OtterUI</a> 是用于嵌入式系统和互动娱乐软件的用户界面开发解决方案</li>\n<li><a href=\"http://pdcurses.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">PDCurses</a> 包含源代码和预编译库的公共图形函数库</li>\n<li><a href=\"http://wxwidgets.org/\" target=\"_blank\" rel=\"noopener\">wxWidgets</a> C++库，允许开发人员使用一个代码库可以为widows， Mac OS X，Linux和其他平台创建应用程序</li>\n</ul>\n<h3 id=\"图形\"><a href=\"#图形\" class=\"headerlink\" title=\"图形\"></a><a name=\"t26\" target=\"_blank\"></a>图形</h3><ul>\n<li><a href=\"https://github.com/bkaradzic/bgfx\" target=\"_blank\" rel=\"noopener\">bgfx</a>：跨平台的渲染库</li>\n<li><a href=\"http://www.cairographics.org/\" target=\"_blank\" rel=\"noopener\">Cairo</a>：支持多种输出设备的2D图形库</li>\n<li><a href=\"https://github.com/horde3d/Horde3D\" target=\"_blank\" rel=\"noopener\">Horde3D</a> 一个小型的3D渲染和动画引擎</li>\n<li><a href=\"https://github.com/mosra/magnum\" target=\"_blank\" rel=\"noopener\">magnum</a> C++11和OpenGL 2D/3D 图形引擎</li>\n<li><a href=\"http://www.ogre3d.org/\" target=\"_blank\" rel=\"noopener\">Ogre 3D</a> 用C++编写的一个面向场景，实时，灵活的3D渲染引擎（并非游戏引擎）</li>\n<li><a href=\"http://www.openscenegraph.org/\" target=\"_blank\" rel=\"noopener\">OpenSceneGraph</a> 具有高性能的开源3D图形工具包</li>\n<li><a href=\"http://www.panda3d.org/\" target=\"_blank\" rel=\"noopener\">Panda3D</a> 用于3D渲染和游戏开发的框架，用Python和C++编写。</li>\n<li><a href=\"https://github.com/google/skia\" target=\"_blank\" rel=\"noopener\">Skia</a> 用于绘制文字，图形和图像的完整的2D图形库</li>\n<li><a href=\"https://github.com/urho3d/Urho3D\" target=\"_blank\" rel=\"noopener\">urho3d</a> 跨平台的渲染和游戏引擎。</li>\n</ul>\n<h3 id=\"图像处理\"><a href=\"#图像处理\" class=\"headerlink\" title=\"图像处理\"></a><a name=\"t27\" target=\"_blank\"></a>图像处理</h3><ul>\n<li><a href=\"http://www.boost.org/doc/libs/1_56_0/libs/gil/doc/index.html\" target=\"_blank\" rel=\"noopener\">Boost.GIL</a>：通用图像库</li>\n<li><a href=\"http://cimg.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">CImg</a> ：用于图像处理的小型开源C++工具包</li>\n<li><a href=\"http://www.xdp.it/cximage.htm\" target=\"_blank\" rel=\"noopener\">CxImage</a> ：用于加载，保存，显示和转换的图像处理和转换库，可以处理的图片格式包括 BMP, JPEG, GIF, PNG, TIFF, MNG, ICO, PCX, TGA, WMF, WBMP, JBG, J2K。</li>\n<li><a href=\"http://freeimage.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">FreeImage</a> ：开源库，支持现在多媒体应用所需的通用图片格式和其他格式。</li>\n<li><a href=\"http://gdcm.sourceforge.net/wiki/index.php/Main_Page\" target=\"_blank\" rel=\"noopener\">GDCM</a>：Grassroots DICOM 库</li>\n<li><a href=\"http://www.itk.org/\" target=\"_blank\" rel=\"noopener\">ITK</a>：跨平台的开源图像分析系统</li>\n<li><a href=\"http://www.imagemagick.org/script/api.php\" target=\"_blank\" rel=\"noopener\">Magick++</a>：ImageMagick程序的C++接口</li>\n<li><a href=\"http://www.imagemagick.org/script/api.php\" target=\"_blank\" rel=\"noopener\">MagickWnd</a>：ImageMagick程序的C++接口</li>\n<li><a href=\"http://opencv.org/\" target=\"_blank\" rel=\"noopener\">OpenCV</a> ： 开源计算机视觉类库</li>\n<li><a href=\"https://code.google.com/p/tesseract-ocr/\" target=\"_blank\" rel=\"noopener\">tesseract-ocr</a>：OCR引擎</li>\n<li><a href=\"https://github.com/ukoethe/vigra\" target=\"_blank\" rel=\"noopener\">VIGRA</a> ：用于图像分析通用C++计算机视觉库</li>\n<li><a href=\"http://www.vtk.org/\" target=\"_blank\" rel=\"noopener\">VTK</a> ：用于3D计算机图形学，图像处理和可视化的开源免费软件系统。</li>\n</ul>\n<h3 id=\"国际化\"><a href=\"#国际化\" class=\"headerlink\" title=\"国际化\"></a><a name=\"t28\" target=\"_blank\"></a>国际化</h3><ul>\n<li><a href=\"http://www.gnu.org/software/gettext/\" target=\"_blank\" rel=\"noopener\">gettext</a> ：GNU `gettext’</li>\n<li><a href=\"http://site.icu-project.org/\" target=\"_blank\" rel=\"noopener\">IBM ICU</a>：提供Unicode 和全球化支持的C、C++ 和Java库</li>\n<li><a href=\"http://www.gnu.org/software/libiconv/\" target=\"_blank\" rel=\"noopener\">libiconv</a> ：用于不同字符编码之间的编码转换库</li>\n</ul>\n<h3 id=\"Jason\"><a href=\"#Jason\" class=\"headerlink\" title=\"Jason\"></a><a name=\"t29\" target=\"_blank\"></a>Jason</h3><ul>\n<li><a href=\"https://github.com/cesanta/frozen\" target=\"_blank\" rel=\"noopener\">frozen</a> ： C/C++的Jason解析生成器</li>\n<li><a href=\"https://github.com/akheron/jansson\" target=\"_blank\" rel=\"noopener\">Jansson</a> ：进行编解码和处理Jason数据的C语言库</li>\n<li><a href=\"https://github.com/chrismanning/jbson\" target=\"_blank\" rel=\"noopener\">jbson</a> ：C++14中构建和迭代BSON data,和Json 文档的库</li>\n<li><a href=\"https://github.com/jeaye/jeayeson\" target=\"_blank\" rel=\"noopener\">JeayeSON</a>：非常健全的C++ JSON库，只包含头文件</li>\n<li><a href=\"https://github.com/hjiang/jsonxx\" target=\"_blank\" rel=\"noopener\">JSON++</a> ： C++ JSON 解析器</li>\n<li><a href=\"https://github.com/udp/json-parser\" target=\"_blank\" rel=\"noopener\">json-parser</a>：用可移植的ANSI C编写的JSON解析器，占用内存非常少</li>\n<li><a href=\"https://github.com/dropbox/json11\" target=\"_blank\" rel=\"noopener\">json11</a> ：一个迷你的C++11 JSON库</li>\n<li><a href=\"https://github.com/amir-s/jute\" target=\"_blank\" rel=\"noopener\">jute</a> ：非常简单的C++ JSON解析器</li>\n<li><a href=\"https://github.com/vincenthz/libjson\" target=\"_blank\" rel=\"noopener\">ibjson</a>：C语言中的JSON解析和打印库，很容易和任何模型集成。</li>\n<li><a href=\"http://sourceforge.net/projects/libjson/\" target=\"_blank\" rel=\"noopener\">libjson</a>：轻量级的JSON库</li>\n<li><a href=\"https://github.com/kazuho/picojson\" target=\"_blank\" rel=\"noopener\">PicoJSON</a>：C++中JSON解析序列化，只包含头文件</li>\n<li><a href=\"https://github.com/gaudecker/qt-json\" target=\"_blank\" rel=\"noopener\">qt-json</a> ：用于JSON数据和 QVariant层次间的相互解析的简单类</li>\n<li><a href=\"https://github.com/flavio/qjson\" target=\"_blank\" rel=\"noopener\">QJson</a>：将JSON数据映射到QVariant对象的基于Qt的库</li>\n<li><a href=\"https://github.com/miloyip/rapidjson\" target=\"_blank\" rel=\"noopener\">RapidJSON</a>： 用于C++的快速JSON 解析生成器，包含SAX和DOM两种风格的API</li>\n<li><a href=\"https://github.com/lloyd/yajl\" target=\"_blank\" rel=\"noopener\">YAJL</a> ：C语言中快速流JSON解析库</li>\n</ul>\n<h3 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a><a name=\"t30\" target=\"_blank\"></a>日志</h3><ul>\n<li><a href=\"http://www.boost.org/doc/libs/1_56_0/libs/log/doc/html/index.html\" target=\"_blank\" rel=\"noopener\">Boost.Log</a> ：设计非常模块化，并且具有扩展性</li>\n<li><a href=\"https://github.com/easylogging/easyloggingpp\" target=\"_blank\" rel=\"noopener\">easyloggingpp</a>：C++日志库，只包含单一的头文件。</li>\n<li><a href=\"http://log4cpp.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Log4cpp</a> ：一系列C++类库，灵活添加日志到文件，系统日志，IDSA和其他地方。</li>\n<li><a href=\"http://www.templog.org/\" target=\"_blank\" rel=\"noopener\">templog</a>：轻量级C++库，可以添加日志到你的C++应用程序中</li>\n</ul>\n<h3 id=\"机器学习\"><a href=\"#机器学习\" class=\"headerlink\" title=\"机器学习\"></a><a name=\"t31\" target=\"_blank\"></a>机器学习</h3><ul>\n<li><a href=\"https://github.com/BVLC/caffe\" target=\"_blank\" rel=\"noopener\">Caffe</a> ：快速的神经网络框架</li>\n<li><a href=\"https://github.com/liuliu/ccv\" target=\"_blank\" rel=\"noopener\">CCV</a> ：以C语言为核心的现代计算机视觉库</li>\n<li><a href=\"http://www.mlpack.org/\" target=\"_blank\" rel=\"noopener\">mlpack</a> ：可扩展的C++机器学习库</li>\n<li><a href=\"https://github.com/Itseez/opencv\" target=\"_blank\" rel=\"noopener\">OpenCV</a>：开源计算机视觉库</li>\n<li><a href=\"https://github.com/GHamrouni/Recommender\" target=\"_blank\" rel=\"noopener\">Recommender</a>：使用协同过滤进行产品推荐/建议的C语言库。</li>\n<li><a href=\"https://github.com/shogun-toolbox/shogun\" target=\"_blank\" rel=\"noopener\">SHOGUN</a>：Shogun 机器学习工具</li>\n<li><a href=\"https://code.google.com/p/sofia-ml/\" target=\"_blank\" rel=\"noopener\">sofia-ml</a> ：用于机器学习的快速增量算法套件</li>\n</ul>\n<h3 id=\"数学\"><a href=\"#数学\" class=\"headerlink\" title=\"数学\"></a><a name=\"t32\" target=\"_blank\"></a>数学</h3><ul>\n<li><a href=\"http://arma.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Armadillo</a> ：高质量的C++线性代数库，速度和易用性做到了很好的平衡。语法和MatlAB很相似</li>\n<li><a href=\"https://code.google.com/p/blaze-lib/\" target=\"_blank\" rel=\"noopener\">blaze</a>：高性能的C++数学库，用于密集和稀疏算法。</li>\n<li><a href=\"http://ceres-solver.org/\" target=\"_blank\" rel=\"noopener\">ceres-solver</a> ：来自谷歌的C++库，用于建模和解决大型复杂非线性最小平方问题。</li>\n<li><a href=\"http://www.cgal.org/\" target=\"_blank\" rel=\"noopener\">CGal</a>： 高效，可靠的集合算法集合</li>\n<li><a href=\"http://cmldev.net/\" target=\"_blank\" rel=\"noopener\">cml</a> ：用于游戏和图形的免费C++数学库</li>\n<li><a href=\"http://eigen.tuxfamily.org/\" target=\"_blank\" rel=\"noopener\">Eigen</a> ：高级C++模板头文件库，包括线性代数，矩阵，向量操作，数值解决和其他相关的算法。</li>\n<li><a href=\"http://ggt.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">GMTL</a>：数学图形模板库是一组广泛实现基本图形的工具。</li>\n<li><a href=\"https://gmplib.org/\" target=\"_blank\" rel=\"noopener\">GMP</a>：用于个高精度计算的C/C++库，处理有符号整数，有理数和浮点数。</li>\n</ul>\n<h3 id=\"多媒体\"><a href=\"#多媒体\" class=\"headerlink\" title=\"多媒体\"></a><a name=\"t33\" target=\"_blank\"></a>多媒体</h3><ul>\n<li><a href=\"http://gstreamer.freedesktop.org/\" target=\"_blank\" rel=\"noopener\">GStreamer</a> ：构建媒体处理组件图形的库</li>\n<li><a href=\"http://www.live555.com/liveMedia/\" target=\"_blank\" rel=\"noopener\">LIVE555 Streaming Media</a> ：使用开放标准协议(RTP/RTCP, RTSP, SIP) 的多媒体流库</li>\n<li><a href=\"https://wiki.videolan.org/LibVLC\" target=\"_blank\" rel=\"noopener\">libVLC</a> ：libVLC (VLC SDK)媒体框架</li>\n<li><a href=\"https://github.com/wang-bin/QtAV\" target=\"_blank\" rel=\"noopener\">QtAv</a>：基于Qt和FFmpeg的多媒体播放框架，能够帮助你轻而易举地编写出一个播放器</li>\n<li><a href=\"http://www.libsdl.org/\" target=\"_blank\" rel=\"noopener\">SDL</a> ：简单直控媒体层</li>\n<li><a href=\"http://www.sfml-dev.org/\" target=\"_blank\" rel=\"noopener\">SFML</a> ：快速，简单的多媒体库</li>\n</ul>\n<h3 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a><a name=\"t34\" target=\"_blank\"></a>网络</h3><ul>\n<li><a href=\"http://www.cs.wustl.edu/~schmidt/ACE.html\" target=\"_blank\" rel=\"noopener\">ACE</a>：C++面向对象网络变成工具包</li>\n<li><a href=\"http://think-async.com/\" target=\"_blank\" rel=\"noopener\">Boost.Asio</a>：用于网络和底层I/O编程的跨平台的C++库</li>\n<li><a href=\"http://casablanca.codeplex.com/\" target=\"_blank\" rel=\"noopener\">Casablanca</a>：C++ REST SDK</li>\n<li><a href=\"http://cpp-netlib.org/\" target=\"_blank\" rel=\"noopener\">cpp-netlib</a>：高级网络编程的开源库集合</li>\n<li><a href=\"https://github.com/rxi/dyad\" target=\"_blank\" rel=\"noopener\">Dyad.c</a>：C语言的异步网络</li>\n<li><a href=\"http://curl.haxx.se/libcurl/\" target=\"_blank\" rel=\"noopener\">libcurl</a> :多协议文件传输库</li>\n<li><a href=\"https://github.com/cesanta/mongoose\" target=\"_blank\" rel=\"noopener\">Mongoose</a><span style=\"text-decoration:underline\">：</span>非常轻量级的网络服务器</li>\n<li><a href=\"https://github.com/chenshuo/muduo\" target=\"_blank\" rel=\"noopener\">Muduo</a> ：用于Linux多线程服务器的C++非阻塞网络库</li>\n<li><a href=\"https://github.com/cesanta/net_skeleton\" target=\"_blank\" rel=\"noopener\">net_skeleton</a> ：C/C++的TCP 客户端/服务器库</li>\n<li><a href=\"https://github.com/riolet/nope.c\" target=\"_blank\" rel=\"noopener\">nope.c</a> ：基于C语言的超轻型软件平台，用于可扩展的服务器端和网络应用。 对于C编程人员，可以考虑node.js</li>\n<li><a href=\"https://github.com/davidmoreno/onion\" target=\"_blank\" rel=\"noopener\">Onion</a> :C语言HTTP服务器库，其设计为轻量级，易使用。</li>\n<li><a href=\"https://github.com/pocoproject\" target=\"_blank\" rel=\"noopener\">POCO</a>：用于构建网络和基于互联网应用程序的C++类库，可以运行在桌面，服务器，移动和嵌入式系统。</li>\n<li><a href=\"https://github.com/OculusVR/RakNet\" target=\"_blank\" rel=\"noopener\">RakNet</a>：为游戏开发人员提供的跨平台的开源C++网络引擎。</li>\n<li><a href=\"https://github.com/vinipsmaker/tufao\" target=\"_blank\" rel=\"noopener\">Tuf o</a> ：用于Qt之上的C++构建的异步Web框架。</li>\n<li><a href=\"https://github.com/zaphoyd/websocketpp\" target=\"_blank\" rel=\"noopener\">WebSocket++</a> ：基于C++/Boost Aiso的websocket 客户端/服务器库</li>\n<li><a href=\"http://zeromq.org/\" target=\"_blank\" rel=\"noopener\">ZeroMQ</a> ：高速，模块化的异步通信库</li>\n</ul>\n<h3 id=\"物理学\"><a href=\"#物理学\" class=\"headerlink\" title=\"物理学\"></a><a name=\"t35\" target=\"_blank\"></a>物理学</h3><p>动力学仿真引擎</p>\n<ul>\n<li><a href=\"https://code.google.com/p/box2d/\" target=\"_blank\" rel=\"noopener\">Box2D</a>：2D的游戏物理引擎。</li>\n<li><a href=\"https://github.com/bulletphysics/bullet3\" target=\"_blank\" rel=\"noopener\">Bullet</a> ：3D的游戏物理引擎。</li>\n<li><a href=\"https://github.com/slembcke/Chipmunk2D\" target=\"_blank\" rel=\"noopener\">Chipmunk</a> ：快速，轻量级的2D游戏物理库</li>\n<li><a href=\"https://github.com/google/liquidfun\" target=\"_blank\" rel=\"noopener\">LiquidFun</a>：2D的游戏物理引擎</li>\n<li><a href=\"http://www.ode.org/\" target=\"_blank\" rel=\"noopener\">ODE</a> ：开放动力学引擎-开源，高性能库，模拟刚体动力学。</li>\n<li><a href=\"https://github.com/vanderlin/ofxBox2d\" target=\"_blank\" rel=\"noopener\">ofxBox2d</a>：Box2D开源框架包装器。</li>\n<li><a href=\"https://github.com/simbody/simbody\" target=\"_blank\" rel=\"noopener\">Simbody</a> ：高性能C++多体动力学/物理库，模拟关节生物力学和机械系统，像车辆，机器人和人体骨骼。</li>\n</ul>\n<h3 id=\"机器人学\"><a href=\"#机器人学\" class=\"headerlink\" title=\"机器人学\"></a><a name=\"t36\" target=\"_blank\"></a>机器人学</h3><ul>\n<li><a href=\"http://moos-ivp.org/\" target=\"_blank\" rel=\"noopener\">MOOS-IvP</a> ：一组开源C++模块，提供机器人平台的自主权，尤其是自主的海洋车辆。</li>\n<li><a href=\"http://www.mrpt.org/\" target=\"_blank\" rel=\"noopener\">MRPT</a>：移动机器人编程工具包</li>\n<li><a href=\"https://github.com/PointCloudLibrary/pcl\" target=\"_blank\" rel=\"noopener\">PCL</a> ：点云库是一个独立的，大规模的开放项目，用于2D/3D图像和点云处理。</li>\n<li><a href=\"http://www.roboticslibrary.org/\" target=\"_blank\" rel=\"noopener\">Robotics Library (RL)</a>： 一个独立的C++库，包括机器人动力学，运动规划和控制。</li>\n<li><a href=\"http://www.robwork.dk/jrobwork/\" target=\"_blank\" rel=\"noopener\">RobWork</a>：一组C++库的集合，用于机器人系统的仿真和控制。</li>\n<li><a href=\"http://wiki.ros.org/\" target=\"_blank\" rel=\"noopener\">ROS</a> ：机器人操作系统，提供了一些库和工具帮助软件开发人员创建机器人应用程序。</li>\n</ul>\n<h3 id=\"科学计算\"><a href=\"#科学计算\" class=\"headerlink\" title=\"科学计算\"></a><a name=\"t37\" target=\"_blank\"></a>科学计算</h3><ul>\n<li><a href=\"http://www.fftw.org/\" target=\"_blank\" rel=\"noopener\">FFTW</a> :用一维或者多维计算DFT的C语言库。</li>\n<li><a href=\"http://www.gnu.org/software/gsl/\" target=\"_blank\" rel=\"noopener\">GSL</a>：GNU科学库。</li>\n</ul>\n<h3 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a><a name=\"t38\" target=\"_blank\"></a>脚本</h3><ul>\n<li><a href=\"https://github.com/ChaiScript/ChaiScript/\" target=\"_blank\" rel=\"noopener\">ChaiScript</a> ：用于C++的易于使用的嵌入式脚本语言。</li>\n<li><a href=\"http://www.lua.org/\" target=\"_blank\" rel=\"noopener\">Lua</a> ：用于配置文件和基本应用程序脚本的小型快速脚本引擎。</li>\n<li><a href=\"https://github.com/dafrito/luacxx\" target=\"_blank\" rel=\"noopener\">luacxx</a>：用于创建Lua绑定的C++ 11 API</li>\n<li><a href=\"http://www.swig.org/\" target=\"_blank\" rel=\"noopener\">SWIG</a> ：一个可以让你的C++代码链接到JavaScript，Perl，PHP，Python，Tcl和Ruby的包装器/接口生成器</li>\n<li><a href=\"https://github.com/cesanta/v7\" target=\"_blank\" rel=\"noopener\">V7</a>：嵌入式的JavaScript 引擎。</li>\n<li><a href=\"http://code.google.com/p/v8/\" target=\"_blank\" rel=\"noopener\">V8</a> ：谷歌的快速JavaScript引擎，可以被嵌入到任何C++应用程序中。</li>\n</ul>\n<h3 id=\"序列化\"><a href=\"#序列化\" class=\"headerlink\" title=\"序列化\"></a><a name=\"t39\" target=\"_blank\"></a>序列化</h3><ul>\n<li><a href=\"http://kentonv.github.io/capnproto/\" target=\"_blank\" rel=\"noopener\">Cap’n Proto</a> ：快速数据交换格式和RPC系统。</li>\n<li><a href=\"https://github.com/USCiLab/cereal\" target=\"_blank\" rel=\"noopener\">cereal</a> ：C++11 序列化库</li>\n<li><a href=\"https://github.com/google/flatbuffers\" target=\"_blank\" rel=\"noopener\">FlatBuffers</a> ：内存高效的序列化库</li>\n<li><a href=\"https://github.com/msgpack/msgpack-c\" target=\"_blank\" rel=\"noopener\">MessagePack</a> ：C/C++的高效二进制序列化库，例如 JSON</li>\n<li><a href=\"http://code.google.com/p/protobuf/\" target=\"_blank\" rel=\"noopener\">protobuf</a> ：协议缓冲，谷歌的数据交换格式。</li>\n<li><a href=\"https://github.com/protobuf-c/protobuf-c\" target=\"_blank\" rel=\"noopener\">protobuf-c</a> ：C语言的协议缓冲实现</li>\n<li><a href=\"https://github.com/real-logic/simple-binary-encoding\" target=\"_blank\" rel=\"noopener\">SimpleBinaryEncoding</a>：用于低延迟应用程序的对二进制格式的应用程序信息的编码和解码。</li>\n<li><a href=\"https://thrift.apache.org/\" target=\"_blank\" rel=\"noopener\">Thrift</a> ：高效的跨语言IPC/RPC，用于C++，Java，Python，PHP，C#和其它多种语言中，最初由Twitter开发。</li>\n</ul>\n<h3 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a><a name=\"t40\" target=\"_blank\"></a>视频</h3><ul>\n<li><a href=\"http://www.webmproject.org/code/\" target=\"_blank\" rel=\"noopener\">libvpx</a> ：VP8/VP9编码解码SDK</li>\n<li><a href=\"https://www.ffmpeg.org/\" target=\"_blank\" rel=\"noopener\">FFmpeg</a> ：一个完整的，跨平台的解决方案，用于记录，转换视频和音频流。</li>\n<li><a href=\"https://github.com/strukturag/libde265\" target=\"_blank\" rel=\"noopener\">libde265</a> ：开放的h.265视频编解码器的实现。</li>\n<li><a href=\"https://github.com/cisco/openh264\" target=\"_blank\" rel=\"noopener\">OpenH264</a>：开源H.364 编解码器。</li>\n<li><a href=\"http://www.theora.org/\" target=\"_blank\" rel=\"noopener\">Theora</a> ：免费开源的视频压缩格式。</li>\n</ul>\n<h3 id=\"虚拟机\"><a href=\"#虚拟机\" class=\"headerlink\" title=\"虚拟机\"></a><a name=\"t41\" target=\"_blank\"></a>虚拟机</h3><ul>\n<li><a href=\"https://github.com/tekknolagi/carp\" target=\"_blank\" rel=\"noopener\">CarpVM</a>：C中有趣的VM，让我们一起来看看这个。</li>\n<li><a href=\"https://github.com/micropython/micropython\" target=\"_blank\" rel=\"noopener\">MicroPython</a> ：旨在实现单片机上Python3.x的实现</li>\n<li><a href=\"https://github.com/jakogut/tinyvm\" target=\"_blank\" rel=\"noopener\">TinyVM</a>：用纯粹的ANSI C编写的小型，快速，轻量级的虚拟机。</li>\n</ul>\n<h3 id=\"Web应用框架\"><a href=\"#Web应用框架\" class=\"headerlink\" title=\"Web应用框架\"></a><a name=\"t42\" target=\"_blank\"></a>Web应用框架</h3><ul>\n<li><a href=\"https://github.com/bel2125/civetweb\" target=\"_blank\" rel=\"noopener\">Civetweb</a> ：提供易于使用，强大的，C/C++嵌入式Web服务器，带有可选的CGI，SSL和Lua支持。</li>\n<li><a href=\"http://cppcms.com/\" target=\"_blank\" rel=\"noopener\">CppCMS</a> ：免费高性能的Web开发框架（不是 CMS）.</li>\n<li><a href=\"https://github.com/ipkn/crow\" target=\"_blank\" rel=\"noopener\">Crow</a> ：一个C++微型web框架（灵感来自于Python Flask）</li>\n<li><a href=\"https://kore.io/\" target=\"_blank\" rel=\"noopener\">Kore</a> :使用C语言开发的用于web应用程序的超快速和灵活的web服务器/框架。</li>\n<li><a href=\"http://www.coralbits.com/libonion/\" target=\"_blank\" rel=\"noopener\">libOnion</a>：轻量级的库，帮助你使用C编程语言创建web服务器。</li>\n<li><a href=\"https://github.com/jlaine/qdjango/\" target=\"_blank\" rel=\"noopener\">QDjango</a>：使用C++编写的，基于Qt库的web框架，试图效仿Django API，因此得此名。</li>\n<li><a href=\"http://www.webtoolkit.eu/wt\" target=\"_blank\" rel=\"noopener\">Wt</a> ：开发Web应用的C++库。</li>\n</ul>\n<h3 id=\"XML\"><a href=\"#XML\" class=\"headerlink\" title=\"XML\"></a><a name=\"t43\" target=\"_blank\"></a>XML</h3><p>XML就是个垃圾，xml的解析很烦人，对于计算机它也是个灾难。这种糟糕的东西完全没有存在的理由了。-Linus Torvalds</p>\n<ul>\n<li><a href=\"http://www.libexpat.org/\" target=\"_blank\" rel=\"noopener\">Expat</a> ：用C语言编写的xml解析库</li>\n<li><a href=\"http://xmlsoft.org/\" target=\"_blank\" rel=\"noopener\">Libxml2</a> ：Gnome的xml C解析器和工具包</li>\n<li><a href=\"http://libxmlplusplus.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">libxml++</a> ：C++的xml解析器</li>\n<li><a href=\"http://pugixml.org/\" target=\"_blank\" rel=\"noopener\">PugiXML</a> ：用于C++的，支持XPath的轻量级，简单快速的XML解析器。</li>\n<li><a href=\"http://rapidxml.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">RapidXml</a> ：试图创建最快速的XML解析器，同时保持易用性，可移植性和合理的W3C兼容性。</li>\n<li><a href=\"http://sourceforge.net/projects/tinyxml/\" target=\"_blank\" rel=\"noopener\">TinyXML</a> ：简单小型的C++XML解析器，可以很容易地集成到其它项目中。</li>\n<li><a href=\"https://github.com/leethomason/tinyxml2\" target=\"_blank\" rel=\"noopener\">TinyXML2</a>：简单快速的C++CML解析器，可以很容易集成到其它项目中。</li>\n<li><a href=\"https://code.google.com/p/ticpp/\" target=\"_blank\" rel=\"noopener\">TinyXML++</a>：TinyXML的一个全新的接口，使用了C++的许多许多优势，模板，异常和更好的异常处理。</li>\n<li><a href=\"http://xerces.apache.org/xerces-c/\" target=\"_blank\" rel=\"noopener\">Xerces-C++</a> ：用可移植的C++的子集编写的XML验证解析器。</li>\n</ul>\n<h3 id=\"多项混杂\"><a href=\"#多项混杂\" class=\"headerlink\" title=\"多项混杂\"></a><a name=\"t44\" target=\"_blank\"></a>多项混杂</h3><p>一些有用的库或者工具，但是不适合上面的分类，或者还没有分类。</p>\n<ul>\n<li><a href=\"https://github.com/cppformat/cppformat\" target=\"_blank\" rel=\"noopener\">C++ Format</a> ：C++的小型，安全和快速格式化库</li>\n<li><a href=\"https://code.google.com/p/casacore/\" target=\"_blank\" rel=\"noopener\">casacore</a> ：从aips++ 派生的一系列C++核心库</li>\n<li><a href=\"https://github.com/louisdx/cxx-prettyprint\" target=\"_blank\" rel=\"noopener\">cxx-prettyprint</a>：用于C++容器的打印库</li>\n<li><a href=\"http://www.dynaforms.com/\" target=\"_blank\" rel=\"noopener\">DynaPDF</a> ：易于使用的PDF生成库</li>\n<li><a href=\"https://github.com/leafsr/gcc-poison\" target=\"_blank\" rel=\"noopener\">gcc-poison</a> ：帮助开发人员禁止应用程序中的不安全的C/C++函数的简单的头文件。</li>\n<li><a href=\"http://code.google.com/p/googlemock/\" target=\"_blank\" rel=\"noopener\">googlemock</a>：编写和使用C++模拟类的库</li>\n<li><a href=\"https://github.com/joyent/http-parser\" target=\"_blank\" rel=\"noopener\">HTTP Parser</a> ：C的http请求/响应解析器</li>\n<li><a href=\"https://github.com/anrieff/libcpuid\" target=\"_blank\" rel=\"noopener\">libcpuid</a> ：用于x86 CPU检测盒特征提取的小型C库</li>\n<li><a href=\"https://github.com/avati/libevil\" target=\"_blank\" rel=\"noopener\">libevil</a> ：许可证管理器</li>\n<li><a href=\"http://www.libusb.org/\" target=\"_blank\" rel=\"noopener\">libusb</a>：允许移动访问USB设备的通用USB库</li>\n<li><a href=\"http://pcre.org/\" target=\"_blank\" rel=\"noopener\">PCRE</a>：正则表达式C库，灵感来自于Perl中正则表达式的功能。</li>\n<li><a href=\"http://www.deltavsoft.com/\" target=\"_blank\" rel=\"noopener\">Remote Call Framework</a> ：C++的进程间通信框架。</li>\n<li><a href=\"http://scintilla.org/\" target=\"_blank\" rel=\"noopener\">Scintilla</a> ：开源的代码编辑控件</li>\n<li><a href=\"https://github.com/wjwwood/serial\" target=\"_blank\" rel=\"noopener\">Serial Communication Library</a> ：C++语言编写的跨平台，串口库。</li>\n<li><a href=\"https://github.com/antirez/sds\" target=\"_blank\" rel=\"noopener\">SDS</a>：C的简单动态字符串库</li>\n<li><a href=\"https://github.com/cesanta/sldr\" target=\"_blank\" rel=\"noopener\">SLDR</a> ：超轻的DNS解析器</li>\n<li><a href=\"https://github.com/cesanta/slre\" target=\"_blank\" rel=\"noopener\">SLRE</a>： 超轻的正则表达式库</li>\n<li><a href=\"https://github.com/rtv/Stage\" target=\"_blank\" rel=\"noopener\">Stage</a> ：移动机器人模拟器</li>\n<li><a href=\"https://code.google.com/p/vartypes/\" target=\"_blank\" rel=\"noopener\">VarTypes</a>：C++/Qt4功能丰富，面向对象的管理变量的框架。</li>\n<li><a href=\"http://zbar.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">ZBar</a>：‘条形码扫描器’库，可以扫描照片，图片和视频流中的条形码，并返回结果。</li>\n<li><a href=\"https://github.com/VerbalExpressions/CppVerbalExpressions\" target=\"_blank\" rel=\"noopener\">CppVerbalExpressions</a> ：易于使用的C++正则表达式</li>\n<li><a href=\"https://github.com/VerbalExpressions/QtVerbalExpressions\" target=\"_blank\" rel=\"noopener\">QtVerbalExpressions</a>：基于C++ VerbalExpressions 库的Qt库</li>\n<li><a href=\"https://github.com/CopernicaMarketingSoftware/PHP-CPP\" target=\"_blank\" rel=\"noopener\">PHP-CPP</a>：使用C++来构建PHP扩展的库</li>\n<li><a href=\"http://bstring.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Better String</a> ：C的另一个字符串库，功能更丰富，但是没有缓冲溢出问题，还包含了一个C++包装器。</li>\n</ul>\n<h3 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a><a name=\"t45\" target=\"_blank\"></a>软件</h3><p>用于创建开发环境的软件</p>\n<h3 id=\"编译器\"><a href=\"#编译器\" class=\"headerlink\" title=\"编译器\"></a><a name=\"t46\" target=\"_blank\"></a>编译器</h3><p>C/C++编译器列表</p>\n<ul>\n<li><a href=\"http://clang.llvm.org/\" target=\"_blank\" rel=\"noopener\">Clang</a> :由苹果公司开发的</li>\n<li><a href=\"https://gcc.gnu.org/\" target=\"_blank\" rel=\"noopener\">GCC</a>：GNU编译器集合</li>\n<li><a href=\"https://software.intel.com/en-us/c-compilers\" target=\"_blank\" rel=\"noopener\">Intel C++ Compiler</a> ：由英特尔公司开发</li>\n<li><a href=\"http://llvm.org/\" target=\"_blank\" rel=\"noopener\">LLVM</a> ：模块化和可重用编译器和工具链技术的集合</li>\n<li><a href=\"http://msdn.microsoft.com/en-us/vstudio/hh386302.aspx\" target=\"_blank\" rel=\"noopener\">Microsoft Visual C++</a> ：MSVC，由微软公司开发</li>\n<li><a href=\"http://www.openwatcom.org/index.php/Main_Page\" target=\"_blank\" rel=\"noopener\">Open WatCom</a> ：Watcom，C，C++和Fortran交叉编译器和工具</li>\n<li><a href=\"http://bellard.org/tcc/\" target=\"_blank\" rel=\"noopener\">TCC</a> ：轻量级的C语言编译器</li>\n</ul>\n<h3 id=\"在线编译器\"><a href=\"#在线编译器\" class=\"headerlink\" title=\"在线编译器\"></a><a name=\"t47\" target=\"_blank\"></a>在线编译器</h3><p>在线C/C++编译器列表</p>\n<ul>\n<li><a href=\"http://codepad.org/\" target=\"_blank\" rel=\"noopener\">codepad</a> ：在线编译器/解释器，一个简单的协作工具</li>\n<li><a href=\"http://codetwist.com/\" target=\"_blank\" rel=\"noopener\">CodeTwist</a>：一个简单的在线编译器/解释器，你可以粘贴的C,C++或者Java代码，在线执行并查看结果</li>\n<li><a href=\"http://coliru.stacked-crooked.com/\" target=\"_blank\" rel=\"noopener\">coliru</a> ：在线编译器/shell， 支持各种C++编译器</li>\n<li><a href=\"http://gcc.godbolt.org/\" target=\"_blank\" rel=\"noopener\">Compiler Explorer</a>：交互式编译器，可以进行汇编输出</li>\n<li><a href=\"http://www.compileonline.com/compile_cpp11_online.php\" target=\"_blank\" rel=\"noopener\">CompileOnline</a>：Linux上在线编译和执行C++程序</li>\n<li><a href=\"http://ideone.com/\" target=\"_blank\" rel=\"noopener\">Ideone</a> ：一个在线编译器和调试工具，允许你在线编译源代码并执行，支持60多种编程语言。</li>\n</ul>\n<h3 id=\"调试器\"><a href=\"#调试器\" class=\"headerlink\" title=\"调试器\"></a><a name=\"t48\" target=\"_blank\"></a>调试器</h3><p>C/C++调试器列表</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Comparison_of_debuggers\" target=\"_blank\" rel=\"noopener\">Comparison of debuggers</a> ：来自维基百科的调试器列表</li>\n<li><a href=\"https://www.gnu.org/software/gdb\" target=\"_blank\" rel=\"noopener\">GDB</a> ：GNU调试器</li>\n<li><a href=\"http://valgrind.org/\" target=\"_blank\" rel=\"noopener\">Valgrind</a>：内存调试，内存泄露检测，性能分析工具。</li>\n</ul>\n<h3 id=\"集成开发环境（IDE）\"><a href=\"#集成开发环境（IDE）\" class=\"headerlink\" title=\"集成开发环境（IDE）\"></a><a name=\"t49\" target=\"_blank\"></a>集成开发环境（IDE）</h3><p>C/C++集成开发环境列表</p>\n<ul>\n<li><a href=\"http://www.jetbrains.com/objc/\" target=\"_blank\" rel=\"noopener\">AppCode</a> ：构建与JetBrains’ IntelliJ IDEA 平台上的用于Objective-C，C,C++，Java和Java开发的集成开发环境</li>\n<li><a href=\"http://www.jetbrains.com/clion/\" target=\"_blank\" rel=\"noopener\">CLion</a>：来自JetBrains的跨平台的C/C++的集成开发环境</li>\n<li><a href=\"http://www.codeblocks.org/\" target=\"_blank\" rel=\"noopener\">Code::Blocks</a> ：免费C，C++和Fortran的集成开发环境</li>\n<li><a href=\"http://codelite.org/\" target=\"_blank\" rel=\"noopener\">CodeLite</a> ：另一个跨平台的免费的C/C++集成开发环境</li>\n<li><a href=\"http://sourceforge.net/projects/orwelldevcpp/\" target=\"_blank\" rel=\"noopener\">Dev-C++</a>：可移植的C/C++/C++11集成开发环境</li>\n<li><a href=\"http://www.eclipse.org/cdt/\" target=\"_blank\" rel=\"noopener\">Eclipse CDT</a>：基于Eclipse平台的功能齐全的C和C++集成开发环境</li>\n<li><a href=\"http://www.geany.org/\" target=\"_blank\" rel=\"noopener\">Geany</a> ：轻量级的快速，跨平台的集成开发环境。</li>\n<li><a href=\"http://www-03.ibm.com/software/products/en/visgen\" target=\"_blank\" rel=\"noopener\">IBM VisualAge</a> ：来自IBM的家庭计算机集成开发环境。</li>\n<li><a href=\"https://github.com/Sarcasm/irony-mode\" target=\"_blank\" rel=\"noopener\">Irony-mode</a>：由libclang驱动的用于Emacs的C/C++微模式</li>\n<li><a href=\"https://www.kdevelop.org/\" target=\"_blank\" rel=\"noopener\">KDevelop</a>：免费开源集成开发环境</li>\n<li><a href=\"http://www.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">Microsoft Visual Studio</a> ：来自微软的集成开发环境</li>\n<li><a href=\"https://netbeans.org/\" target=\"_blank\" rel=\"noopener\">NetBeans</a> ：主要用于Java开发的的集成开发环境，也支持其他语言，尤其是PHP，C/C++和HTML5。</li>\n<li><a href=\"http://qt-project.org/\" target=\"_blank\" rel=\"noopener\">Qt Creator</a>：跨平台的C++，Javascript和QML集成开发环境，也是Qt SDK的一部分。</li>\n<li><a href=\"https://github.com/Andersbakken/rtags\" target=\"_blank\" rel=\"noopener\">rtags</a>：C/C++的客户端服务器索引，用于 跟基于clang的emacs的集成</li>\n<li><a href=\"https://developer.apple.com/xcode/\" target=\"_blank\" rel=\"noopener\">Xcode</a> ：由苹果公司开发</li>\n<li><a href=\"https://valloric.github.io/YouCompleteMe/\" target=\"_blank\" rel=\"noopener\">YouCompleteMe</a>：一个用于Vim的根据你敲的代码快速模糊搜索并进行代码补全的引擎。</li>\n</ul>\n<h3 id=\"构建系统\"><a href=\"#构建系统\" class=\"headerlink\" title=\"构建系统\"></a><a name=\"t50\" target=\"_blank\"></a>构建系统</h3><ul>\n<li><a href=\"https://github.com/rizsotto/Bear\" target=\"_blank\" rel=\"noopener\">Bear</a> ：用于为clang工具生成编译数据库的工具</li>\n<li><a href=\"https://www.biicode.com/\" target=\"_blank\" rel=\"noopener\">Biicode</a>：基于文件的简单依赖管理器。</li>\n<li><a href=\"http://www.cmake.org/\" target=\"_blank\" rel=\"noopener\">CMake</a> ：跨平台的免费开源软件用于管理软件使用独立编译的方法进行构建的过程。</li>\n<li><a href=\"https://github.com/iauns/cpm\" target=\"_blank\" rel=\"noopener\">CPM</a>：基于CMake和Git的C++包管理器</li>\n<li><a href=\"http://www.fastbuild.org/docs/home.html\" target=\"_blank\" rel=\"noopener\">FASTBuild</a>：高性能，开源的构建系统，支持高度可扩展性的编译，缓冲和网络分布。</li>\n<li><a href=\"http://martine.github.io/ninja/\" target=\"_blank\" rel=\"noopener\">Ninja</a> ：专注于速度的小型构建系统</li>\n<li><a href=\"http://www.scons.org/\" target=\"_blank\" rel=\"noopener\">Scons</a> ：使用Python scipt 配置的软件构建工具</li>\n<li><a href=\"https://github.com/deplinenoise/tundra\" target=\"_blank\" rel=\"noopener\">tundra</a> ：高性能的代码构建系统，甚至对于非常大型的软件项目，也能提供最好的增量构建次数。</li>\n<li><a href=\"http://gittup.org/tup/\" target=\"_blank\" rel=\"noopener\">tup</a>：基于文件的构建系统，用于后台监控变化的文件。</li>\n</ul>\n<h3 id=\"静态代码分析\"><a href=\"#静态代码分析\" class=\"headerlink\" title=\"静态代码分析\"></a><a name=\"t51\" target=\"_blank\"></a>静态代码分析</h3><p>提高质量，减少瑕疵的代码分析工具列表</p>\n<ul>\n<li><a href=\"http://cppcheck.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">Cppcheck</a> ：静态C/C++代码分析工具</li>\n<li><a href=\"https://code.google.com/p/include-what-you-use/\" target=\"_blank\" rel=\"noopener\">include-what-you-use</a> ：使用clang进行代码分析的工具，可以#include在C和C++文件中。</li>\n<li><a href=\"http://oclint.org/\" target=\"_blank\" rel=\"noopener\">OCLint</a> ：用于C，C++和Objective-C的静态源代码分析工具，用于提高质量，减少瑕疵。</li>\n<li><a href=\"http://clang-analyzer.llvm.org/index.html\" target=\"_blank\" rel=\"noopener\">Clang Static Analyzer</a>：查找C，C++和Objective-C程序bug的源代码分析工具</li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis#C.2FC.2B.2B\" target=\"_blank\" rel=\"noopener\">List of tools for static code analysis</a> ：来自维基百科的静态代码分析工具列表</li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjtfrwgbj0000b30ni41s2wbt","category_id":"cjtfrwgbu0004b30nb80clk92","_id":"cjtfrwgc6000ib30n5hvm6u6q"},{"post_id":"cjtfrwgbv0006b30n0makyyiz","category_id":"cjtfrwgc1000bb30nisg6eizo","_id":"cjtfrwgce000ob30n6w71ezu6"},{"post_id":"cjtfrwgby0008b30ngc0usnmw","category_id":"cjtfrwgc6000jb30n9810h4i6","_id":"cjtfrwgch000tb30nsyz00use"},{"post_id":"cjtfrwgc4000fb30nkxoq2o61","category_id":"cjtfrwgce000pb30ngiqfnxq9","_id":"cjtfrwgci000wb30nqe25l4op"},{"post_id":"cjtfrwgcg000sb30nx7tx4f7o","category_id":"cjtfrwgce000pb30ngiqfnxq9","_id":"cjtfrwgci000zb30nhaon2zgr"},{"post_id":"cjtfrwgdt0012b30nf1cev0mh","category_id":"cjtfrwgdu0013b30n3d90qg34","_id":"cjtfrwgdv0016b30n0cdm8it8"}],"PostTag":[{"post_id":"cjtfrwgbj0000b30ni41s2wbt","tag_id":"cjtfrwgbv0005b30nacrowsqn","_id":"cjtfrwgc3000eb30nrnkf71te"},{"post_id":"cjtfrwgbv0006b30n0makyyiz","tag_id":"cjtfrwgc2000cb30n5ml02pqn","_id":"cjtfrwgcb000mb30ni2vi5f7b"},{"post_id":"cjtfrwgc4000fb30nkxoq2o61","tag_id":"cjtfrwgc7000kb30ndwygewf9","_id":"cjtfrwgcg000rb30nacx6ou6q"},{"post_id":"cjtfrwgce000qb30nw2466bk6","tag_id":"cjtfrwgch000ub30n5abtpd8n","_id":"cjtfrwgci000yb30nvontqau9"},{"post_id":"cjtfrwgcg000sb30nx7tx4f7o","tag_id":"cjtfrwgci000xb30nzxxi82nn","_id":"cjtfrwgcj0010b30nk0nch714"},{"post_id":"cjtfrwgdt0012b30nf1cev0mh","tag_id":"cjtfrwgdu0014b30ng1mnr3r3","_id":"cjtfrwgdv0015b30nyjiv8isz"}],"Tag":[{"name":"gdb-tip","_id":"cjtfrwgbv0005b30nacrowsqn"},{"name":"Lua","_id":"cjtfrwgc2000cb30n5ml02pqn"},{"name":"旅行","_id":"cjtfrwgc7000kb30ndwygewf9"},{"name":"algorithm","_id":"cjtfrwgch000ub30n5abtpd8n"},{"name":"movie","_id":"cjtfrwgci000xb30nzxxi82nn"},{"name":"C++","_id":"cjtfrwgdu0014b30ng1mnr3r3"}]}}